[{"F:\\cinecup\\src\\index.js":"1","F:\\cinecup\\src\\reportWebVitals.js":"2","F:\\cinecup\\src\\App.js":"3","F:\\cinecup\\src\\reducer\\index.js":"4","F:\\cinecup\\src\\fontawesome.js":"5","F:\\cinecup\\src\\action\\movie_actions.js":"6","F:\\cinecup\\src\\auth.js":"7","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js":"8","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js":"9","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js":"10","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js":"11","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js":"12","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js":"13","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js":"14","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js":"15","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js":"16","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js":"17","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js":"18","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js":"19","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js":"20","F:\\cinecup\\src\\reducer\\user_reducer.js":"21","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js":"22","F:\\cinecup\\src\\action\\user_actions.js":"23","F:\\cinecup\\src\\action\\types.js":"24","F:\\cinecup\\src\\key\\key.js":"25","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js":"26","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js":"27","F:\\cinecup\\src\\Components\\shareButton.js":"28","F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js":"29","F:\\cinecup\\src\\theme.js":"30","F:\\cinecup\\src\\global.js":"31","F:\\cinecup\\src\\Components\\Toggle.js":"32","F:\\cinecup\\src\\Components\\UserProfile\\UserProfile.js":"33"},{"size":1732,"mtime":1610300859612,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1607518623915,"results":"36","hashOfConfig":"35"},{"size":4278,"mtime":1610565429296,"results":"37","hashOfConfig":"35"},{"size":160,"mtime":1608579878367,"results":"38","hashOfConfig":"35"},{"size":297,"mtime":1607853473199,"results":"39","hashOfConfig":"35"},{"size":16014,"mtime":1610479674970,"results":"40","hashOfConfig":"35"},{"size":1261,"mtime":1609618569289,"results":"41","hashOfConfig":"35"},{"size":3622,"mtime":1609780187909,"results":"42","hashOfConfig":"35"},{"size":4895,"mtime":1609338171651,"results":"43","hashOfConfig":"35"},{"size":2366,"mtime":1607847146261,"results":"44","hashOfConfig":"35"},{"size":5332,"mtime":1610294101714,"results":"45","hashOfConfig":"35"},{"size":8038,"mtime":1610032215988,"results":"46","hashOfConfig":"35"},{"size":9170,"mtime":1609868613038,"results":"47","hashOfConfig":"35"},{"size":7709,"mtime":1610565664402,"results":"48","hashOfConfig":"35"},{"size":5129,"mtime":1610029784279,"results":"49","hashOfConfig":"35"},{"size":12287,"mtime":1610719950362,"results":"50","hashOfConfig":"35"},{"size":9477,"mtime":1610032531061,"results":"51","hashOfConfig":"35"},{"size":19212,"mtime":1610294101681,"results":"52","hashOfConfig":"35"},{"size":2973,"mtime":1610029784246,"results":"53","hashOfConfig":"35"},{"size":14040,"mtime":1610029784225,"results":"54","hashOfConfig":"35"},{"size":6714,"mtime":1610000214293,"results":"55","hashOfConfig":"35"},{"size":432,"mtime":1608038641665,"results":"56","hashOfConfig":"35"},{"size":17722,"mtime":1610288589353,"results":"57","hashOfConfig":"35"},{"size":2367,"mtime":1610479647679,"results":"58","hashOfConfig":"35"},{"size":984,"mtime":1610293720571,"results":"59","hashOfConfig":"35"},{"size":765,"mtime":1608037850795,"results":"60","hashOfConfig":"35"},{"size":577,"mtime":1610029784303,"results":"61","hashOfConfig":"35"},{"size":1222,"mtime":1609868613168,"results":"62","hashOfConfig":"35"},{"size":4045,"mtime":1610475631098,"results":"63","hashOfConfig":"35"},{"size":705,"mtime":1609940218049,"results":"64","hashOfConfig":"35"},{"size":1403,"mtime":1610029784306,"results":"65","hashOfConfig":"35"},{"size":580,"mtime":1610029784305,"results":"66","hashOfConfig":"35"},{"size":4923,"mtime":1610571884681,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"lakeq2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"70"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"70"},"F:\\cinecup\\src\\index.js",[],["156","157"],"F:\\cinecup\\src\\reportWebVitals.js",[],"F:\\cinecup\\src\\App.js",["158"],"import {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport './fontawesome';\r\nimport './App.css';\r\nimport DashBoardPageComponent from './Components/DashboardPageComponent/DashboardPageComponent';\r\nimport ErrorPageComponent from './Components/ErrorPageComponent/ErrorPageComponent';\r\n\r\nimport HeaderComponent from './Components/HeaderComponent/HeaderComponent';\r\nimport HomePageComponent from './Components/HomePageComponent/HomePageComponent';\r\nimport LoginPageComponent from './Components/LoginPageComponent/LoginPageComponent';\r\nimport SearchPageComponent from './Components/SearchPageComponent/SearchPageComponent';\r\nimport SignUpPageComponent from './Components/SignUpPageComponent/SignUpPageComponent';\r\nimport MoviePageComponent from './Components/MoviePageComponent/MoviePageComponent';\r\nimport LeaderboardPageComponent from './Components/LeaderboardPageComponent/LeaderboardPageComponent';\r\nimport AdminDashboardComponent from './Components/AdminDashboardComponent/AdminDashboardComponent';\r\nimport Auth from './auth';\r\nimport ResetPassword from './Components/LoginPageComponent/ResetPassword';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchBlackListedMovies, fetchHistory, fetchMoviesData,getAnnouncement,getVotingOnOff} from './action/movie_actions';\r\nimport React,{useEffect,useState} from 'react';\r\nimport HistoryComponent from './Components/HistoryComponent/HistoryComponent';\r\nimport HistoryDetailComponent from './Components/HistoryDetailComponent/HistoryDetailComponent';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\n\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\nimport UserProfile from './Components/UserProfile/UserProfile';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [theme, setTheme] = useState('light');\r\n  const [componentMounted, setComponentMounted] = useState(false);\r\n  \r\n   function setMode(mode){\r\n    window.localStorage.setItem('theme', mode)\r\n    setTheme(mode)\r\n  };\r\n\r\n   function toggleTheme(){\r\n    if (theme === 'light') {\r\n      setMode('dark')\r\n    } else {\r\n      setMode('light')\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n\r\n    window.matchMedia  && !localTheme ?\r\n      setMode('dark') :\r\n      localTheme ?\r\n        setTheme(localTheme) :\r\n        setMode('light');\r\n\r\n    setComponentMounted(true);\r\n  }, []);\r\n \r\n  useEffect(()=>{\r\n    dispatch(fetchMoviesData());\r\n    dispatch(fetchBlackListedMovies());\r\n    dispatch(getVotingOnOff());\r\n    dispatch(fetchHistory());\r\n    dispatch(getAnnouncement());\r\n},[])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n    <>    \r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n      <GlobalStyles />\r\n        <HeaderComponent toggleTheme={toggleTheme} theme={theme} componentMounted={componentMounted}></HeaderComponent>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(HomePageComponent,null)}></Route>\r\n          <Route exact path=\"/leaderboard\" component={Auth(LeaderboardPageComponent,null)}></Route>\r\n          <Route exact path=\"/login\" component={Auth(LoginPageComponent,false)}></Route>\r\n          <Route exact path=\"/resetpassword\" component={Auth(ResetPassword,false)}></Route>\r\n          <Route exact path=\"/signup\" component={Auth(SignUpPageComponent,false)}></Route>\r\n          <Route exact path=\"/dashboard\" component={Auth(DashBoardPageComponent,true)}></Route>\r\n          <Route exact path=\"/history\" component={Auth(HistoryComponent,null)}></Route>\r\n          <Route exact path=\"/history/:contest_id\" component={Auth(HistoryDetailComponent,null)}></Route>\r\n          <Route exact path=\"/admin\" component={Auth(AdminDashboardComponent,true,true)}></Route>\r\n          <Route exact path=\"/search\" component={Auth(SearchPageComponent,null)}></Route>\r\n          <Route exact path=\"/movie/:movie_id\" component={Auth(MoviePageComponent,null)}></Route>\r\n          <Route exact path=\"/user/:user_id\" component={Auth(UserProfile,null)}></Route>\r\n          <Route path=\"*\" component={Auth(ErrorPageComponent,null)}></Route>\r\n        </Switch>\r\n       \r\n      </div>\r\n    </BrowserRouter>\r\n    \r\n    \r\n    </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\cinecup\\src\\reducer\\index.js",[],"F:\\cinecup\\src\\fontawesome.js",[],"F:\\cinecup\\src\\action\\movie_actions.js",["159","160","161","162"],"import firebase from 'firebase';\r\nimport axios from 'axios';\r\nimport {TMDB_API_KEY,USERNAME,PASSWORD,API} from '../key/key';\r\nimport {\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FAILURE,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n    FETCH_VOTING_SUCCESS,\r\n    START_VOTING_SUCCESS,\r\n    START_VOTING_FAILURE,\r\n    END_VOTING_SUCCESS,\r\n    END_VOTING_FAILURE,\r\n    FETCH_HISTORY_SUCCESS,\r\n    FETCH_ANNOUNCEMENT_SUCCESS,\r\n    ADD_ANNOUNCEMENT_SUCCESS,\r\n    ADD_ANNOUNCEMENT_FAILURE,\r\n    REMOVE_ANNOUNCEMENT_FAILURE,\r\n    REMOVE_ANNOUNCEMENT_SUCCESS\r\n} from './types';\r\n\r\n// ==================================== Fetching Movies Data =======================================\r\nexport const fetchMoviesData = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('movies')\r\n        .orderBy(\"Votes\", \"desc\")\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            let i = 1;\r\n            let j = 1;\r\n            let prevVotes,currVotes;\r\n            querySnapshot.forEach(function(doc) {\r\n                currVotes = doc.data().Votes;\r\n                if(i===1)\r\n                    prevVotes = doc.data().Votes;\r\n                if(prevVotes!==currVotes)\r\n                {\r\n                    j = i;\r\n                    prevVotes = currVotes;\r\n                }\r\n                arr.push({id:doc.data().MovieId, votes:doc.data().Votes, rank:j})\r\n                i++;\r\n            });\r\n            console.log(arr.length)\r\n            xyz(arr)\r\n            .then((result)=>{\r\n                dispatch({\r\n                    type:FETCH_MOVIES_DATA_SUCCESS,\r\n                    payload:result\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nasync function xyz (arr){\r\n    let r = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let element = arr[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.id}?api_key=${TMDB_API_KEY}`)\r\n        r.push({...res.data, rank:element.rank, votes:element.votes}); \r\n            if(i === arr.length - 1)\r\n            {\r\n                console.log(\"BEEP Beep Beep\",r.length,\"BEEP Beep Beep\");\r\n                return r;\r\n            } \r\n      }\r\n}\r\n// ================================ Fetching History ===========================================\r\nexport const fetchHistory = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('history').orderBy(\"Start\",'desc')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().End){\r\n                    let sdate; \r\n                let sDay;\r\n                let sTime;\r\n                if(doc.data().Start){\r\n                   sdate = new Date(doc.data().Start.toMillis());\r\n                   sDay = `${sdate.getDate()} ${sdate.toLocaleString('default', { month: 'short' })},${sdate.getFullYear()}`;\r\n                   sTime = `${sdate.getHours()}:${sdate.getMinutes()}`;\r\n                }\r\n                let edate;\r\n                let eDay;\r\n                let eTime;\r\n                if(doc.data() && doc.data().End ){\r\n                    edate = new Date(doc.data().End.toMillis());\r\n                    eDay = `${edate.getDate()} ${edate.toLocaleString('default', { month: 'short' })},${edate.getFullYear()}`;\r\n                    eTime = `${edate.getHours()}:${edate.getMinutes()}`;\r\n                }\r\n                arr.push({...doc.data(),contestid:doc.id,sDay:sDay,sTime:sTime,eDay:eDay,eTime:eTime})\r\n                }\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:FETCH_HISTORY_SUCCESS,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================ Fetching Blacklisted Movies ==================================\r\n\r\nexport const fetchBlackListedMovies = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('blacklist')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                arr.push(doc.id)\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:BLACKLIST_MOVIE_FETCH,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================== Blacklisting Movie =========================================\r\n\r\nexport const blackListMovie = ({movieId,movieName}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        // getting all users and removing blacklisted movie from their nominations\r\n        db.collection(\"users\").get()\r\n        .then(async function(querySnapshot) {\r\n            var batch = db.batch();\r\n\r\n            let mailto = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n                var usersref = db.collection(\"users\").doc(doc.id);\r\n                    if(doc.data().Nominations.includes(movieId))\r\n                        mailto.push(doc.data().Email);\r\n                    batch.set(usersref,{\r\n                        Nominations: firebase.firestore.FieldValue.arrayRemove(movieId)\r\n                      },{ merge: true });\r\n            })\r\n\r\n            console.log(\"Tu Phodega Tu Phodega Tu Phodega\",mailto);\r\n            // adding movie to blacklist\r\n            let blacklistRef = db.collection('blacklist').doc(movieId.toString())\r\n            batch.set(blacklistRef, {\r\n                MovieId: movieId.toString(),\r\n            })\r\n    \r\n            // deleting movie and it's votes from movies\r\n            let moviesRef = db.collection('movies').doc(movieId.toString())\r\n            batch.delete(moviesRef)\r\n\r\n            let res = await axios.post(`${API}/token`,{username:USERNAME,password:PASSWORD});\r\n            console.log(res);\r\n            if(res.data.accessToken){\r\n                let token = res.data.accessToken;\r\n                axios.post(`${API}/send`,{receivers:mailto,movieName:movieName},\r\n                {\r\n                    headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n                })\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                })\r\n            }\r\n            // Commit the batch\r\n            batch.commit()\r\n            .then(function () {\r\n                dispatch({\r\n                    type:BLACKLIST_MOVIE_SUCCESS,\r\n                })\r\n            });             \r\n        });\r\n    }\r\n}\r\n\r\n// ======================================= Removing Blacklisted Movie ===============================\r\nexport const removeBlacklistedMovie = ({movieId}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"blacklist\").doc(movieId.toString()).delete()\r\n        .then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_SUCCESS\r\n            })\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n                payload:error\r\n            })\r\n        });\r\n    }\r\n}\r\n// Get ---------------------------VotingOnOff---------------------------------------\r\nexport const getVotingOnOff = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_VOTING_SUCCESS,\r\n                    payload:doc.data().on\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== Start Voting =====================================\r\nexport const startVoting = ({Name}) =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.update({\r\n            on: true\r\n        })\r\n        .then(function() {\r\n            db.collection(\"history\").add({\r\n                Name: Name,\r\n                Start:new Date(),\r\n                Ongoing:true,\r\n            })\r\n            .then(function(docRef) {\r\n                console.log(\"Document written with ID: \", docRef.id);\r\n                dispatch({\r\n                    type:START_VOTING_SUCCESS\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error adding document: \", error);\r\n                dispatch({\r\n                    type:START_VOTING_FAILURE\r\n                })\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error updating document: \", error);\r\n            dispatch({\r\n                type:START_VOTING_FAILURE\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== myfunction ======================================\r\nasync function myfunction({docs}){\r\n    let topThree = [];\r\n    console.log(docs.length);\r\n    for(let i=0;i<docs.length;i++)\r\n    {\r\n        let doc = docs[i];\r\n        topThree.push({movieId:doc.data().MovieId,votes:doc.data().Votes,rank:i+1});\r\n        if(i === docs.length-1)\r\n            return topThree;\r\n    }\r\n    return topThree;\r\n}\r\n\r\n// ===================================== End Voting =======================================\r\n\r\nexport const stopVoting = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            const db = firebase.firestore();\r\n            // =================== Getting the top 3 movies =======================\r\n            let movieRef = db.collection(\"movies\").orderBy(\"Votes\", \"desc\")\r\n            let querySnapshot = await movieRef.get()\r\n            // ================= Storing top three in movies array =================\r\n            let topThree = await myfunction(querySnapshot)\r\n            if(topThree.length)\r\n            {\r\n                var batch = db.batch();\r\n                db.collection('history').where(\"Ongoing\", \"==\", true)\r\n                .get()\r\n                .then(function(querySnapshot) {\r\n                    querySnapshot.forEach(function(doc) {\r\n                        let history = db.collection('history').doc(doc.id)\r\n                        batch.set(history, {\r\n                            Movies:topThree,\r\n                            Ongoing:false,\r\n                            End:new Date()\r\n                        },{merge: true})\r\n                    });\r\n                    // =========================== Set voting on to false =================================\r\n                    let onRef = db.collection('on').doc('onoroff')\r\n                    batch.set(onRef,{\r\n                        on:false\r\n                    })\r\n                    // =========================== Deleting Votes of all Movies ===========================\r\n                    db.collection(\"movies\").get()\r\n                    .then(function(querySnapshot) {\r\n                        querySnapshot.forEach(function(doc) {\r\n                            let x = db.collection(\"movies\").doc(doc.id);\r\n                            batch.delete(x);\r\n                        });\r\n                        // =========================== Removing all nominations =======================\r\n                        db.collection(\"users\").get()\r\n                        .then(function(querySnapshot) {\r\n                            querySnapshot.forEach(function(doc) {\r\n                                let x = db.collection(\"users\").doc(doc.id);\r\n                                batch.update(x,{Nominations:[]})\r\n                            });\r\n                            // Commit the batch\r\n                            batch.commit()\r\n                            .then(function () {\r\n                                dispatch({\r\n                                    type:END_VOTING_SUCCESS,\r\n                                })\r\n                            })\r\n                            .catch(function(error) {\r\n                                dispatch({\r\n                                    type:END_VOTING_FAILURE\r\n                                })\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            dispatch({\r\n                                type:END_VOTING_FAILURE\r\n                            })\r\n                        })\r\n                    })\r\n                    .catch(function(error) {\r\n                        dispatch({\r\n                            type:END_VOTING_FAILURE\r\n                        })\r\n                    });\r\n                })\r\n                .catch(function(error) {\r\n                    dispatch({\r\n                        type:END_VOTING_FAILURE\r\n                    })\r\n                });\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type:END_VOTING_FAILURE\r\n                })\r\n            }\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type:END_VOTING_FAILURE\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// ================================= fetch announcement ================================\r\n\r\nexport const getAnnouncement = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"announce\");\r\n        docRef.onSnapshot(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_ANNOUNCEMENT_SUCCESS,\r\n                    payload:doc.data().list\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// ============================== add announcement ======================================\r\nexport const addAnnouncement = (announcement) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        var announcementRef = db.collection(\"on\").doc(\"announce\");\r\n        announcementRef.update({\r\n            list: firebase.firestore.FieldValue.arrayUnion(announcement)\r\n        })\r\n        .then(()=>{\r\n            dispatch({\r\n                type:ADD_ANNOUNCEMENT_SUCCESS\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            dispatch({\r\n                type:ADD_ANNOUNCEMENT_FAILURE\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// ============================= REMOVE ANNOUNCEMENT =====================================\r\nexport const removeAnnouncement = (announcement) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        var announcementRef = db.collection(\"on\").doc(\"announce\");\r\n        announcementRef.update({\r\n            list: firebase.firestore.FieldValue.arrayRemove(announcement)\r\n        })\r\n        .then(()=>{\r\n            dispatch({\r\n                type:REMOVE_ANNOUNCEMENT_SUCCESS\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            dispatch({\r\n                type:REMOVE_ANNOUNCEMENT_FAILURE\r\n            })\r\n        })\r\n    }\r\n}","F:\\cinecup\\src\\auth.js",["163"],"import React, { useEffect } from 'react';\r\nimport { auth } from './action/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function Auth (ComposedClass, status, admin = false) {\r\n    function AuthenticationCheck(props) {\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        useEffect(() => {\r\n            dispatch(auth()).then(async response => {\r\n            console.log(\"------------\",user,\"----------------------\")\r\n            // response is true means user logged in\r\n            // logged in user can not see login and signup page\r\n            if (user.isLoggedIn && status === false) {\r\n                props.history.push('/')\r\n            }\r\n            // redirect to \r\n            if (user.isLoggedIn === false && status === true) {\r\n                props.history.push('/login')\r\n            }\r\n            // if user is not admin\r\n            else if(user.isLoggedIn === true && admin === true && user.user.IsAdmin === false){\r\n                props.history.push('/error');\r\n            }\r\n\r\n        })}, [dispatch,props.history,user.isLoggedIn])\r\n        return (\r\n            <ComposedClass {...props}/>\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js",["164","165","166"],"import React, { useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Search from './Search'\r\nimport Results from './Results'\r\nimport Popup from './Popup'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useSelector} from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nfunction SearchPageComponent(){\r\n  const user = useSelector(state => state.user);\r\n  const [queryString, setqueryString] = useState(\"\");\r\n  const [results,setresults] = useState([]);\r\n  const [selected,setselected] = useState({});\r\n  const [isLoading,setisLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  var apiurl = `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${queryString}`;  \r\n  \r\nlet nominations;\r\nif(user.isLoggedIn)\r\n{\r\n  nominations=user.user.Nominations.length\r\n}\r\nelse{\r\n  nominations=10\r\n}\r\n\r\n  useEffect(() => {\r\n    if(user.error || nominations === 5 || user.successmsg){ \r\n        setOpen(true);\r\n    }\r\n  },[user,nominations])\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const search = () => {\r\n      console.log(queryString);\r\n      if(queryString)\r\n      {\r\n      axios(apiurl)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let results = data.results;\r\n        setresults(results);\r\n        console.log(results);\r\n        setisLoading(false);\r\n      })\r\n      }\r\n      else{\r\n        axios(`https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB_API_KEY}`)\r\n        .then(({ data }) => {\r\n        let results = data.results;\r\n        setresults(results);\r\n        setisLoading(false);\r\n      })\r\n    }\r\n  }\r\n      \r\n  const handleInput = (e) => {\r\n    setisLoading(true);\r\n    setqueryString(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    search();\r\n  },[queryString]);\r\n\r\n  const openPopup = id => {\r\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\r\n      let result = data;\r\n      console.log(result);\r\n      setselected(result);\r\n    });\r\n  }\r\n    \r\n  const closePopup = () => {\r\n    setselected({});\r\n  }\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Movie Search</h1>\r\n        </header>\r\n        <main>\r\n          <Search handleInput={handleInput} search={search} />\r\n          {\r\n            !isLoading ?\r\n            <React.Fragment>\r\n              <Results results={results}/>\r\n              {(typeof selected.Title != \"undefined\") ? <Popup selected={selected} closePopup={closePopup} /> : false}\r\n            </React.Fragment>\r\n            :\r\n            <div className=\"wrapper\">\r\n              <Skeleton variant=\"rect\" animation=\"wave\"  className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n\r\n            </div>\r\n            \r\n          }\r\n          {\r\n              (user.error ) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n                \r\n              </Alert>\r\n              </Snackbar>\r\n              : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n             {\r\n              (nominations === 5) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n               \r\n                You have already nominated 5 movies to add another remove one first\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n        </main>\r\n        \r\n      </div>\r\n    );\r\n     \r\n}\r\n\r\nexport default SearchPageComponent;","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js",["167"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './ErrorPageStyle.css'\r\n\r\nfunction ErrorPageComponent(){\r\n    \r\n        return (\r\n            <div className=\"errorcomp\">\r\n                <section className=\"wrapper\">\r\n                    <div className=\"container\">\r\n                        <div id=\"scene\" className=\"scene\" data-hover-only=\"false\">\r\n                            <div className=\"circle\" data-depth=\"1.2\"></div>\r\n                            <div className=\"one\" data-depth=\"0.9\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"two\" data-depth=\"0.60\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"three\" data-depth=\"0.40\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"p404\" data-depth=\"0.50\">404</p>\r\n                            <p className=\"p404\" data-depth=\"0.10\">404</p>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <article>\r\n                                <p>Uh oh! Looks like you got lost. <br/>Go back to the homepage if you dare!</p>\r\n                                <button><Link to=\"/\">i dare!</Link></button>\r\n                            </article>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ErrorPageComponent;","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js",["168","169"],"import React,{useState,useEffect} from 'react';\r\nimport './HomePageStyle.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport { init } from 'ityped';\r\nimport {Link} from 'react-router-dom'\r\nfunction HomePageComponent (){\r\n        const user = useSelector(state => state.user);\r\n       \r\n        useEffect(()=>{\r\n          if(user.announcement){\r\n            const myElement = document.querySelector('#myElement')\r\n          init(myElement, { showCursor: false, strings:user.announcement })\r\n          }\r\n        },[user.announcement])\r\n        return (\r\n            <>\r\n            <div className=\"wrapper_home\">\r\n\r\n            \r\n            <div className=\"welcome_box\">\r\n            <Grid container >\r\n            \r\n                <Grid item xs={12} md={5} className=\"welcome_text\">\r\n                 <h1 className=\"heading_h\" style={{textDecoration:\"none\"}}>Cinecup Presents</h1>\r\n                 <p className=\"text_home\">CineCup is an online movie voting platform to promote deserving movies. We are hosting several contests in which you can vote for your favourite movie. Whether you want to watch out the latest movies trailer or want to know about the cast or rating we have got you covered. So have a seat and Chill  </p>\r\n                </Grid>\r\n                <Grid item xs={12} md={7} className=\"welcome_image\">\r\n                <img src=\"https://templatemo.com/templates/templatemo_537_art_factory/assets/images/slider-icon.png\"\r\n                         className=\"wel_image\" alt=\"First Vector Graphic\" />\r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            </div>\r\n           \r\n            <Grid container className=\"section\" >\r\n            <Grid item xs={12} md={6} className=\"welcome_image\">\r\n            <img src=\"https://templatemo.com/templates/templatemo_537_art_factory/assets/images/left-image.png\"\r\n                         className=\"wel_image\" alt=\"First Vector Graphic\" />\r\n            </Grid>\r\n                <Grid item xs={12} md={6} className=\"welcome_text\">\r\n                 <h1 className=\"heading_h\">LeaderBoard</h1>\r\n                 <p className=\"text_home\">A place to look for the ranking of the movies in the current contest. Your movie not at the top ?? Do not worry you can search for it and you will get it's current rank and the no of votes it has got till now. You do not need to refresh the leaderboard is updated in realtime.</p>\r\n                 <Link to=\"/leaderboard\">\r\n\r\n                \r\n                 <Button variant=\"outlined\" color=\"secondary\" small>\r\n                   Leaderboard\r\n                 </Button>\r\n                 </Link>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            \r\n            \r\n            <Grid container className=\"section\" >\r\n               <Grid item xs={12} md={6} className=\"imag\">\r\n                <img src=\"https://templatemo.com/templates/templatemo_537_art_factory/assets/images/right-image.png\"\r\n                         className=\"wel_image\" alt=\"First Vector Graphic\" />\r\n                </Grid>\r\n            \r\n                <Grid item xs={12} md={6} className=\"welcome_text\">\r\n                 <h1 className=\"heading_h\">Nomination</h1>\r\n                 <p className=\"text_home\">Hey you can nominate your favourite movie for the award. Hey are you a movie fanatic and love a lot of movies ?? No worries needed you can nominate for 5 of your favourite movies, and do not forget to share your movie with your friends and increase it's chances of winning the contest.</p>\r\n                 <Link to=\"/search\">\r\n\r\n                 \r\n                 <Button variant=\"outlined\" color=\"secondary\" small>\r\n                   Nominate\r\n                 </Button>\r\n                 </Link>\r\n                </Grid>\r\n                \r\n                \r\n            </Grid>\r\n\r\n            \r\n            \r\n            <Grid container className=\"section\">\r\n            <Grid item xs={12} md={6} className=\"imag\">\r\n                <img src=\"https://lukaszadam.com/assets/downloads/javascript_illustration.svg\"\r\n                         className=\"wel_image\" alt=\"First Vector Graphic\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6} className=\"welcome_text\">\r\n                 <h1 className=\"heading_h\">Ranking Algorithm</h1>\r\n                 <p className=\"text_home\">The movie with more votes will get a lower rank. But if two movies will have the same no of votes in a running contest then they will be ranked the same. If the two movies will have the same no of votes till the contest ends then they will be given the ranks decided by the cinecup team.</p>\r\n                 \r\n                </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid container className=\"section\" >\r\n                <Grid item xs={12} md={6} className=\"welcome_text\">\r\n                 <h1 className=\"heading_h\">Announcements</h1>\r\n                 <p className=\"text_home\" id=\"type\">\r\n                 <div id=\"myElement\"></div>\r\n                 </p>\r\n                </Grid>\r\n                \r\n                \r\n            </Grid>\r\n\r\n            </div>\r\n            \r\n               \r\n            </>\r\n        );\r\n   \r\n}\r\n\r\n\r\nexport default HomePageComponent;","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js",["170","171","172","173","174","175"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux\r\nimport {loginwithfacebook, loginwithgoogle, login} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'80px',\r\n      height: '80vh',\r\n      backgroundColor: \"rgb(0, 18, 34)\",\r\n      \r\n      \r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://image.freepik.com/free-vector/login-concept-illustration_114360-739.jpg)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'contain',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nfunction LoginPageComponent(){\r\n    const classes = useStyles();\r\n    const Snackbarclasses = useSnackbarStyles();\r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email,setemail] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n\r\n    useEffect(() => {\r\n      if(user.error){ \r\n          setOpen(true);\r\n      }\r\n    },[user.error])\r\n\r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!emailError && !passwordError && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[passwordError, emailError, email, password])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Login = (e) => {\r\n      e.preventDefault();\r\n      dispatch(login({email:email,password:password}))\r\n    }\r\n    const loginWithGoogle = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithgoogle());\r\n    }\r\n    const loginWithFaceBook = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithfacebook());\r\n    }\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n    \r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (    \r\n    <Grid container component=\"main\" className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} Validate>\r\n            <TextField\r\n              error = {emailError}\r\n              helperText = {emailError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e)=>{setemail(e.target.value);setaltemail(true)}}\r\n            />\r\n            <TextField\r\n              error = {passwordError}\r\n              helperText = {passwordError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"  \r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e)=>{setpassword(e.target.value);setaltpassword(true)}}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={Login}\r\n              disabled = {disabledSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {\r\n              user.error ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Link to=\"/resetpassword\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n                    style={{marginTop:\"25px\",marginBottom:\"25px\"}}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<FontAwesomeIcon icon={faGoogle}/>}\r\n                    onClick={(e) => {loginWithGoogle(e)}} >\r\n                    Login with Google\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<FontAwesomeIcon icon={faFacebookF}/>}\r\n                    onClick={(e) => {loginWithFaceBook(e)}}>\r\n                    Login with Facebook\r\n                </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n    \r\n}\r\n\r\nexport default LoginPageComponent;","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js",["176","177","178","179","180","181"],"import React,{useState,useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './HistoryDetailStyle.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { faStar} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst Cards = () => { \r\n  console.log('started')\r\n  init()\r\n  function init()\r\n  {\r\n    if(document.querySelector(\".cards_carousal\"))\r\n    {\r\n      let cards = document.querySelector(\".cards_carousal\");\r\n      cards.addEventListener('click', clicked, false);\r\n      document.querySelectorAll(\".cards_carousal .card_co\")[1].click();\r\n    }\r\n  }\r\n\r\n \r\n  function clicked(e)\r\n  {\r\n    let card = e.target;\r\n    if(card.getAttribute(\"data-card\")){rearrange(card.getAttribute(\"data-card\"));}\r\n  }\r\n  \r\n  function rearrange(card)\r\n  {\r\n    let cards = document.querySelectorAll(\".cards_carousal .card_co\");\r\n    for(let n = 0; n < cards.length; n++)\r\n    {\r\n      cards[n].classList.remove(\"card--left\");\r\n      cards[n].classList.remove(\"card--center\");\r\n      cards[n].classList.remove(\"card--right\");\r\n    }\r\n    cards[card].classList.add(\"card--center\");\r\n    if(card == 0)\r\n    {\r\n      cards[2].classList.add(\"card--left\");\r\n      cards[1].classList.add(\"card--right\");\r\n    }\r\n    if(card == 1)\r\n    {\r\n      cards[0].classList.add(\"card--left\");\r\n      cards[2].classList.add(\"card--right\");\r\n    }\r\n    if(card == 2)\r\n    {\r\n      cards[1].classList.add(\"card--left\");\r\n      cards[0].classList.add(\"card--right\");\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      alignSelf:\"center\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      margin: 0 ,\r\n      width: '60%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: '20%',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color:\"white\"\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      color:\"white\",\r\n  \r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '70%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '50ch',\r\n        '&:focus': {\r\n          width: '60ch',\r\n        },\r\n      },\r\n    },\r\n    paper: {\r\n      // padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      height:200,\r\n      \r\n      display:\"flex\",\r\n      flexDirection:\"row\",\r\n    },\r\n  }));\r\n\r\n\r\n  function RenderCard ({r}) {     \r\n      let x=r.rank - 1\r\n    return(  \r\n      <>\r\n      <div className=\"card_co fill-blue\" data-card={x}>\r\n      <div className=\"card__icon\" >\r\n      <img src={`https://image.tmdb.org/t/p/w500/${r.poster_path}`} alt=\"Cards Image\" className=\"card--image\"/>\r\n      </div>\r\n      <div className=\"card__detail\">\r\n        <h1>\r\n          <span className=\"star\">\r\n          <FontAwesomeIcon icon={faStar} color=\"#FFD700\" size=\"2x\" >\r\n        \r\n        </FontAwesomeIcon>\r\n          </span>\r\n       \r\n        <span className=\"ranky\">\r\n        {r.rank}\r\n        </span>\r\n        \r\n        </h1>\r\n     \r\n        <h1>{r.title}</h1>\r\n        <h1>Votes : {r.votes}</h1>\r\n        </div>\r\n     </div>\r\n      \r\n     </>  \r\n    )\r\n  }\r\n\r\nconst HistoryDetailComponent = () => {\r\n    const user = useSelector(state => state.user);\r\n    const { contest_id } = useParams();\r\n    const [moviedetail,setmoviedetail] = useState([]);\r\n    const [contest,setcontest] = useState({});\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n      if(user.history)\r\n      {\r\n        for(let i=0;i< user.history.length; i++){\r\n          if(user.history[i].contestid === contest_id)\r\n          {\r\n            setcontest(user.history[i])\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },[user.history,contest_id])\r\n\r\n    useEffect(() => {\r\n        if(contest && contest.Movies)\r\n        fetchData().then((arr)=>{\r\n        setmoviedetail(arr);\r\n        })\r\n        \r\n    },[contest])\r\n    useEffect(()=>{\r\n      Cards()\r\n    })\r\n    async function fetchData(){\r\n      let arr = [];\r\n      for(let i=0;i<contest.Movies.length;i++){\r\n        let element = contest.Movies[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.movieId}?api_key=${TMDB_API_KEY}`)\r\n            let x=res.data\r\n            arr.push({...x,rank:element.rank,votes:element.votes})\r\n            if(i===contest.Movies.length-1)\r\n              return arr;\r\n      }  \r\n    }\r\n\r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (\r\n      <div className=\"wrapper3\">\r\n        \r\n          {  \r\n                moviedetail.length !== 0 ?\r\n                (\r\n                <div className=\"cards_carousal\">\r\n                  {\r\n                  moviedetail.slice(0,3).map((resul) => (              \r\n                  <RenderCard key={resul.id} r={resul}  />   \r\n                  ))\r\n                  }\r\n                </div>\r\n                \r\n                \r\n                )\r\n                :(\r\n                  <CircularProgress style={{marginTop:\"15vw\"}} color=\"secondary\" ></CircularProgress>\r\n                 )\r\n        }\r\n        \r\n         <div className=\"wrapper_history1\">\r\n                     \r\n                     <div className=\"list\">\r\n                       <div className=\"list__header\">\r\n                         <h1 style={{color:\"black\"}}>Leaderboard</h1>\r\n                        \r\n                         \r\n                       </div>\r\n                       <div className=\"list__body\">\r\n                         <table className=\"list__table\" id=\"list-table\">\r\n                         <tr className=\"header_row\">\r\n                         <th className=\"list__cell\">Rank</th>\r\n                       <th className=\"list__cell\">Movie</th>\r\n                       <th className=\"list__cell\">Genre</th>\r\n                       <th className=\"list__cell\">Votes</th>\r\n                       <th class=\"list__cell\">Explore</th>\r\n                     </tr>\r\n                         \r\n                        {  \r\n                                 moviedetail.length !== 0 ?  \r\n                                   (\r\n                                    moviedetail.map((resul) => (              \r\n                                       <tr className=\"list__row\" >\r\n                            \r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.rank}</span></td>\r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.title}</span></td>\r\n                            <td className=\"list__cell\">\r\n                              {\r\n                            resul.genres.slice(0,1).map(genre=>{\r\n                             return <span> {genre.name} </span>\r\n                           })\r\n                         }</td>\r\n                           \r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.votes}</span></td>\r\n                            <td className=\"list__cell\"> \r\n                            <Link to={`/movie/${resul.id}`}   >\r\n                            <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span> \r\n                            </Link></td>\r\n                          </tr>\r\n                                     ))\r\n                                   )\r\n                                   :(\r\n                                     <p style={{color:\"white\"}}> Nothing Here </p>\r\n                                    )\r\n                                 }              \r\n                         \r\n                           \r\n                     \r\n                           \r\n                         </table>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n      \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HistoryDetailComponent;","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js",["182","183","184","185","186","187","188","189","190"],"import {React,useState,useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from 'axios';\r\nimport './MoviePageStyle.css'\r\nimport ShareButton from '../shareButton'\r\nimport Anime, {anime} from 'react-anime'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport firebase from 'firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst MoviePageComponent = () => {\r\n    const user = useSelector(state => state.user);\r\n    const [result, setresult] = useState({});\r\n    const [trailerurl , settrailerurl] = useState(\"\");\r\n    const { movie_id } = useParams();\r\n    const [cast,setCast]=useState([]);\r\n    const [reviews,setReviews]=useState([]);\r\n    const [newReview,setnewReview] = useState(\"\");\r\n    const [newRating,setnewRating] = useState(0);\r\n    const [alreadyReviewed,setalreadyReviewed] = useState(false);\r\n\r\n    async function getUserDetails(obj){\r\n      let querySnapshot = obj.docs;\r\n      const db = firebase.firestore();\r\n      let arr = [];\r\n      for(let i=0;i<querySnapshot.length;i++){\r\n        let doc = querySnapshot[i];\r\n        if(user.isLoggedIn && doc.data().uid === user.user.Email)\r\n          setalreadyReviewed(true);\r\n        var docRef = db.doc(`users/${doc.data().uid}`);\r\n        let userdoc = await docRef.get()\r\n        if (userdoc.exists) {\r\n            arr.push({...userdoc.data(),...doc.data()})\r\n        } else {\r\n            console.log(\"No such document!\");\r\n        }\r\n      }\r\n      return arr;\r\n    }\r\n    // Fetch Review\r\n    useEffect(()=>{\r\n      const db = firebase.firestore();\r\n      db.collection(\"reviews\").where(\"mid\", \"==\", movie_id)\r\n      .get()\r\n      .then(async function(querySnapshot) {\r\n          let arr = [];\r\n          arr = await getUserDetails(querySnapshot)\r\n          setReviews(arr);\r\n      })\r\n      .catch(function(error) {\r\n          console.log(\"Error getting documents: \", error);\r\n      });\r\n    },[user.isLoggedIn])\r\n    // Write Review\r\n    const postReview = (e) => {\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"reviews\").add({\r\n        mid:movie_id,\r\n        uid: user.user.Email,\r\n        rating:newRating,\r\n        review:newReview\r\n      })\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n          setReviews([...reviews,{mid:movie_id, uid:user.user.Email, rating:newRating, review:newReview, Email:user.user.Email, ProfilePic:user.user.ProfilePic, Name: user.user.Name}])\r\n          setalreadyReviewed(true);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n    }\r\n\r\n    let User;\r\n  if(user.isLoggedIn)\r\n  {\r\n    User=user.user\r\n  }\r\n  else{\r\n    User=null\r\n  }\r\n\r\n    var creditsapi = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${TMDB_API_KEY}`\r\n    \r\n\r\n    useEffect(()=>{\r\n      axios(creditsapi)\r\n      .then(({data} ) => {\r\n        if(data && data.cast && data.cast.length )\r\n        {\r\n          console.log(cast)\r\n          setCast(data.cast);\r\n        }\r\n      })\r\n      \r\n    },[])\r\n\r\n    var apiurl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${TMDB_API_KEY}`;\r\n    useEffect(() =>{\r\n      axios(apiurl)\r\n      .then((res) => {\r\n          console.log(result);\r\n          setresult(res.data);\r\n      })\r\n    },[apiurl])\r\n    var trailerapi = `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${TMDB_API_KEY}`\r\n    useEffect(()=>{\r\n      axios(trailerapi)\r\n      .then(({data} ) => {\r\n        if(data && data.results && data.results.length && data.results[0].key)\r\n        {\r\n          console.log(data.results[0].key);\r\n          settrailerurl(data.results[0].key);\r\n        }\r\n      })\r\n    },[trailerapi])\r\n      const opts = {\r\n        \r\n        playerVars: {\r\n          \r\n          autoplay: 0\r\n        },\r\n      };\r\n      if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n    return ( \r\n        <div>\r\n          \r\n           <div className=\"main1\">\r\n             \r\n          \r\n\t<div className=\"image\">\r\n\t\t<img src={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\r\n\t\t<div className=\"overlay\">\r\n    <Anime easing=\"easeOutElastic\"\r\n         duration={1000}\r\n         direction=\"alternate\"\r\n         loop={true}\r\n         delay={(el, index) => index * 240}\r\n         translateX={[-50,20]}\r\n         scale={[.75, .9]}\r\n         >\r\n\t\t\t<h1>{result.title}</h1>\r\n\t\t\t<h4>{result.runtime} min | {result.release_date}</h4>\r\n      </Anime>\r\n      {/* <h4>{result.genres[0].name}</h4> */}\r\n      \r\n      <div  className=\"share_but_m\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.backdrop_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div className=\"afterImage\">\r\n\t\t<div className=\"left1\">\r\n\t\t\t<h3>Description</h3>\r\n\t\t\t<p>{result.overview}\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div className=\"right1\">\r\n    {\r\n              trailerurl ? \r\n              <YouTube videoId={trailerurl} className=\"trail\" opts={opts}  />\r\n              :\r\n              (\r\n              <div>\r\n              </div>\r\n              )  \r\n            }\r\n     \r\n\t\t</div>\r\n    <div className=\"cast_wrapper\">\r\n    <h1 className=\"reviews_header\">\r\n      CAST\r\n      </h1>\r\n      <div className=\"cast_data\">\r\n      {\r\n        \r\n        cast.slice(0,5).map((x)=>{\r\n          return <div className=\"cast_1\">\r\n            <img src={`https://image.tmdb.org/t/p/original/${x.profile_path}`}  className=\"cast_image\"/>\r\n            <span>{x.name}</span>\r\n            </div>\r\n        })\r\n        \r\n      }\r\n\r\n      </div>\r\n    \r\n    </div>\r\n    {\r\n      user.isLoggedIn && !alreadyReviewed ? \r\n      (\r\n    <div className=\"reviews_wrapper\">\r\n    <h1 className=\"reviews_header\">\r\n        ADD REVIEW\r\n    </h1>\r\n    <div class=\"supaviews\">\r\n    <div class=\"supaviews__add\">\r\n      <div class=\"supaview\">\r\n        <h1 class=\"supaview__title\">Add a new review</h1>\r\n        <form id=\"review\">\r\n          <div className=\"user_data\">\r\n            <img src={User.ProfilePic} className=\"avatar\" />\r\n            <span>{User.Name}</span>\r\n          </div>\r\n        <Rating precision=\"0.5\" value={newRating} onChange={e => setnewRating(e.target.value)} />\r\n          <div class=\"supaview__copy\">\r\n            <textarea name=\"message\" placeholder=\"Review\" rows=\"5\" value={newReview} onChange={e => setnewReview(e.target.value)}></textarea>\r\n          </div>\r\n          <button class=\"supaview__submit\" onClick={e => postReview(e) }>Submit review</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n    </div>\r\n      )\r\n      :\r\n      <div></div>\r\n    }\r\n    <div className=\"reviews_wrapper\">\r\n      <h1 className=\"reviews_header\">\r\n        REVIEWS\r\n      </h1>\r\n    <div class=\"container\">\r\n\r\n<div class=\"reviews\">\r\n   {\r\n     (reviews && reviews.length!=0)?\r\n      (\r\n      reviews.map((x)=>{\r\n        return <div class=\"column is-4 testimonial-wrapper\">\r\n      <div class=\"testimonial\">\r\n      <p class=\"quote\"> {x.review}</p>\r\n      <p class=\"attribution\">-<Link to={`/user/${x.Email}`}> {x.Name}</Link></p>\r\n    </div>\r\n  </div>\r\n      })\r\n      ):\r\n      <h2 className=\"text_re\">No reviews found</h2>\r\n    }\r\n    </div>\r\n    \r\n\t\t\r\n\t\r\n\r\n\t</div>\r\n</div>\r\n\t</div>\r\n\t</div>\r\n </div>\r\n    );\r\n};\r\n\r\nexport default MoviePageComponent;","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js",["191","192"],"import React from 'react';\r\nimport './LeaderboardStyles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Img2 from '../../icons/Asset 1@2x.png'\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ShareButton from '../shareButton'\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf:\"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0 ,\r\n    width: '100%',\r\n    \r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:\"white\"\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: fade(theme.palette.common.black, 0.45),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.55),\r\n    },\r\n    width:\"100%\",\r\n  },\r\n  inputInput: {\r\n    \r\n    color:\"white\",\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    \r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height:200,\r\n    \r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n  },\r\n}));\r\nconst LeaderboardPageComponent = () => {\r\n  const classes = useStyles();\r\n    const user = useSelector(state => state.user);\r\n    let result = user.movies ? user.movies : [] ;\r\n\r\n   \r\n    if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n    return (\r\n        <div className=\"wrapper2\">\r\n                      <div className=\"wrapper_history\">\r\n                     \r\n  <div className=\"list\">\r\n    <div className=\"list__header\">\r\n      <h1 >Leaderboard</h1>\r\n      {result.length !== 0 && <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search','id':'sear'}}\r\n              onChange={()=>{\r\n                  var all = document.getElementById(\"list-table\").getElementsByClassName(\"list__row\");\r\n                \r\n                console.log(all)\r\n                for(var i=0;i<all.length;i++)\r\n                  {\r\n                    var txtValue = all[i].innerText;\r\n                    console.log(txtValue)\r\n                    if (txtValue.toLowerCase().includes(document.getElementById(\"sear\").value) ) {\r\n                      all[i].style.display = \"\";\r\n                    } else {\r\n                      all[i].style.display = \"none\";\r\n                    }\r\n                    \r\n                  } \r\n              }}\r\n              \r\n            />\r\n            }\r\n    </div>\r\n    {\r\n      result.length !== 0 ?\r\n      (\r\n    <div className=\"list__body\">\r\n      <table className=\"list__table\" id=\"list-table\">\r\n      <tr className=\"header_row\">\r\n      <th className=\"list__cell\">Rank</th>\r\n    <th className=\"list__cell\">Movie</th>\r\n    <th className=\"list__cell\">Genre</th>\r\n    <th className=\"list__cell\">Votes</th>\r\n    <th class=\"list__cell\">Explore</th>\r\n  </tr>\r\n      \r\n     {result.map((resul) => (              \r\n                    <tr className=\"list__row\" >\r\n         \r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.rank}</span></td>\r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.title}</span></td>\r\n         <td className=\"list__cell\">\r\n           {\r\n         resul.genres.slice(0,1).map(genre=>{\r\n          return <span> {genre.name} </span>\r\n        })\r\n        }</td>\r\n        \r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.votes}</span></td>\r\n         <td className=\"list__cell\"> \r\n         <Link to={`/movie/${resul.id}`}   >\r\n         <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span> \r\n         </Link></td>\r\n       </tr>\r\n         ))  \r\n      }        \r\n                \r\n      </table>\r\n    </div>\r\n      )\r\n      :(\r\n                  <div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Ongoing contest</h2>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n      )\r\n                \r\n  }\r\n  </div>\r\n</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaderboardPageComponent;","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js",["193","194","195","196","197","198","199"],"F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js",["200","201","202","203"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\n// redux\r\nimport {register} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop:'80px',\r\n    height: '80vh',\r\n    backgroundColor: \"rgb(0, 18, 34)\",\r\n    \r\n    \r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://image.freepik.com/free-vector/account-concept-illustration_114360-399.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding:theme.spacing(1)\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '80%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\nfunction SignUpPageComponent(){\r\n    const classes = useStyles();\r\n\r\n    \r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [firstname,setfirstname] = useState(\"\");\r\n    const [lastname,setlastname] = useState(\"\");\r\n    const [email,setemail] = useState(\"\");\r\n    const [profilepic,setprofilepic]=useState(null);\r\n    const [password,setpassword] = useState(\"\");\r\n    const [firstnameError,setfirstnameError] = useState(\"\");\r\n    const [lastnameError,setlastnameError] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altfirstname,setaltfirstname] = useState(false);\r\n    const [altlastname,setaltlastname] = useState(false);\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n  \r\n    \r\n    function Alert(props) {\r\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    useEffect(() => {\r\n      if(user.error || user.successmsg){ \r\n          setOpen(true);\r\n      }\r\n    },[user])\r\n\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if(altfirstname && firstname.length<3)\r\n      setfirstnameError(\"Firstname must be more than 2 characters\")\r\n      else\r\n      setfirstnameError(\"\")\r\n    },[altfirstname, firstname])\r\n\r\n    useEffect(() => {\r\n      if(altlastname && lastname.length<3)\r\n      setlastnameError(\"Lastname must be more than 2 characters\")\r\n      else\r\n      setlastnameError(\"\")\r\n    },[altlastname, lastname])\r\n    \r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!firstnameError && !lastnameError && !emailError && !passwordError && firstname && lastname && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[firstnameError, lastnameError, passwordError, emailError, firstname, lastname, email, password])\r\n    \r\n    const handleChange = (e) => {\r\n      \r\n      if (e.target.files[0]) {\r\n        \r\n        setprofilepic(e.target.files[0]);\r\n        \r\n      }\r\n    }\r\n    \r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const signUp = (e) => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        firstname,lastname,email,password,profilepic\r\n      }\r\n      console.log(dataToSubmit)\r\n      dispatch(register(dataToSubmit));\r\n    }\r\n    \r\n\r\n    \r\n\r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n        return (\r\n          <Grid container component=\"main\" className={classes.root}>\r\n   \r\n     <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} Validate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {firstnameError}\r\n                helperText = {firstnameError}\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(e) => {setfirstname(e.target.value);setaltfirstname(true);}}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {lastnameError}\r\n                helperText = {lastnameError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastname}\r\n                onChange={(e)=>{setlastname(e.target.value);setaltlastname(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {emailError}\r\n                helperText = {emailError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e)=>{setemail(e.target.value);setaltemail(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {passwordError}\r\n                helperText = {passwordError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e)=>{setpassword(e.target.value);setaltpassword(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <input\r\n          type=\"file\"\r\n          \r\n          onChange={(e)=>{handleChange(e)}}\r\n        />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUp}\r\n            disabled = {disabledSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {\r\n            user.error ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : <div></div>\r\n          }\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item xs={12}>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n      </Grid>\r\n    </Grid>\r\n        );\r\n    \r\n}\r\n\r\nexport default SignUpPageComponent;","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js",["204","205","206","207","208","209","210","211","212","213"],"import React,{useState,useEffect} from 'react';\r\nimport './AdminDashboardStyle.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {removeBlacklistedMovie, startVoting, stopVoting, removeAnnouncement, addAnnouncement} from '../../action/movie_actions';\r\nimport {Button} from '@material-ui/core'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles,fade } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport firebase from 'firebase';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShareButton from '../shareButton'\r\nimport swal from 'sweetalert';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Img2 from '../../icons/Asset 1@2x.png'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf:\"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0 ,\r\n    width: '100%',\r\n    \r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:\"white\"\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: fade(theme.palette.common.black, 0.45),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.55),\r\n    },\r\n    width:\"100%\",\r\n  },\r\n  inputInput: {\r\n    \r\n    color:\"white\",\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    \r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height:200,\r\n    \r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n  },\r\n}));\r\nconst AdminDashboardComponent = () => {\r\n  const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user);\r\n    console.log(user);\r\n    const [result,setresult] = useState([]);  \r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user.error || user.successmsg){ \r\n            setOpen(true);\r\n        }\r\n    },[user,user.blacklist])\r\n\r\n\r\n    // ======================================= ui ================================\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const useSnackbarStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    //======================================Fetching data from internet ===========================\r\n\r\n    async function fetchData(){\r\n      let arr = [];\r\n      for(let i=0;i<user.blacklist.length;i++){\r\n        let element = user.blacklist[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n        let x=res.data\r\n        arr.push(x)\r\n        if(i===user.blacklist.length-1)\r\n          return arr;\r\n      }  \r\n    }\r\n    //=========================================== Render Card =========================================\r\n\r\n    function RenderCard({r}){\r\n        const RemoveFromBlackList = (e) => {\r\n        e.preventDefault();\r\n        const dataToSubmit = {\r\n            movieId: r.id\r\n        }\r\n        dispatch(removeBlacklistedMovie(dataToSubmit));\r\n        let array = result;\r\n        let cardIndex = array.indexOf(r);\r\n        if(cardIndex !== -1)\r\n        {\r\n            array.splice(cardIndex, 1);\r\n            setresult(array);\r\n        }\r\n        }      \r\n\r\n        return(\r\n          <div className=\"card_s\">\r\n          <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n          \r\n       </div>\r\n       <div className=\"back_s\">\r\n         <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n         <div>\r\n         <h2>{r.title}</h2>\r\n         <h3>{r.release_date}</h3>\r\n         <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n   \r\n         </div>\r\n           \r\n       <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\"\r\n     }}>\r\n       <Link to={`/movie/${r.id}`}   >\r\n       <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n       </Link>\r\n       <Button className=\"button_s\"  style={{marginBottom:10}}\r\n       variant=\"outlined\" color=\"primary\" onClick={(e) => {RemoveFromBlackList(e)}} >\r\n         Remove</Button>\r\n         <div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n      \r\n       </div>\r\n       \r\n         </div>\r\n       </div></div>\r\n        )\r\n    }\r\n    // ===================================================================================================\r\n    useEffect(() =>{\r\n        if(user.isLoggedIn && user.blacklist){\r\n          console.log(\"Chala\")\r\n          fetchData()\r\n          .then((arr)=>{\r\n            console.log(\"Ohh \",arr);\r\n            setresult(arr);\r\n          })\r\n        }\r\n    },[user.isLoggedIn])\r\n\r\n    // ======================== Fetching other users =================================\r\n    const [allusers,setallusers] = useState([]);    \r\n    const [alladmin,setalladmin] = useState([]);\r\n    useEffect(()=>{\r\n      const db = firebase.firestore();\r\n      let unsubscribe = db.collection('users')\r\n      .onSnapshot(function(querySnapshot){\r\n        let arr = [];\r\n        let arr1 = [];\r\n        querySnapshot.forEach((doc)=>{\r\n          if(doc.data().IsAdmin)\r\n            arr1.push(doc.data());\r\n          else\r\n            arr.push(doc.data())\r\n        })\r\n        setallusers(arr);\r\n        setalladmin(arr1);\r\n      })\r\n    },[])\r\n\r\n    function makeAdminAlert(name,emailid,e){\r\n      e.preventDefault();\r\n      swal({\r\n        title: 'Are you sure ?',\r\n        text: `${name} (${emailid}) will become an admin and, he/she will have the rights to remove you from admin.`,\r\n        icon:\"warning\",\r\n        dangerMode: true,\r\n        buttons: true,\r\n      }).then((isConfirm) => {\r\n        if (isConfirm) {\r\n          makeAdmin(name,emailid,e)\r\n        }\r\n    })\r\n  }\r\n\r\n    function makeAdmin(name,emailid,e){\r\n      e.preventDefault()\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:true})\r\n    }\r\n\r\n    function removeFromAdmin(emailid,e){\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:false})\r\n    }\r\n\r\n  // ========================== Start and Stop Voting =========================\r\n  const [name,setname] = useState(\"\");\r\n  const [announcement,setannouncement] = useState(\"\");\r\n  const [nameError,setnameError] = useState(\"\");\r\n  const [announcementError,setannouncementError] = useState(\"\");\r\n  const [altname,setaltname] = useState(false);\r\n  const [altannouncement,setaltannouncement] = useState(false);\r\n  const [disabledSubmit,setdisabledSubmit] = useState(true);\r\n  const [disabledAnnounce,setdisabledAnnounce] = useState(true);\r\n  useEffect(() => {\r\n    if(altname && name.length<3)\r\n    setnameError(\"name must be more than 2 characters\")\r\n    else\r\n    setnameError(\"\")\r\n  },[altname,name])\r\n\r\n  useEffect(() => {\r\n    if(nameError)\r\n      setdisabledSubmit(true);\r\n    else if(altname)\r\n      setdisabledSubmit(false);\r\n      \r\n  },[nameError,altname])\r\n\r\n  useEffect(() => {\r\n    if(announcementError)\r\n      setdisabledAnnounce(true);\r\n    else if(altannouncement)\r\n      setdisabledAnnounce(false);\r\n  },[announcementError,altannouncement])\r\n\r\n  useEffect(() => {\r\n    if(altannouncement && announcement.length<3)\r\n    setannouncementError(\"Announcement must have more than 2 characters\")\r\n    else \r\n    setannouncementError(\"\")\r\n  },[altannouncement,announcement])\r\n\r\n  const startAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: ` Voting for ${name} will start now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        start(e);\r\n      }\r\n  })\r\n  }\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(startVoting({Name:name,Start:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n\r\n  const stopAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: `Contest will end now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        stop(e);\r\n      }\r\n  })\r\n  }\r\n  const stop = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(stopVoting({End:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n  const removeannouncement = (e,element) => {\r\n    e.preventDefault();\r\n    dispatch(removeAnnouncement(element))\r\n  }\r\n  \r\n  const addannouncement = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAnnouncement(announcement))\r\n    setannouncement(\"\")\r\n  }\r\n\r\n  // =========================== Main Return from this component ==================================\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n  return (\r\n    <React.Fragment>\r\n      <main style={{marginTop:\"100px\"}}>\r\n      {user.announcement ?\r\n      <>\r\n      {(user.announcement.map(element => (\r\n      <Grid container style={{marginTop:\"10px\"}}>\r\n        <Grid item xs={12} md={9}>\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n          {element}\r\n        </Alert>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Button variant=\"outlined\" color=\"secondary\" small onClick={e => removeannouncement(e,element)}>\r\n            Remove\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n        ))\r\n      )}\r\n      <form Validate className=\"voting\">\r\n      <TextField\r\n        error = {announcementError}\r\n        helperText = {announcementError}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"Name\"\r\n        label=\"Announce\"\r\n        name=\"announce\"\r\n        autoComplete=\"name\"\r\n        autoFocus\r\n        value={announcement}\r\n        onChange={(e) => {setannouncement(e.target.value);setaltannouncement(true);}}\r\n        InputProps={{className:\"voting_text\"}}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => addannouncement(e)}  \r\n        disabled = {disabledAnnounce}\r\n      >\r\n      Announce\r\n      </Button>\r\n    </form>\r\n    </>\r\n      :\r\n      <form Validate className=\"voting\">\r\n      <TextField\r\n        error = {announcementError}\r\n        helperText = {announcementError}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"Name\"\r\n        label=\"Event\"\r\n        name=\"event\"\r\n        autoComplete=\"name\"\r\n        autoFocus\r\n        value={announcement}\r\n        onChange={(e) => {setannouncement(e.target.value);setaltannouncement(true);}}\r\n        InputProps={{className:\"voting_text\"}}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => addannouncement(e)}  \r\n        disabled = {disabledAnnounce}\r\n      >\r\n      Announce\r\n      </Button>\r\n    </form>\r\n      }\r\n      {\r\n        !user.isVoting ?\r\n              <form Validate className=\"voting\">\r\n              <TextField\r\n                error = {nameError}\r\n                helperText = {nameError}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Event\"\r\n                name=\"event\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => {setname(e.target.value);setaltname(true);}}\r\n                InputProps={{className:\"voting_text\"}}\r\n              />\r\n       \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={startAlert}  \r\n                disabled = {disabledSubmit}\r\n              >\r\n                Start Voting\r\n              </Button>\r\n            </form>\r\n            :\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={stopAlert}  \r\n              >\r\n                Stop Voting\r\n              </Button>\r\n      }\r\n      </main>\r\n      <div style={{marginTop:100}}>\r\n        <h1 >BlackListed Movies</h1>\r\n      </div>\r\n      <main>\r\n      <section className=\"wrapper1\">\r\n          {  \r\n            result && result.length !== 0 ?\r\n            (\r\n              result.map((resul) => (              \r\n              <RenderCard key={resul.id} r={resul} />   \r\n              ))\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Blacklisted movie</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n        </section>\r\n        {\r\n          (user.error ) ?\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {`${user.error}`}\r\n            \r\n          </Alert>\r\n          </Snackbar>\r\n          : user.successmsg ?\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            {`${user.successmsg}`}\r\n          </Alert>\r\n        </Snackbar>\r\n        :\r\n        <div></div>\r\n        }\r\n      {/* Admin */}\r\n      <div style={{marginTop:100}}>\r\n        <h1 >All Administrators</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            alladmin.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {alladmin.map((admin) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={admin.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" >{admin.Name}</h3>\r\n                          <h4 class=\"title\">{admin.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {removeFromAdmin(admin.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Dismiss From Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Admin users</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n      </main>\r\n      {/* Users */}\r\n      </main>\r\n      <div style={{marginTop:100,textAlign:\"center\"}}>\r\n        <h1 >All users</h1>\r\n      </div>\r\n      <main>\r\n      <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search','id':'sear'}}\r\n              onChange={()=>{\r\n                  var all = document.getElementById(\"users_card\").getElementsByClassName(\"our-team\");\r\n                \r\n                console.log(all)\r\n                for(var i=0;i<all.length;i++)\r\n                  {\r\n                    var txtValue = all[i].innerText;\r\n                    console.log(txtValue)\r\n                    if (txtValue.toLowerCase().includes(document.getElementById(\"sear\").value) ) {\r\n                      all[i].style.display = \"\";\r\n                    } else {\r\n                      all[i].style.display = \"none\";\r\n                    }\r\n                    \r\n                  } \r\n              }}\r\n              \r\n            />\r\n          {  \r\n            allusers.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\" id=\"users_card\">\r\n              {allusers.map((user) => (              \r\n                <React.Fragment className=\"profile-card\" >\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={user.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" >{user.Name}</h3>\r\n                          <h4 class=\"title\">{user.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {makeAdminAlert(user.Name,user.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Make Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Users found</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n        </main>\r\n    </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default AdminDashboardComponent;","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js",["214","215"],"import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport './HistoryStyle.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Img2 from '../../icons/Asset 1@2x.png'\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst HistoryComponent = () => {\r\n    const user = useSelector(state => state.user);\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          marginTop:50,\r\n          minWidth: 275,\r\n          maxWidth:300,\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n      });\r\n      const classes = useStyles();\r\n      if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n      return (\r\n        <div>\r\n            <div class=\"wrapper_history\">\r\n  <div class=\"list\">\r\n    <div class=\"list__header\">\r\n      <h1 >Previous Contests</h1>\r\n      \r\n    </div>\r\n    {\r\n                user.history && user.history.length ?\r\n                (\r\n    <div class=\"list__body\">\r\n      <table class=\"list__table\">\r\n      <tr class=\"header_row\">\r\n      <th class=\"list__cell\">S.no</th>\r\n    <th class=\"list__cell\">Contest</th>\r\n    <th class=\"list__cell\">Start date</th>\r\n    <th class=\"list__cell\">End date</th>\r\n    <th class=\"list__cell\">Link</th>\r\n  </tr>\r\n      {user.history.map((element,index) => {\r\n                        return(\r\n                                       \r\n       <tr class=\"list__row\" >\r\n         <td class=\"list__cell\"><span class=\"list__value\">{index+1}</span></td>\r\n          <td class=\"list__cell\"><span class=\"list__value\">{`${element.Name}`}</span></td>\r\n          <td class=\"list__cell\">\r\n            <span class=\"list__value\">{`${element.sDay}`}</span>\r\n            <small class=\"list__label\">{`${element.sTime}`}</small>\r\n            </td>\r\n         <td class=\"list__cell\"><span class=\"list__value\">{`${element.eDay}`}</span>\r\n          <small class=\"list__label\">{`${element.eTime}`}</small>\r\n          </td>\r\n         <td class=\"list__cell\">\r\n         <Link to={`/history/${element.contestid}`} className=\"linky\"> \r\n         <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span>\r\n         </Link>\r\n         </td>\r\n        </tr>\r\n        )})\r\n        \r\n         }\r\n        </table>\r\n        </div>\r\n                )\r\n          :(\r\n                <div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No past contests</h2>\r\n         </div>\r\n                )\r\n                }\r\n  </div>\r\n</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HistoryComponent;","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js",["216","217","218","219","220","221"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { lightTheme, darkTheme } from '../../theme';\r\nimport { GlobalStyles } from '../../global';\r\n\r\nimport Toggle from '../Toggle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\n\r\nimport {Hidden} from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport List from '@material-ui/core/List';\r\nimport './HeaderStyle.css'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\n\r\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {logout} from '../../action/user_actions';\r\n\r\nimport { ExitToAppRounded } from '@material-ui/icons';\r\nfunction HeaderComponent({theme,toggleTheme,componentMounted}){\r\n        const user = useSelector(state => state.user);\r\n        const User = useSelector(state => state.user.user);\r\n       \r\n       \r\n        const dispatch = useDispatch();\r\n        const Logout = () => {\r\n          dispatch(logout());\r\n        }\r\n\r\n        const useStyles = makeStyles((theme) => ({\r\n          list: {\r\n            width:300,\r\n            alignItems:'center',\r\n            \r\n          },\r\n      \r\n            root: {\r\n              flexGrow: 1,\r\n              display:'flex'\r\n              \r\n            },\r\n            menuButton: {\r\n              marginRight: theme.spacing(2),\r\n              \r\n              color:'white'\r\n            },\r\n            title: {\r\n                marginRight: theme.spacing(2),\r\n                fontWeight:'bold',\r\n                color:'white',\r\n            },\r\n            Button1:{\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            navText:{\r\n              fontSize:20,\r\n              marginLeft:5\r\n            }\r\n          }));\r\n          const [state, setState] = React.useState(\r\n            false\r\n          );\r\n        \r\n          const toggleDrawer = (open) => (event) => {\r\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n              return;\r\n            }\r\n        \r\n            setState(open);\r\n          };\r\n\r\n\r\n          function TemporaryDrawer() {\r\n            const classes = useStyles();\r\n            \r\n          \r\n            \r\n          \r\n            return (\r\n              <div>\r\n                  <React.Fragment >\r\n                    \r\n                    <SwipeableDrawer anchor=\"left\" open={state} onClose={toggleDrawer(false)}  onOpen={toggleDrawer(true)} >\r\n                    <div className=\"drawe\">\r\n                      <div style={{width:\"100%\",display:'flex'}}>\r\n                      <IconButton style={{position:'absolute',right:0}} onClick={toggleDrawer(false)}>\r\n                      <CancelRoundedIcon color=\"secondary\" />\r\n                      </IconButton>\r\n                      </div>\r\n                      {\r\n                      (user.isLoggedIn) ?\r\n                      \r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src={User.ProfilePic} />\r\n\t\t                <h2 className=\"title title-medium\">{User.Name}</h2>\r\n\t                  </div>\r\n                    :\r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src=\"https://icons.iconarchive.com/icons/custom-icon-design/flatastic-3/256/user-icon.png\" />\r\n\t\t                <h2 className=\"title title-medium\">Welcome Guest</h2>\r\n\t\t                \r\n\t                  </div>\r\n                    }\r\n                      <List className={classes.list}>\r\n                      \r\n                      <Link to=\"/\"> \r\n                      <ListItem button key=\"Home\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <HomeRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                      <ListItemText primary=\"HOME\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <Link to=\"/leaderboard\"> \r\n                      <ListItem button key=\"leaderboard\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <Timeline color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"LEADERBOARD\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n\r\n                      <Link to=\"/history\"> \r\n                      <ListItem button key=\"history\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <HistoryIcon color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"HISTORY\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <Link to=\"/Search\"> \r\n                      <ListItem button key=\"Search\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon> <SearchRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"SEARCH\" />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <ListItem  key=\"Dark Mode\" >\r\n                      <ListItemIcon> <Brightness4Icon color=\"primary\"/> </ListItemIcon>\r\n                      <Toggle theme={theme} toggleTheme={toggleTheme} />\r\n                      {theme === 'light' ? 'Light' : 'Dark'}\r\n                      \r\n                      </ListItem>\r\n                      \r\n                      {\r\n                        (user.isLoggedIn) ?\r\n                        <React.Fragment>\r\n                          <Link to=\"/dashboard\"> \r\n                          <ListItem button key=\"Dashboard\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <DashboardRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"DASHBOARD\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          {\r\n                            user.user.IsAdmin ?\r\n                            <Link to=\"/admin\"> \r\n                            <ListItem button key=\"Admin Dashboard\" onClick={toggleDrawer(false)}>\r\n                            <ListItemIcon> <SupervisorAccountIcon color=\"primary\" /> </ListItemIcon>\r\n                            <ListItemText primary=\"ADMIN DASHBOARD\" />\r\n                            </ListItem>\r\n                            </Link>\r\n                            :\r\n                            <Link>\r\n                            </Link>\r\n                          }\r\n                          <ListItem button key=\"Logout\" onClick={ () => {toggleDrawer(false);Logout()}}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGOUT\" />\r\n                          </ListItem>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                          <Link to=\"/login\">\r\n                          <ListItem button key=\"Login\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGIN\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          \r\n                          <Link to=\"/signup\">\r\n                          <ListItem button key=\"Signup\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <PersonAddRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                          <ListItemText primary=\"SIGNUP\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                        </React.Fragment>\r\n                      }\r\n                      \r\n                    \r\n                      </List>\r\n                      </div>\r\n                    </SwipeableDrawer>\r\n                  </React.Fragment>\r\n                \r\n              </div>\r\n            );\r\n          }\r\n\r\n\r\n\r\n\r\n          \r\n           function ButtonAppBar() {\r\n            const classes = useStyles();\r\n           \r\n            return (\r\n              <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className=\"navbar_h\">\r\n                  <Toolbar>\r\n                    \r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                     CINECUP\r\n                    </Typography>\r\n\r\n                    <Hidden mdDown>\r\n                    <div style={{position:\"absolute\",right:0}}>\r\n                    <Link to=\"/\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                      <HomeRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Home</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    <Link to=\"/leaderboard\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                    <Timeline fontSize=\"small\"/>\r\n                      <span className={classes.navText}>LeaderBoard</span>\r\n                    </IconButton>\r\n                    </Link>\r\n\r\n                    <Link to=\"/history\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                    <HistoryIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>History</span>\r\n                    </IconButton>\r\n                    </Link>\r\n\r\n                    <Link to=\"/search\">\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <SearchRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Search</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    {\r\n                      (user.isLoggedIn) ?\r\n                      <React.Fragment>\r\n                      <Link to=\"/dashboard\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <DashboardRoundedIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Dashboard</span>\r\n                        </IconButton>\r\n                      </Link>\r\n                      {\r\n                        (user.user.IsAdmin) ?\r\n                        <Link to=\"/admin\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <SupervisorAccountIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Admin Dashboard</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                        :\r\n                        <Link></Link>\r\n                      }\r\n                      \r\n                      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={Logout}>\r\n                      <ExitToAppRounded fontSize=\"small\" />\r\n                          <span className={classes.navText}>Logout</span>\r\n                        </IconButton>\r\n                     \r\n                      </React.Fragment>\r\n                      :\r\n                      <React.Fragment>\r\n                         <Link to=\"/login\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                       <LockOpenRoundedIcon fontSize=\"small\" />\r\n                          <span className={classes.navText}>Login</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                        <Link to=\"/signup\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <PersonAddRoundedIcon fontSize=\"small\" />\r\n                          <span className={classes.navText}>Signup</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    }\r\n                    </div>\r\n                    </Hidden>\r\n                    \r\n                  </Toolbar>\r\n                    \r\n                   \r\n                </AppBar>\r\n              </div>\r\n            );\r\n          }\r\n       \r\n        if(user.isLoading)\r\n        return(\r\n          <></>\r\n        )\r\n        if (!componentMounted) {\r\n          return <div />\r\n        };\r\n        return (\r\n          <>\r\n          \r\n          <TemporaryDrawer />\r\n          <ButtonAppBar />\r\n          \r\n          </>\r\n        );\r\n    \r\n  }\r\n\r\nexport default HeaderComponent;\r\n\r\n","F:\\cinecup\\src\\reducer\\user_reducer.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js",["222","223"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport {Button} from '@material-ui/core'\r\nfunction Search ({ handleInput }) {\r\n\treturn (\r\n\t\t<section className=\"searchbox-wrap\">\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Search for a movie...\" \r\n\t\t\t\tclassName=\"searchbox\" \r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Search;","F:\\cinecup\\src\\action\\user_actions.js",["224","225","226","227","228","229","230","231","232","233"],"import firebase from 'firebase';\r\nimport {\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_ERROR,\r\n  \r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_ERROR,\r\n    \r\n    NOMINATE_MOVIE_ERROR,\r\n    NOMINATE_MOVIE_SUCCESS,\r\n    RESET_ERROR,\r\n    RESET_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n   \r\n    AUTH_USER_SUCCESS,\r\n    AUTH_USER_ERROR\r\n} from './types';\r\n\r\n//============================================== Register =================================================\r\n\r\nexport const register = (User) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:REGISTER_USER_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        firebase.auth()\r\n        .createUserWithEmailAndPassword(User.email, User.password)\r\n          .then(dataBeforeEmail => {\r\n            firebase.auth().onAuthStateChanged(user=> {\r\n              user.sendEmailVerification()\r\n              .then(dataAfterEmail => {\r\n                firebase.auth().onAuthStateChanged(async function(user) {\r\n                  if (user) {\r\n                    // Sign up successful\r\n                    let image = await uploadImage(User);\r\n                    console.log(User.profilepic)\r\n                    console.log(user);\r\n                    db.collection(\"users\").doc(User.email).set({\r\n                      Name: `${User.firstname} ${User.lastname}`,\r\n                      Email: User.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: image,\r\n                      Nominations:[]\r\n                    }).then(()=>{\r\n                      dispatch({\r\n                        type: REGISTER_USER_SUCCESS,\r\n                        payload:\r\n                          \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\r\n                      })\r\n                    }).catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:REGISTER_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                    })\r\n                  } else {\r\n                    // Signup failed\r\n                    dispatch({\r\n                      type: REGISTER_USER_ERROR,\r\n                      payload:\r\n                        \"Something went wrong, we couldn't create your account. Please try again.\"\r\n                    });\r\n                  }\r\n                });\r\n              })\r\n              // Error in sending mail\r\n              .catch(error => {\r\n                console.log(error);\r\n                dispatch({\r\n                  type:REGISTER_USER_ERROR,\r\n                  payload: \"Sorry We are unable to send Email Verification Link at this moment.\"\r\n                })\r\n              })\r\n            });\r\n          })\r\n          // User Not Created Means Email Already Registered\r\n          .catch(error => {\r\n              console.log(error);\r\n              dispatch({\r\n                type:REGISTER_USER_ERROR,\r\n                payload: \"This Email is already registered. Kindly Login\"\r\n              })\r\n          })\r\n}}\r\n\r\n\r\nasync function uploadImage(User){\r\n  if(User.profilepic !== null ){\r\n  try{\r\n    const storage=firebase.storage();\r\n    let snapshot = await storage.ref(`images/${User.profilepic.name}`).put(User.profilepic)\r\n    console.log('Uploaded', snapshot.totalBytes, 'bytes.');\r\n    let url = await snapshot.ref.getDownloadURL()\r\n    console.log('File available at', url);\r\n    return url;\r\n  }\r\n  catch(err){\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n  }\r\n  else{\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// =================================== Simple Login ===========================================\r\n\r\nexport const login = (User) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n    })\r\n\r\n    firebase.auth().signInWithEmailAndPassword(User.email, User.password)\r\n    .then((user) => {\r\n      if(firebase.auth().currentUser.emailVerified)\r\n      {\r\n        dispatch({\r\n          type:LOGIN_USER_SUCCESS,\r\n          payload:{Name:user.Name, Email:user.Email, IsAdmin:user.IsAdmin,ProfilePic:user.ProfilePic,Nominations:user.Nominations}\r\n        })\r\n      }  \r\n      else{\r\n        firebase.auth().signOut().then(function() {\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Kindly Verify Your Email\"\r\n          })\r\n        })\r\n      }    \r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      dispatch({\r\n        type:LOGIN_USER_ERROR,\r\n        payload: error.message\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ============================================== Google Login ======================================\r\n\r\nexport const loginwithgoogle = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:LOGIN_USER_REQUEST,\r\n        })\r\n        const db = firebase.firestore();\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            var docRef = db.collection(\"users\").doc(user.email);\r\n            docRef.get().then(function(doc) {\r\n                if (doc.exists) {\r\n                    console.log(\"Already Registered !\");\r\n                    dispatch({\r\n                      type:LOGIN_USER_SUCCESS,\r\n                      payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                    })\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                    console.log(\"Not Already Registered !!!\");\r\n                    db.collection(\"users\").doc(user.email).set({\r\n                            Name: user.displayName,\r\n                            Email: user.email,\r\n                            IsAdmin: false,\r\n                            ProfilePic: user.photoURL,\r\n                            Nominations:[]\r\n                        })\r\n                        .then(function() {\r\n                            console.log(\"Document successfully written!\");\r\n                            dispatch({\r\n                              type:LOGIN_USER_SUCCESS,\r\n                              payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            console.error(\"Error writing document: \", error);\r\n                            dispatch({\r\n                              type:LOGIN_USER_ERROR,\r\n                              payload: \"Some Error Occured Try Again !!\"\r\n                            })\r\n                        });\r\n                    console.log(user);\r\n                }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting documents: \", error);\r\n                dispatch({\r\n                  type:LOGIN_USER_ERROR,\r\n                  payload: \"Some Error Occured Try Again !!\"\r\n                })\r\n              });\r\n           \r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n            return{\r\n              errorCode : errorCode,\r\n              errorMessage:errorMessage\r\n            }\r\n          });\r\n    }\r\n}\r\n\r\n// ======================================= FaceBook Login =================================================\r\n\r\nexport const loginwithfacebook = () => {\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n      payload: \"\"\r\n    })\r\n    const db = firebase.firestore();\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase.auth().signInWithPopup(provider).then(function(result) {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      var docRef = db.collection(\"users\").doc(user.email);\r\n      docRef.get().then(function(doc) {\r\n          if (doc.exists) {\r\n              console.log(\"Already Registered !\");\r\n              dispatch({\r\n                type:LOGIN_USER_SUCCESS,\r\n                payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n              })\r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such document!\");\r\n              console.log(\"Not Already Registered !!!\");\r\n              db.collection(\"users\").doc(user.email).set({\r\n                      Name: user.displayName,\r\n                      Email: user.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: user.photoURL,\r\n                      Nominations:[]\r\n                  })\r\n                  .then(function() {\r\n                      console.log(\"Document successfully written!\");\r\n                      dispatch({\r\n                        type:LOGIN_USER_SUCCESS,\r\n                        payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                      })\r\n                  })\r\n                  .catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:LOGIN_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                  });\r\n              console.log(user);\r\n          }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting documents: \", error);\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Some Error Occured Try Again !!\"\r\n          })\r\n        });\r\n\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================================== Logout ================================================\r\n\r\nexport const logout = () =>{\r\n  return async (dispatch) =>{\r\n    firebase.auth().signOut().then(function() {\r\n      dispatch({\r\n        type:LOGOUT_USER_SUCCESS,\r\n      })\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: LOGOUT_USER_ERROR\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Auth ====================================================\r\nexport const auth = () => {\r\n  return async (dispatch) => {\r\n    console.log(\"Running Auth\")\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"users\").doc(user.email);\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists && user.emailVerified) {\r\n                dispatch({\r\n                  type:AUTH_USER_SUCCESS,\r\n                  payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                })\r\n            }\r\n            else {\r\n              dispatch({\r\n                type:AUTH_USER_ERROR,\r\n                payload:\"Kindly Verify Your Email\"\r\n              })\r\n            }\r\n          })\r\n        } else{\r\n          dispatch({\r\n            type:AUTH_USER_ERROR,\r\n            payload:\"\"\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n// ================================================= Nominate ================================================== \r\nexport const nominate = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.length < 5 && !doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayUnion(user.movieId)\r\n          },{ merge: true })\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(1)\r\n          }, { merge: true })\r\n\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_SUCCESS,\r\n            payload:user.movieId,\r\n            successmsg:\"You have successfully nominated the movie.\"\r\n          })\r\n          });\r\n        }\r\n        else if(doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Reset Password ================================================== \r\n\r\nexport const resetPassword = (User) => {\r\n  return async (dispatch) => {\r\n    firebase\r\n    .auth()\r\n    .sendPasswordResetEmail(User.email)\r\n    .then(() =>\r\n      dispatch({\r\n        type: RESET_SUCCESS,\r\n        payload:\r\n          \"Check your inbox. We've sent you a secured reset link by e-mail.\"\r\n      })\r\n      \r\n    )\r\n    .catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: RESET_ERROR,\r\n        payload: `Some Error Occured Try Again !! ${error}`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// =================================================Remove Nominate ================================================== \r\n\r\n\r\nexport const remove_nominate = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayRemove(user.movieId)\r\n          },{ merge: true })\r\n\r\n        if(moviesRef.Votes === 1){\r\n         batch.delete(moviesRef);\r\n        }\r\n        else {\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(-1)\r\n          }, { merge: true })\r\n        }\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n            payload:usersRef.Nominations,\r\n            successmsg:\"Movie has been removed from your Nominations\"\r\n          })\r\n          });\r\n        }\r\n        else if(!doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have not nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n","F:\\cinecup\\src\\action\\types.js",[],"F:\\cinecup\\src\\key\\key.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js",["234"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nfunction Popup({ selected, closePopup }) {\r\n\treturn (\r\n\t\t<section className=\"popup\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t    <div className=\"con\">\r\n\t\t\t\t<h2>{ selected.Title } <span>({ selected.Year })</span></h2>\r\n\t\t\t\t<br />\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"plot\">\r\n\t\t\t\t\t<img src={selected.Poster} />\r\n\t\t\t\t\t<div className=\"pa\"><p className=\"rating\" ><span>IMDB Rating : </span>{selected.imdbRating} <br /><br/><span>Genre :</span>  {selected.Genre}<br></br><br></br><span>Actors : </span>{selected.Actors}<br></br><br></br>{selected.Plot}</p></div>\r\n\t\t\t       \r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"close\" onClick={closePopup}>Close</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Popup;","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js",["235"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nimport Result from './Result'\r\nimport Img2 from '../../icons/Asset 1@2x.png'\r\nfunction Results ({ results, openPopup,}) {\r\n\tif(results.length){\r\n\t\treturn (\r\n\t\t\t<section className=\"wrapper\">\r\n\t\t\t\t{\r\n\t\t\t\t\tresults.map(result => (\r\n\t\t\t\t\t<Result key={result.id} result={result} openPopup={openPopup} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\telse{\r\n\t\treturn(\r\n\t\t\t<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>Nothing found</h2>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Results;","F:\\cinecup\\src\\Components\\shareButton.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js",["236","237","238","239"],"import React, { useState } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {nominate} from '../../action/user_actions';\r\nimport {blackListMovie} from '../../action/movie_actions';\r\nimport {Button, Hidden} from '@material-ui/core'\r\nimport ShareButton from '../shareButton'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swal from 'sweetalert';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nfunction Result({ result, openPopup }) {\r\n\tconst useStyles = makeStyles({\r\n\t\t\r\n\t\tbut:{\r\n\t\t\tdisplay:\"flex\",\r\n\t\t\tflexDirection:\"row\",\r\n\t\t\talignItems:\"center\",\r\n\t\t\tjustifyItems:\"center\"\r\n\t\t},\r\n\t\tbutton1:{\r\n\t\t\tposition:'relative'\r\n\t\t}\r\n\t  });\r\n\tconst user = useSelector(state => state.user);\r\n\tconst dispatch = useDispatch();\r\n\tconst [btn,setbtn] = useState(false);\r\n\tconst [blackbtn,setblackbtn] = useState(false);\r\n\tconst Nominate = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(result);\r\n\t\tconst dataToSubmit = {\r\n\t\t\tEmail: user.user.Email,\r\n\t\t\tmovieId:result.id\r\n\t\t}\r\n\t\tconsole.log(dataToSubmit);\r\n\t\tdispatch(nominate(dataToSubmit));\r\n\t}\r\n\tconst classes = useStyles();\r\n\r\n\tfunction BlacklistMovieAlert(e){\r\n\t\te.preventDefault();\r\n\t\tswal({\r\n\t\t  title: 'Are you sure ?',\r\n\t\t  text: `${result.title} will be blacklisted and it's votes will be reduced to 0`,\r\n\t\t  icon:\"warning\",\r\n\t\t  dangerMode: true,\r\n\t\t  buttons: true,\r\n\t\t}).then((isConfirm) => {\r\n\t\t  if (isConfirm) {\r\n\t\t\tsetblackbtn(true); \r\n\t\t\tsetbtn(true);\r\n\t\t\tBlacklistMovie(e);\r\n\t\t  }\r\n\t  })\r\n\t}\r\n\r\n\tconst BlacklistMovie = async (e) => {\r\n\t\t\r\n\t\te.preventDefault();\r\n\t\tconst dataToSubmit = {\r\n\t\t\tmovieId:result.id,\r\n\t\t\tmovieName:result.title,\r\n\t\t}\r\n\t\tconsole.log(dataToSubmit);\r\n\t\tdispatch(blackListMovie(dataToSubmit));\r\n\t}\r\n \r\n\tconst isdisabled = (id) => {\r\n\t\tif(user.isLoggedIn && user.isVoting)\r\n\t\t{\r\n\t\t\tif (user.blacklist && user.blacklist.includes(id.toString()))\r\n\t\t\t\treturn true;\t\t\t\r\n\t\t\telse if(user && user.user && user.user.Nominations.length)\r\n\t\t\t{\r\n\t\t\t\tif(user.user.Nominations.length === 5 || user.user.Nominations.includes(id))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tconst isblackdisabled = (id) => {\r\n\t\tif(user.isLoggedIn)\r\n\t\t{\r\n\t\t\tif(user && user.blacklist && user.blacklist.includes(id.toString()))\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card_s\">\r\n       <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${result.poster_path}`)+\")\"}}>\r\n       \r\n    </div>\r\n    <div className=\"back_s\">\r\n      <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n\t\t  <div>\r\n\t\t  <h2>{result.title}</h2>\r\n\t\t  <h3>{result.release_date}</h3>\r\n\t\t  <Rating precision=\"0.5\" name=\"read-only\" value={(result.vote_average)/2} readOnly />\r\n\r\n\t\t  </div>\r\n        \r\n\t\t<div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n\tjustifyContent: \"center\",\r\n\talignItems: \"center\"\r\n\t}}>\r\n\t\t<Link to={`/movie/${result.id}`}   >\r\n\t\t<Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n\t\t</Link>\r\n\t\t<Button className=\"button_s\" disabled={btn || isdisabled(result.id)} style={{marginBottom:10}}\r\n\t\tvariant=\"outlined\" color=\"primary\" onClick={(e) => {setbtn(true); Nominate(e)}}>\r\n\t\t\tNominate</Button>\r\n\t\t{\r\n\t\t\t\t\tuser.user && user.user.IsAdmin ?\r\n\t\t\t\t\t<Button className=\"button_s\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\r\n\t\t\t\t\tdisabled={blackbtn || isblackdisabled(result.id)}\r\n\t\t\t\t\t onClick={(e) => {BlacklistMovieAlert(e)}}>Blacklist</Button>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t</span>\r\n\t\t}\r\n\t\t<div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n\t\t</div>\r\n\t\t\r\n      </div>\r\n    </div></div>\r\n\t)\r\n}\r\n\r\nexport default Result;\r\n\r\n\r\n","F:\\cinecup\\src\\theme.js",[],"F:\\cinecup\\src\\global.js",[],"F:\\cinecup\\src\\Components\\Toggle.js",["240"],"import React from 'react'\r\nimport { func, string } from 'prop-types';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  const isLight = theme === 'light';\r\n  const ThemeContext = React.createContext(theme);\r\n  return (\r\n    <>\r\n    <Switch\r\n        checked={isLight}\r\n        onChange={toggleTheme}\r\n        name=\"Theme\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n      />\r\n      </>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  toggleTheme: func.isRequired,\r\n  theme: string.isRequired,\r\n}\r\n\r\nexport default Toggle;\r\n","F:\\cinecup\\src\\Components\\UserProfile\\UserProfile.js",["241","242","243","244","245"],"import {React, useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from 'axios';\r\nimport firebase from 'firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nconst UserProfile = () => {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          maxWidth: 345,\r\n        },\r\n        media: {\r\n          height: 140,\r\n        },\r\n      });\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.user);\r\n    const { user_id } = useParams();\r\n    const [userDetail,setuserDetail] = useState({});\r\n    const [reviewDetail,setreviewDetail] = useState([]);\r\n    useEffect(()=>{\r\n        const db = firebase.firestore();\r\n        db.doc(`users/${user_id}`)\r\n        .get().then((doc)=>{\r\n            if (doc.exists) {\r\n                setuserDetail(doc.data());\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"Error !!!\");\r\n        })\r\n    },[])\r\n\r\n    async function getMovieDetails(obj){\r\n      let querySnapshot = obj.docs;\r\n      let arr = [];\r\n      for(let i=0;i<querySnapshot.length;i++){\r\n        let doc = querySnapshot[i];\r\n        console.log(doc);\r\n            try{\r\n                console.log(doc.data().mid);\r\n                let res = await axios.get(`https://api.themoviedb.org/3/movie/${doc.data().mid}?api_key=${TMDB_API_KEY}`)\r\n                arr.push({...res.data, review:doc.data().review, rating:doc.data().rating})\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    useEffect(() => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"reviews\").where(\"uid\", \"==\", user_id)\r\n        .get()\r\n        .then(async function(querySnapshot) {\r\n            let arr = [];\r\n            arr = await getMovieDetails(querySnapshot);\r\n            console.log(arr);\r\n            setreviewDetail(arr);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <Card className={classes.root} style={{marginTop:\"10vh\"}}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className={classes.media}\r\n                image={userDetail.ProfilePic}\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {userDetail.Name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {userDetail.Email}\r\n                </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                Share\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n                </Button>\r\n            </CardActions>\r\n            </Card>\r\n            {\r\n                (reviewDetail.length) ?\r\n                (\r\n                    reviewDetail.map((x) => {\r\n                        return(\r\n                            <Card className={classes.root} style={{marginTop:\"5vh\"}}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className={classes.media}\r\n                image={`https://image.tmdb.org/t/p/w500${x.backdrop_path}`}\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {x.review}\r\n                </Typography>\r\n                <Rating precision=\"0.5\" value={x.rating} readOnly/>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                Share\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n                </Button>\r\n            </CardActions>\r\n            </Card>\r\n                        )\r\n                    })\r\n                )\r\n                :\r\n                <div>\r\n                    Nothing Here\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;",{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":66,"column":3,"nodeType":"252","endLine":66,"endColumn":5,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":8,"column":5,"nodeType":"256","messageId":"257","endLine":8,"endColumn":28},{"ruleId":"254","severity":1,"message":"258","line":32,"column":13,"nodeType":"256","messageId":"257","endLine":32,"endColumn":24},{"ruleId":"254","severity":1,"message":"258","line":83,"column":13,"nodeType":"256","messageId":"257","endLine":83,"endColumn":24},{"ruleId":"254","severity":1,"message":"258","line":124,"column":13,"nodeType":"256","messageId":"257","endLine":124,"endColumn":24},{"ruleId":"250","severity":1,"message":"259","line":26,"column":14,"nodeType":"252","endLine":26,"endColumn":54,"suggestions":"260"},{"ruleId":"254","severity":1,"message":"261","line":41,"column":9,"nodeType":"256","messageId":"257","endLine":41,"endColumn":26},{"ruleId":"250","severity":1,"message":"262","line":79,"column":5,"nodeType":"252","endLine":79,"endColumn":18,"suggestions":"263"},{"ruleId":"254","severity":1,"message":"264","line":81,"column":9,"nodeType":"256","messageId":"257","endLine":81,"endColumn":18},{"ruleId":"254","severity":1,"message":"265","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":26},{"ruleId":"254","severity":1,"message":"266","line":1,"column":15,"nodeType":"256","messageId":"257","endLine":1,"endColumn":23},{"ruleId":"254","severity":1,"message":"267","line":5,"column":21,"nodeType":"256","messageId":"257","endLine":5,"endColumn":32},{"ruleId":"254","severity":1,"message":"268","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":19},{"ruleId":"254","severity":1,"message":"269","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":24},{"ruleId":"254","severity":1,"message":"270","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":16},{"ruleId":"254","severity":1,"message":"271","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":11},{"ruleId":"254","severity":1,"message":"272","line":77,"column":11,"nodeType":"256","messageId":"257","endLine":77,"endColumn":26},{"ruleId":"254","severity":1,"message":"273","line":132,"column":11,"nodeType":"256","messageId":"257","endLine":132,"endColumn":22},{"ruleId":"274","severity":1,"message":"275","line":45,"column":13,"nodeType":"276","messageId":"277","endLine":45,"endColumn":15},{"ruleId":"274","severity":1,"message":"275","line":50,"column":13,"nodeType":"276","messageId":"277","endLine":50,"endColumn":15},{"ruleId":"274","severity":1,"message":"275","line":55,"column":13,"nodeType":"276","messageId":"277","endLine":55,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":143,"column":7,"nodeType":"280","endLine":143,"endColumn":112},{"ruleId":"254","severity":1,"message":"281","line":173,"column":11,"nodeType":"256","messageId":"257","endLine":173,"endColumn":18},{"ruleId":"250","severity":1,"message":"282","line":194,"column":7,"nodeType":"252","endLine":194,"endColumn":16,"suggestions":"283"},{"ruleId":"254","severity":1,"message":"267","line":3,"column":21,"nodeType":"256","messageId":"257","endLine":3,"endColumn":32},{"ruleId":"254","severity":1,"message":"284","line":9,"column":16,"nodeType":"256","messageId":"257","endLine":9,"endColumn":21},{"ruleId":"250","severity":1,"message":"285","line":56,"column":7,"nodeType":"252","endLine":56,"endColumn":24,"suggestions":"286"},{"ruleId":"250","severity":1,"message":"287","line":99,"column":7,"nodeType":"252","endLine":99,"endColumn":9,"suggestions":"288"},{"ruleId":"250","severity":1,"message":"289","line":108,"column":7,"nodeType":"252","endLine":108,"endColumn":15,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":138,"column":3,"nodeType":"280","endLine":138,"endColumn":78},{"ruleId":"291","severity":1,"message":"292","line":190,"column":13,"nodeType":"280","endLine":190,"endColumn":105},{"ruleId":"291","severity":1,"message":"292","line":213,"column":13,"nodeType":"280","endLine":213,"endColumn":61},{"ruleId":"274","severity":1,"message":"293","line":239,"column":32,"nodeType":"276","messageId":"277","endLine":239,"endColumn":34},{"ruleId":"254","severity":1,"message":"294","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":161,"column":5,"nodeType":"280","endLine":161,"endColumn":44},{"ruleId":"250","severity":1,"message":"295","line":72,"column":5,"nodeType":"252","endLine":72,"endColumn":22,"suggestions":"296"},{"ruleId":"254","severity":1,"message":"297","line":94,"column":11,"nodeType":"256","messageId":"257","endLine":94,"endColumn":19},{"ruleId":"254","severity":1,"message":"261","line":172,"column":9,"nodeType":"256","messageId":"257","endLine":172,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":220,"column":65,"nodeType":"276","messageId":"300","endLine":220,"endColumn":66},{"ruleId":"298","severity":1,"message":"299","line":220,"column":118,"nodeType":"276","messageId":"300","endLine":220,"endColumn":119},{"ruleId":"250","severity":1,"message":"301","line":268,"column":5,"nodeType":"252","endLine":268,"endColumn":22,"suggestions":"302"},{"ruleId":"291","severity":1,"message":"292","line":290,"column":5,"nodeType":"280","endLine":290,"endColumn":44},{"ruleId":"254","severity":1,"message":"269","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":24},{"ruleId":"254","severity":1,"message":"270","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":16},{"ruleId":"254","severity":1,"message":"261","line":59,"column":9,"nodeType":"256","messageId":"257","endLine":59,"endColumn":26},{"ruleId":"254","severity":1,"message":"273","line":104,"column":11,"nodeType":"256","messageId":"257","endLine":104,"endColumn":22},{"ruleId":"254","severity":1,"message":"261","line":106,"column":11,"nodeType":"256","messageId":"257","endLine":106,"endColumn":28},{"ruleId":"298","severity":1,"message":"299","line":154,"column":67,"nodeType":"276","messageId":"300","endLine":154,"endColumn":68},{"ruleId":"298","severity":1,"message":"299","line":154,"column":120,"nodeType":"276","messageId":"300","endLine":154,"endColumn":121},{"ruleId":"250","severity":1,"message":"303","line":201,"column":7,"nodeType":"252","endLine":201,"endColumn":24,"suggestions":"304"},{"ruleId":"254","severity":1,"message":"258","line":208,"column":11,"nodeType":"256","messageId":"257","endLine":208,"endColumn":22},{"ruleId":"291","severity":1,"message":"292","line":485,"column":5,"nodeType":"280","endLine":485,"endColumn":44},{"ruleId":"291","severity":1,"message":"292","line":521,"column":27,"nodeType":"280","endLine":521,"endColumn":95},{"ruleId":"291","severity":1,"message":"292","line":537,"column":5,"nodeType":"280","endLine":537,"endColumn":44},{"ruleId":"291","severity":1,"message":"292","line":582,"column":27,"nodeType":"280","endLine":582,"endColumn":94},{"ruleId":"291","severity":1,"message":"292","line":598,"column":5,"nodeType":"280","endLine":598,"endColumn":44},{"ruleId":"254","severity":1,"message":"281","line":31,"column":13,"nodeType":"256","messageId":"257","endLine":31,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":83,"column":5,"nodeType":"280","endLine":83,"endColumn":44},{"ruleId":"254","severity":1,"message":"305","line":9,"column":10,"nodeType":"256","messageId":"257","endLine":9,"endColumn":20},{"ruleId":"254","severity":1,"message":"306","line":9,"column":22,"nodeType":"256","messageId":"257","endLine":9,"endColumn":31},{"ruleId":"254","severity":1,"message":"307","line":10,"column":10,"nodeType":"256","messageId":"257","endLine":10,"endColumn":22},{"ruleId":"254","severity":1,"message":"308","line":35,"column":8,"nodeType":"256","messageId":"257","endLine":35,"endColumn":14},{"ruleId":"291","severity":1,"message":"292","line":114,"column":19,"nodeType":"280","endLine":114,"endColumn":68},{"ruleId":"291","severity":1,"message":"292","line":119,"column":19,"nodeType":"280","endLine":119,"endColumn":137},{"ruleId":"254","severity":1,"message":"309","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":23},{"ruleId":"254","severity":1,"message":"310","line":4,"column":9,"nodeType":"256","messageId":"257","endLine":4,"endColumn":15},{"ruleId":"254","severity":1,"message":"311","line":143,"column":11,"nodeType":"256","messageId":"257","endLine":143,"endColumn":20},{"ruleId":"254","severity":1,"message":"312","line":144,"column":11,"nodeType":"256","messageId":"257","endLine":144,"endColumn":23},{"ruleId":"254","severity":1,"message":"313","line":165,"column":17,"nodeType":"256","messageId":"257","endLine":165,"endColumn":22},{"ruleId":"254","severity":1,"message":"314","line":216,"column":17,"nodeType":"256","messageId":"257","endLine":216,"endColumn":22},{"ruleId":"254","severity":1,"message":"315","line":218,"column":17,"nodeType":"256","messageId":"257","endLine":218,"endColumn":27},{"ruleId":"254","severity":1,"message":"313","line":240,"column":11,"nodeType":"256","messageId":"257","endLine":240,"endColumn":16},{"ruleId":"254","severity":1,"message":"311","line":288,"column":11,"nodeType":"256","messageId":"257","endLine":288,"endColumn":20},{"ruleId":"254","severity":1,"message":"312","line":289,"column":11,"nodeType":"256","messageId":"257","endLine":289,"endColumn":23},{"ruleId":"254","severity":1,"message":"314","line":291,"column":11,"nodeType":"256","messageId":"257","endLine":291,"endColumn":16},{"ruleId":"254","severity":1,"message":"315","line":293,"column":11,"nodeType":"256","messageId":"257","endLine":293,"endColumn":21},{"ruleId":"291","severity":1,"message":"292","line":13,"column":6,"nodeType":"280","endLine":13,"endColumn":35},{"ruleId":"291","severity":1,"message":"292","line":20,"column":5,"nodeType":"280","endLine":20,"endColumn":44},{"ruleId":"254","severity":1,"message":"316","line":6,"column":17,"nodeType":"256","messageId":"257","endLine":6,"endColumn":23},{"ruleId":"254","severity":1,"message":"281","line":41,"column":8,"nodeType":"256","messageId":"257","endLine":41,"endColumn":15},{"ruleId":"298","severity":1,"message":"299","line":97,"column":64,"nodeType":"276","messageId":"300","endLine":97,"endColumn":65},{"ruleId":"298","severity":1,"message":"299","line":97,"column":122,"nodeType":"276","messageId":"300","endLine":97,"endColumn":123},{"ruleId":"254","severity":1,"message":"317","line":8,"column":9,"nodeType":"256","messageId":"257","endLine":8,"endColumn":21},{"ruleId":"254","severity":1,"message":"267","line":3,"column":21,"nodeType":"256","messageId":"257","endLine":3,"endColumn":32},{"ruleId":"254","severity":1,"message":"318","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":24},{"ruleId":"254","severity":1,"message":"319","line":29,"column":11,"nodeType":"256","messageId":"257","endLine":29,"endColumn":15},{"ruleId":"250","severity":1,"message":"320","line":46,"column":7,"nodeType":"252","endLine":46,"endColumn":9,"suggestions":"321"},{"ruleId":"250","severity":1,"message":"320","line":77,"column":7,"nodeType":"252","endLine":77,"endColumn":9,"suggestions":"322"},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["325"],"no-unused-vars","'BLACKLIST_MOVIE_FAILURE' is defined but never used.","Identifier","unusedVar","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["326"],"'useSnackbarStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["327"],"'openPopup' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Snackbarclasses' is assigned a value but never used.","'handleClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["328"],"'anime' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserDetails' and 'movie_id'. Either include them or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'cast' and 'creditsapi'. Either include them or remove the dependency array.",["330"],"React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["331"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'ShareButton' is defined but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["332"],"'response' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'fetchData', 'result', and 'user.user'. Either include them or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'fetchData' and 'user.blacklist'. Either include them or remove the dependency array.",["334"],"'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.","'Switch' is defined but never used.","'LocalMoviesIcon' is defined but never used.","'Button' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Hidden' is defined but never used.","'ThemeContext' is assigned a value but never used.","'CircularProgress' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["335"],["336"],"no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"357","fix":"359"},"Update the dependencies array to be: [dispatch]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch, props.history, user, user.isLoggedIn]",{"range":"362","text":"363"},"Update the dependencies array to be: [queryString, search]",{"range":"364","text":"365"},"Update the dependencies array to be: [contest, fetchData]",{"range":"366","text":"367"},"Update the dependencies array to be: [getUserDetails, movie_id, user.isLoggedIn]",{"range":"368","text":"369"},"Update the dependencies array to be: [cast, creditsapi]",{"range":"370","text":"371"},"Update the dependencies array to be: [apiurl, result]",{"range":"372","text":"373"},"Update the dependencies array to be: [user.isLoggedIn, user.user]",{"range":"374","text":"375"},"Update the dependencies array to be: [fetchData, result, user.isLoggedIn, user.user]",{"range":"376","text":"377"},"Update the dependencies array to be: [fetchData, user.blacklist, user.isLoggedIn]",{"range":"378","text":"379"},"Update the dependencies array to be: [user_id]",{"range":"380","text":"381"},{"range":"382","text":"381"},[2612,2614],"[dispatch]",[1108,1148],"[dispatch, props.history, user, user.isLoggedIn]",[2231,2244],"[queryString, search]",[5178,5187],"[contest, fetchData]",[2072,2089],"[getUserDetails, movie_id, user.isLoggedIn]",[3252,3254],"[cast, creditsapi]",[3498,3506],"[apiurl, result]",[2668,2685],"[user.isLoggedIn, user.user]",[8472,8489],"[fetchData, result, user.isLoggedIn, user.user]",[6368,6385],"[fetchData, user.blacklist, user.isLoggedIn]",[1621,1623],"[user_id]",[2702,2704]]