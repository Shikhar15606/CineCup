[{"F:\\cinecup\\src\\index.js":"1","F:\\cinecup\\src\\reportWebVitals.js":"2","F:\\cinecup\\src\\App.js":"3","F:\\cinecup\\src\\reducer\\index.js":"4","F:\\cinecup\\src\\fontawesome.js":"5","F:\\cinecup\\src\\action\\movie_actions.js":"6","F:\\cinecup\\src\\auth.js":"7","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js":"8","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js":"9","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js":"10","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js":"11","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js":"12","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js":"13","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js":"14","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js":"15","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js":"16","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js":"17","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js":"18","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js":"19","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js":"20","F:\\cinecup\\src\\reducer\\user_reducer.js":"21","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js":"22","F:\\cinecup\\src\\action\\user_actions.js":"23","F:\\cinecup\\src\\action\\types.js":"24","F:\\cinecup\\src\\key\\key.js":"25","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js":"26","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js":"27","F:\\cinecup\\src\\Components\\shareButton.js":"28","F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js":"29","F:\\cinecup\\src\\theme.js":"30","F:\\cinecup\\src\\global.js":"31","F:\\cinecup\\src\\Components\\Toggle.js":"32"},{"size":1958,"mtime":1610286861948,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1607518623915,"results":"35","hashOfConfig":"34"},{"size":4123,"mtime":1610029784700,"results":"36","hashOfConfig":"34"},{"size":160,"mtime":1608579878367,"results":"37","hashOfConfig":"34"},{"size":297,"mtime":1607853473199,"results":"38","hashOfConfig":"34"},{"size":16020,"mtime":1610293020722,"results":"39","hashOfConfig":"34"},{"size":1261,"mtime":1609618569289,"results":"40","hashOfConfig":"34"},{"size":3622,"mtime":1609780187909,"results":"41","hashOfConfig":"34"},{"size":4895,"mtime":1609338171651,"results":"42","hashOfConfig":"34"},{"size":2366,"mtime":1607847146261,"results":"43","hashOfConfig":"34"},{"size":5332,"mtime":1610294101714,"results":"44","hashOfConfig":"34"},{"size":8038,"mtime":1610032215988,"results":"45","hashOfConfig":"34"},{"size":9170,"mtime":1609868613038,"results":"46","hashOfConfig":"34"},{"size":4584,"mtime":1610011526467,"results":"47","hashOfConfig":"34"},{"size":5129,"mtime":1610029784279,"results":"48","hashOfConfig":"34"},{"size":5946,"mtime":1610029784222,"results":"49","hashOfConfig":"34"},{"size":9477,"mtime":1610032531061,"results":"50","hashOfConfig":"34"},{"size":19212,"mtime":1610294101681,"results":"51","hashOfConfig":"34"},{"size":2973,"mtime":1610029784246,"results":"52","hashOfConfig":"34"},{"size":14040,"mtime":1610029784225,"results":"53","hashOfConfig":"34"},{"size":6714,"mtime":1610000214293,"results":"54","hashOfConfig":"34"},{"size":432,"mtime":1608038641665,"results":"55","hashOfConfig":"34"},{"size":17722,"mtime":1610288589353,"results":"56","hashOfConfig":"34"},{"size":2367,"mtime":1609997697163,"results":"57","hashOfConfig":"34"},{"size":984,"mtime":1610293720571,"results":"58","hashOfConfig":"34"},{"size":765,"mtime":1608037850795,"results":"59","hashOfConfig":"34"},{"size":577,"mtime":1610029784303,"results":"60","hashOfConfig":"34"},{"size":1222,"mtime":1609868613168,"results":"61","hashOfConfig":"34"},{"size":5307,"mtime":1610286857431,"results":"62","hashOfConfig":"34"},{"size":705,"mtime":1609940218049,"results":"63","hashOfConfig":"34"},{"size":1403,"mtime":1610029784306,"results":"64","hashOfConfig":"34"},{"size":580,"mtime":1610029784305,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lakeq2",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\cinecup\\src\\index.js",[],"F:\\cinecup\\src\\reportWebVitals.js",[],"F:\\cinecup\\src\\App.js",["133"],"F:\\cinecup\\src\\reducer\\index.js",[],"F:\\cinecup\\src\\fontawesome.js",[],"F:\\cinecup\\src\\action\\movie_actions.js",["134","135","136","137"],"import firebase from 'firebase';\r\nimport axios from 'axios';\r\nimport {TMDB_API_KEY,USERNAME,PASSWORD,API} from '../key/key';\r\nimport {\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FAILURE,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n    FETCH_VOTING_SUCCESS,\r\n    START_VOTING_SUCCESS,\r\n    START_VOTING_FAILURE,\r\n    END_VOTING_SUCCESS,\r\n    END_VOTING_FAILURE,\r\n    FETCH_HISTORY_SUCCESS,\r\n    FETCH_ANNOUNCEMENT_SUCCESS,\r\n    ADD_ANNOUNCEMENT_SUCCESS,\r\n    ADD_ANNOUNCEMENT_FAILURE,\r\n    REMOVE_ANNOUNCEMENT_FAILURE,\r\n    REMOVE_ANNOUNCEMENT_SUCCESS\r\n} from './types';\r\n\r\n// ==================================== Fetching Movies Data =======================================\r\nexport const fetchMoviesData = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('movies')\r\n        .orderBy(\"Votes\", \"desc\")\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            let i = 1;\r\n            let j = 1;\r\n            let prevVotes,currVotes;\r\n            querySnapshot.forEach(function(doc) {\r\n                currVotes = doc.data().Votes;\r\n                if(i===1)\r\n                    prevVotes = doc.data().Votes;\r\n                if(prevVotes!==currVotes)\r\n                {\r\n                    j = i;\r\n                    prevVotes = currVotes;\r\n                }\r\n                arr.push({id:doc.data().MovieId, votes:doc.data().Votes, rank:j})\r\n                i++;\r\n            });\r\n            console.log(arr.length)\r\n            xyz(arr)\r\n            .then((result)=>{\r\n                dispatch({\r\n                    type:FETCH_MOVIES_DATA_SUCCESS,\r\n                    payload:result\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nasync function xyz (arr){\r\n    let r = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let element = arr[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.id}?api_key=${TMDB_API_KEY}`)\r\n        r.push({...res.data, rank:element.rank, votes:element.votes}); \r\n            if(i === arr.length - 1)\r\n            {\r\n                console.log(\"BEEP Beep Beep\",r.length,\"BEEP Beep Beep\");\r\n                return r;\r\n            } \r\n      }\r\n}\r\n// ================================ Fetching History ===========================================\r\nexport const fetchHistory = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('history').orderBy(\"Start\",'desc')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().End){\r\n                    let sdate; \r\n                let sDay;\r\n                let sTime;\r\n                if(doc.data().Start){\r\n                   sdate = new Date(doc.data().Start.toMillis());\r\n                   sDay = `${sdate.getDate()} ${sdate.toLocaleString('default', { month: 'short' })},${sdate.getFullYear()}`;\r\n                   sTime = `${sdate.getHours()}:${sdate.getMinutes()}`;\r\n                }\r\n                let edate;\r\n                let eDay;\r\n                let eTime;\r\n                if(doc.data() && doc.data().End ){\r\n                    edate = new Date(doc.data().End.toMillis());\r\n                    eDay = `${edate.getDate()} ${edate.toLocaleString('default', { month: 'short' })},${edate.getFullYear()}`;\r\n                    eTime = `${edate.getHours()}:${edate.getMinutes()}`;\r\n                }\r\n                arr.push({...doc.data(),contestid:doc.id,sDay:sDay,sTime:sTime,eDay:eDay,eTime:eTime})\r\n                }\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:FETCH_HISTORY_SUCCESS,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================ Fetching Blacklisted Movies ==================================\r\n\r\nexport const fetchBlackListedMovies = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('blacklist')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                arr.push(doc.id)\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:BLACKLIST_MOVIE_FETCH,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================== Blacklisting Movie =========================================\r\n\r\nexport const blackListMovie = ({movieId,movieName,token}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        // getting all users and removing blacklisted movie from their nominations\r\n        db.collection(\"users\").get()\r\n        .then(async function(querySnapshot) {\r\n            var batch = db.batch();\r\n\r\n            let mailto = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n                var usersref = db.collection(\"users\").doc(doc.id);\r\n                    if(doc.data().Nominations.includes(movieId))\r\n                        mailto.push(doc.data().Email);\r\n                    batch.set(usersref,{\r\n                        Nominations: firebase.firestore.FieldValue.arrayRemove(movieId)\r\n                      },{ merge: true });\r\n            })\r\n\r\n            console.log(\"Tu Phodega Tu Phodega Tu Phodega\",mailto);\r\n            // adding movie to blacklist\r\n            let blacklistRef = db.collection('blacklist').doc(movieId.toString())\r\n            batch.set(blacklistRef, {\r\n                MovieId: movieId.toString(),\r\n            })\r\n    \r\n            // deleting movie and it's votes from movies\r\n            let moviesRef = db.collection('movies').doc(movieId.toString())\r\n            batch.delete(moviesRef)\r\n\r\n            let res = await axios.post(`${API}/token`,{username:USERNAME,password:PASSWORD});\r\n            console.log(res);\r\n            if(res.data.accessToken){\r\n                let token = res.data.accessToken;\r\n                axios.post(`${API}/send`,{receivers:mailto,movieName:movieName},\r\n                {\r\n                    headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n                })\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                })\r\n            }\r\n            // Commit the batch\r\n            batch.commit()\r\n            .then(function () {\r\n                dispatch({\r\n                    type:BLACKLIST_MOVIE_SUCCESS,\r\n                })\r\n            });             \r\n        });\r\n    }\r\n}\r\n\r\n// ======================================= Removing Blacklisted Movie ===============================\r\nexport const removeBlacklistedMovie = ({movieId}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"blacklist\").doc(movieId.toString()).delete()\r\n        .then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_SUCCESS\r\n            })\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n                payload:error\r\n            })\r\n        });\r\n    }\r\n}\r\n// Get ---------------------------VotingOnOff---------------------------------------\r\nexport const getVotingOnOff = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_VOTING_SUCCESS,\r\n                    payload:doc.data().on\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== Start Voting =====================================\r\nexport const startVoting = ({Name}) =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.update({\r\n            on: true\r\n        })\r\n        .then(function() {\r\n            db.collection(\"history\").add({\r\n                Name: Name,\r\n                Start:new Date(),\r\n                Ongoing:true,\r\n            })\r\n            .then(function(docRef) {\r\n                console.log(\"Document written with ID: \", docRef.id);\r\n                dispatch({\r\n                    type:START_VOTING_SUCCESS\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error adding document: \", error);\r\n                dispatch({\r\n                    type:START_VOTING_FAILURE\r\n                })\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error updating document: \", error);\r\n            dispatch({\r\n                type:START_VOTING_FAILURE\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== myfunction ======================================\r\nasync function myfunction({docs}){\r\n    let topThree = [];\r\n    console.log(docs.length);\r\n    for(let i=0;i<docs.length;i++)\r\n    {\r\n        let doc = docs[i];\r\n        topThree.push({movieId:doc.data().MovieId,votes:doc.data().Votes,rank:i+1});\r\n        if(i === docs.length-1)\r\n            return topThree;\r\n    }\r\n    return topThree;\r\n}\r\n\r\n// ===================================== End Voting =======================================\r\n\r\nexport const stopVoting = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            const db = firebase.firestore();\r\n            // =================== Getting the top 3 movies =======================\r\n            let movieRef = db.collection(\"movies\").orderBy(\"Votes\", \"desc\")\r\n            let querySnapshot = await movieRef.get()\r\n            // ================= Storing top three in movies array =================\r\n            let topThree = await myfunction(querySnapshot)\r\n            if(topThree.length)\r\n            {\r\n                var batch = db.batch();\r\n                db.collection('history').where(\"Ongoing\", \"==\", true)\r\n                .get()\r\n                .then(function(querySnapshot) {\r\n                    querySnapshot.forEach(function(doc) {\r\n                        let history = db.collection('history').doc(doc.id)\r\n                        batch.set(history, {\r\n                            Movies:topThree,\r\n                            Ongoing:false,\r\n                            End:new Date()\r\n                        },{merge: true})\r\n                    });\r\n                    // =========================== Set voting on to false =================================\r\n                    let onRef = db.collection('on').doc('onoroff')\r\n                    batch.set(onRef,{\r\n                        on:false\r\n                    })\r\n                    // =========================== Deleting Votes of all Movies ===========================\r\n                    db.collection(\"movies\").get()\r\n                    .then(function(querySnapshot) {\r\n                        querySnapshot.forEach(function(doc) {\r\n                            let x = db.collection(\"movies\").doc(doc.id);\r\n                            batch.delete(x);\r\n                        });\r\n                        // =========================== Removing all nominations =======================\r\n                        db.collection(\"users\").get()\r\n                        .then(function(querySnapshot) {\r\n                            querySnapshot.forEach(function(doc) {\r\n                                let x = db.collection(\"users\").doc(doc.id);\r\n                                batch.update(x,{Nominations:[]})\r\n                            });\r\n                            // Commit the batch\r\n                            batch.commit()\r\n                            .then(function () {\r\n                                dispatch({\r\n                                    type:END_VOTING_SUCCESS,\r\n                                })\r\n                            })\r\n                            .catch(function(error) {\r\n                                dispatch({\r\n                                    type:END_VOTING_FAILURE\r\n                                })\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            dispatch({\r\n                                type:END_VOTING_FAILURE\r\n                            })\r\n                        })\r\n                    })\r\n                    .catch(function(error) {\r\n                        dispatch({\r\n                            type:END_VOTING_FAILURE\r\n                        })\r\n                    });\r\n                })\r\n                .catch(function(error) {\r\n                    dispatch({\r\n                        type:END_VOTING_FAILURE\r\n                    })\r\n                });\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type:END_VOTING_FAILURE\r\n                })\r\n            }\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type:END_VOTING_FAILURE\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// ================================= fetch announcement ================================\r\n\r\nexport const getAnnouncement = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"announce\");\r\n        docRef.onSnapshot(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_ANNOUNCEMENT_SUCCESS,\r\n                    payload:doc.data().list\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// ============================== add announcement ======================================\r\nexport const addAnnouncement = (announcement) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        var announcementRef = db.collection(\"on\").doc(\"announce\");\r\n        announcementRef.update({\r\n            list: firebase.firestore.FieldValue.arrayUnion(announcement)\r\n        })\r\n        .then(()=>{\r\n            dispatch({\r\n                type:ADD_ANNOUNCEMENT_SUCCESS\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            dispatch({\r\n                type:ADD_ANNOUNCEMENT_FAILURE\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// ============================= REMOVE ANNOUNCEMENT =====================================\r\nexport const removeAnnouncement = (announcement) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        var announcementRef = db.collection(\"on\").doc(\"announce\");\r\n        announcementRef.update({\r\n            list: firebase.firestore.FieldValue.arrayRemove(announcement)\r\n        })\r\n        .then(()=>{\r\n            dispatch({\r\n                type:REMOVE_ANNOUNCEMENT_SUCCESS\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            dispatch({\r\n                type:REMOVE_ANNOUNCEMENT_FAILURE\r\n            })\r\n        })\r\n    }\r\n}",["138","139"],"F:\\cinecup\\src\\auth.js",["140"],"F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js",["141","142","143"],"F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js",["144"],"F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js",["145","146"],"F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js",["147","148","149","150","151","152"],"F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js",["153","154","155","156","157","158"],"F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js",["159","160","161","162","163","164","165"],"F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js",["166","167"],"F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js",["168","169","170","171","172"],"F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js",["173","174","175","176"],"F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js",["177","178","179","180","181","182","183","184","185","186"],"import React,{useState,useEffect} from 'react';\r\nimport './AdminDashboardStyle.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {removeBlacklistedMovie, startVoting, stopVoting, removeAnnouncement, addAnnouncement} from '../../action/movie_actions';\r\nimport {Button} from '@material-ui/core'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles,fade } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport firebase from 'firebase';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShareButton from '../shareButton'\r\nimport swal from 'sweetalert';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Img2 from '../../icons/Asset 1@2x.png'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf:\"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0 ,\r\n    width: '100%',\r\n    \r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:\"white\"\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: fade(theme.palette.common.black, 0.45),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.55),\r\n    },\r\n    width:\"100%\",\r\n  },\r\n  inputInput: {\r\n    \r\n    color:\"white\",\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    \r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height:200,\r\n    \r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n  },\r\n}));\r\nconst AdminDashboardComponent = () => {\r\n  const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user);\r\n    console.log(user);\r\n    const [result,setresult] = useState([]);  \r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user.error || user.successmsg){ \r\n            setOpen(true);\r\n        }\r\n    },[user,user.blacklist])\r\n\r\n\r\n    // ======================================= ui ================================\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const useSnackbarStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    //======================================Fetching data from internet ===========================\r\n\r\n    async function fetchData(){\r\n      let arr = [];\r\n      for(let i=0;i<user.blacklist.length;i++){\r\n        let element = user.blacklist[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n        let x=res.data\r\n        arr.push(x)\r\n        if(i===user.blacklist.length-1)\r\n          return arr;\r\n      }  \r\n    }\r\n    //=========================================== Render Card =========================================\r\n\r\n    function RenderCard({r}){\r\n        const RemoveFromBlackList = (e) => {\r\n        e.preventDefault();\r\n        const dataToSubmit = {\r\n            movieId: r.id\r\n        }\r\n        dispatch(removeBlacklistedMovie(dataToSubmit));\r\n        let array = result;\r\n        let cardIndex = array.indexOf(r);\r\n        if(cardIndex !== -1)\r\n        {\r\n            array.splice(cardIndex, 1);\r\n            setresult(array);\r\n        }\r\n        }      \r\n\r\n        return(\r\n          <div className=\"card_s\">\r\n          <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n          \r\n       </div>\r\n       <div className=\"back_s\">\r\n         <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n         <div>\r\n         <h2>{r.title}</h2>\r\n         <h3>{r.release_date}</h3>\r\n         <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n   \r\n         </div>\r\n           \r\n       <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\"\r\n     }}>\r\n       <Link to={`/movie/${r.id}`}   >\r\n       <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n       </Link>\r\n       <Button className=\"button_s\"  style={{marginBottom:10}}\r\n       variant=\"outlined\" color=\"primary\" onClick={(e) => {RemoveFromBlackList(e)}} >\r\n         Remove</Button>\r\n         <div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n      \r\n       </div>\r\n       \r\n         </div>\r\n       </div></div>\r\n        )\r\n    }\r\n    // ===================================================================================================\r\n    useEffect(() =>{\r\n        if(user.isLoggedIn && user.blacklist){\r\n          console.log(\"Chala\")\r\n          fetchData()\r\n          .then((arr)=>{\r\n            console.log(\"Ohh \",arr);\r\n            setresult(arr);\r\n          })\r\n        }\r\n    },[user.isLoggedIn])\r\n\r\n    // ======================== Fetching other users =================================\r\n    const [allusers,setallusers] = useState([]);    \r\n    const [alladmin,setalladmin] = useState([]);\r\n    useEffect(()=>{\r\n      const db = firebase.firestore();\r\n      let unsubscribe = db.collection('users')\r\n      .onSnapshot(function(querySnapshot){\r\n        let arr = [];\r\n        let arr1 = [];\r\n        querySnapshot.forEach((doc)=>{\r\n          if(doc.data().IsAdmin)\r\n            arr1.push(doc.data());\r\n          else\r\n            arr.push(doc.data())\r\n        })\r\n        setallusers(arr);\r\n        setalladmin(arr1);\r\n      })\r\n    },[])\r\n\r\n    function makeAdminAlert(name,emailid,e){\r\n      e.preventDefault();\r\n      swal({\r\n        title: 'Are you sure ?',\r\n        text: `${name} (${emailid}) will become an admin and, he/she will have the rights to remove you from admin.`,\r\n        icon:\"warning\",\r\n        dangerMode: true,\r\n        buttons: true,\r\n      }).then((isConfirm) => {\r\n        if (isConfirm) {\r\n          makeAdmin(name,emailid,e)\r\n        }\r\n    })\r\n  }\r\n\r\n    function makeAdmin(name,emailid,e){\r\n      e.preventDefault()\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:true})\r\n    }\r\n\r\n    function removeFromAdmin(emailid,e){\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:false})\r\n    }\r\n\r\n  // ========================== Start and Stop Voting =========================\r\n  const [name,setname] = useState(\"\");\r\n  const [announcement,setannouncement] = useState(\"\");\r\n  const [nameError,setnameError] = useState(\"\");\r\n  const [announcementError,setannouncementError] = useState(\"\");\r\n  const [altname,setaltname] = useState(false);\r\n  const [altannouncement,setaltannouncement] = useState(false);\r\n  const [disabledSubmit,setdisabledSubmit] = useState(true);\r\n  const [disabledAnnounce,setdisabledAnnounce] = useState(true);\r\n  useEffect(() => {\r\n    if(altname && name.length<3)\r\n    setnameError(\"name must be more than 2 characters\")\r\n    else\r\n    setnameError(\"\")\r\n  },[altname,name])\r\n\r\n  useEffect(() => {\r\n    if(nameError)\r\n      setdisabledSubmit(true);\r\n    else if(altname)\r\n      setdisabledSubmit(false);\r\n      \r\n  },[nameError,altname])\r\n\r\n  useEffect(() => {\r\n    if(announcementError)\r\n      setdisabledAnnounce(true);\r\n    else if(altannouncement)\r\n      setdisabledAnnounce(false);\r\n  },[announcementError,altannouncement])\r\n\r\n  useEffect(() => {\r\n    if(altannouncement && announcement.length<3)\r\n    setannouncementError(\"Announcement must have more than 2 characters\")\r\n    else \r\n    setannouncementError(\"\")\r\n  },[altannouncement,announcement])\r\n\r\n  const startAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: ` Voting for ${name} will start now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        start(e);\r\n      }\r\n  })\r\n  }\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(startVoting({Name:name,Start:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n\r\n  const stopAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: `Contest will end now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        stop(e);\r\n      }\r\n  })\r\n  }\r\n  const stop = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(stopVoting({End:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n  const removeannouncement = (e,element) => {\r\n    e.preventDefault();\r\n    dispatch(removeAnnouncement(element))\r\n  }\r\n  \r\n  const addannouncement = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAnnouncement(announcement))\r\n    setannouncement(\"\")\r\n  }\r\n\r\n  // =========================== Main Return from this component ==================================\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n  return (\r\n    <React.Fragment>\r\n      <main style={{marginTop:\"100px\"}}>\r\n      {user.announcement ?\r\n      <>\r\n      {(user.announcement.map(element => (\r\n      <Grid container style={{marginTop:\"10px\"}}>\r\n        <Grid item xs={12} md={9}>\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n          {element}\r\n        </Alert>\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <Button variant=\"outlined\" color=\"secondary\" small onClick={e => removeannouncement(e,element)}>\r\n            Remove\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n        ))\r\n      )}\r\n      <form Validate className=\"voting\">\r\n      <TextField\r\n        error = {announcementError}\r\n        helperText = {announcementError}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"Name\"\r\n        label=\"Announce\"\r\n        name=\"announce\"\r\n        autoComplete=\"name\"\r\n        autoFocus\r\n        value={announcement}\r\n        onChange={(e) => {setannouncement(e.target.value);setaltannouncement(true);}}\r\n        InputProps={{className:\"voting_text\"}}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => addannouncement(e)}  \r\n        disabled = {disabledAnnounce}\r\n      >\r\n      Announce\r\n      </Button>\r\n    </form>\r\n    </>\r\n      :\r\n      <form Validate className=\"voting\">\r\n      <TextField\r\n        error = {announcementError}\r\n        helperText = {announcementError}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"Name\"\r\n        label=\"Event\"\r\n        name=\"event\"\r\n        autoComplete=\"name\"\r\n        autoFocus\r\n        value={announcement}\r\n        onChange={(e) => {setannouncement(e.target.value);setaltannouncement(true);}}\r\n        InputProps={{className:\"voting_text\"}}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => addannouncement(e)}  \r\n        disabled = {disabledAnnounce}\r\n      >\r\n      Announce\r\n      </Button>\r\n    </form>\r\n      }\r\n      {\r\n        !user.isVoting ?\r\n              <form Validate className=\"voting\">\r\n              <TextField\r\n                error = {nameError}\r\n                helperText = {nameError}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Event\"\r\n                name=\"event\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => {setname(e.target.value);setaltname(true);}}\r\n                InputProps={{className:\"voting_text\"}}\r\n              />\r\n       \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={startAlert}  \r\n                disabled = {disabledSubmit}\r\n              >\r\n                Start Voting\r\n              </Button>\r\n            </form>\r\n            :\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={stopAlert}  \r\n              >\r\n                Stop Voting\r\n              </Button>\r\n      }\r\n      </main>\r\n      <div style={{marginTop:100}}>\r\n        <h1 >BlackListed Movies</h1>\r\n      </div>\r\n      <main>\r\n      <section className=\"wrapper1\">\r\n          {  \r\n            result && result.length !== 0 ?\r\n            (\r\n              result.map((resul) => (              \r\n              <RenderCard key={resul.id} r={resul} />   \r\n              ))\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Blacklisted movie</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n        </section>\r\n        {\r\n          (user.error ) ?\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {`${user.error}`}\r\n            \r\n          </Alert>\r\n          </Snackbar>\r\n          : user.successmsg ?\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            {`${user.successmsg}`}\r\n          </Alert>\r\n        </Snackbar>\r\n        :\r\n        <div></div>\r\n        }\r\n      {/* Admin */}\r\n      <div style={{marginTop:100}}>\r\n        <h1 >All Administrators</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            alladmin.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {alladmin.map((admin) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={admin.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" >{admin.Name}</h3>\r\n                          <h4 class=\"title\">{admin.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {removeFromAdmin(admin.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Dismiss From Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Admin users</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n      </main>\r\n      {/* Users */}\r\n      </main>\r\n      <div style={{marginTop:100,textAlign:\"center\"}}>\r\n        <h1 >All users</h1>\r\n      </div>\r\n      <main>\r\n      <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search','id':'sear'}}\r\n              onChange={()=>{\r\n                  var all = document.getElementById(\"users_card\").getElementsByClassName(\"our-team\");\r\n                \r\n                console.log(all)\r\n                for(var i=0;i<all.length;i++)\r\n                  {\r\n                    var txtValue = all[i].innerText;\r\n                    console.log(txtValue)\r\n                    if (txtValue.toLowerCase().includes(document.getElementById(\"sear\").value) ) {\r\n                      all[i].style.display = \"\";\r\n                    } else {\r\n                      all[i].style.display = \"none\";\r\n                    }\r\n                    \r\n                  } \r\n              }}\r\n              \r\n            />\r\n          {  \r\n            allusers.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\" id=\"users_card\">\r\n              {allusers.map((user) => (              \r\n                <React.Fragment className=\"profile-card\" >\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={user.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" >{user.Name}</h3>\r\n                          <h4 class=\"title\">{user.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {makeAdminAlert(user.Name,user.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Make Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<div className=\"results\">\r\n\t\t\t\t<img src={Img2} className=\"noresults\"/>\r\n\t\t\t\t<h2>No Users found</h2>\r\n\t\t\t\t\r\n\t\t\t</div>)\r\n          }\r\n        </main>\r\n    </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default AdminDashboardComponent;","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js",["187","188"],"F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js",["189","190","191","192","193","194"],"F:\\cinecup\\src\\reducer\\user_reducer.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js",["195","196"],"F:\\cinecup\\src\\action\\user_actions.js",["197","198","199","200","201","202","203","204","205","206"],"F:\\cinecup\\src\\action\\types.js",[],"F:\\cinecup\\src\\key\\key.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js",["207"],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js",["208"],"F:\\cinecup\\src\\Components\\shareButton.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js",["209","210","211","212","213","214"],"F:\\cinecup\\src\\theme.js",[],"F:\\cinecup\\src\\global.js",[],"F:\\cinecup\\src\\Components\\Toggle.js",["215"],{"ruleId":"216","severity":1,"message":"217","line":65,"column":3,"nodeType":"218","endLine":65,"endColumn":5,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":8,"column":5,"nodeType":"222","messageId":"223","endLine":8,"endColumn":28},{"ruleId":"220","severity":1,"message":"224","line":32,"column":13,"nodeType":"222","messageId":"223","endLine":32,"endColumn":24},{"ruleId":"220","severity":1,"message":"224","line":83,"column":13,"nodeType":"222","messageId":"223","endLine":83,"endColumn":24},{"ruleId":"220","severity":1,"message":"224","line":124,"column":13,"nodeType":"222","messageId":"223","endLine":124,"endColumn":24},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"216","severity":1,"message":"229","line":26,"column":14,"nodeType":"218","endLine":26,"endColumn":54,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":41,"column":9,"nodeType":"222","messageId":"223","endLine":41,"endColumn":26},{"ruleId":"216","severity":1,"message":"232","line":79,"column":5,"nodeType":"218","endLine":79,"endColumn":18,"suggestions":"233"},{"ruleId":"220","severity":1,"message":"234","line":81,"column":9,"nodeType":"222","messageId":"223","endLine":81,"endColumn":18},{"ruleId":"220","severity":1,"message":"235","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"236","line":1,"column":15,"nodeType":"222","messageId":"223","endLine":1,"endColumn":23},{"ruleId":"220","severity":1,"message":"237","line":5,"column":21,"nodeType":"222","messageId":"223","endLine":5,"endColumn":32},{"ruleId":"220","severity":1,"message":"238","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":19},{"ruleId":"220","severity":1,"message":"239","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":24},{"ruleId":"220","severity":1,"message":"240","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"241","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":11},{"ruleId":"220","severity":1,"message":"242","line":77,"column":11,"nodeType":"222","messageId":"223","endLine":77,"endColumn":26},{"ruleId":"220","severity":1,"message":"243","line":132,"column":11,"nodeType":"222","messageId":"223","endLine":132,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":45,"column":13,"nodeType":"246","messageId":"247","endLine":45,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":50,"column":13,"nodeType":"246","messageId":"247","endLine":50,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":55,"column":13,"nodeType":"246","messageId":"247","endLine":55,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":143,"column":7,"nodeType":"250","endLine":143,"endColumn":112},{"ruleId":"220","severity":1,"message":"251","line":173,"column":11,"nodeType":"222","messageId":"223","endLine":173,"endColumn":18},{"ruleId":"216","severity":1,"message":"252","line":194,"column":7,"nodeType":"218","endLine":194,"endColumn":16,"suggestions":"253"},{"ruleId":"220","severity":1,"message":"254","line":8,"column":16,"nodeType":"222","messageId":"223","endLine":8,"endColumn":21},{"ruleId":"216","severity":1,"message":"255","line":29,"column":7,"nodeType":"218","endLine":29,"endColumn":9,"suggestions":"256"},{"ruleId":"216","severity":1,"message":"257","line":43,"column":7,"nodeType":"218","endLine":43,"endColumn":9,"suggestions":"258"},{"ruleId":"216","severity":1,"message":"259","line":54,"column":7,"nodeType":"218","endLine":54,"endColumn":15,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":80,"column":3,"nodeType":"250","endLine":80,"endColumn":78},{"ruleId":"261","severity":1,"message":"262","line":132,"column":13,"nodeType":"250","endLine":132,"endColumn":105},{"ruleId":"244","severity":1,"message":"263","line":150,"column":21,"nodeType":"246","messageId":"247","endLine":150,"endColumn":23},{"ruleId":"220","severity":1,"message":"264","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":161,"column":5,"nodeType":"250","endLine":161,"endColumn":44},{"ruleId":"220","severity":1,"message":"231","line":40,"column":9,"nodeType":"222","messageId":"223","endLine":40,"endColumn":26},{"ruleId":"265","severity":1,"message":"266","line":88,"column":65,"nodeType":"246","messageId":"267","endLine":88,"endColumn":66},{"ruleId":"265","severity":1,"message":"266","line":88,"column":118,"nodeType":"246","messageId":"267","endLine":88,"endColumn":119},{"ruleId":"216","severity":1,"message":"268","line":136,"column":5,"nodeType":"218","endLine":136,"endColumn":22,"suggestions":"269"},{"ruleId":"261","severity":1,"message":"262","line":157,"column":5,"nodeType":"250","endLine":157,"endColumn":44},{"ruleId":"220","severity":1,"message":"239","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":24},{"ruleId":"220","severity":1,"message":"240","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"231","line":59,"column":9,"nodeType":"222","messageId":"223","endLine":59,"endColumn":26},{"ruleId":"220","severity":1,"message":"243","line":104,"column":11,"nodeType":"222","messageId":"223","endLine":104,"endColumn":22},{"ruleId":"220","severity":1,"message":"231","line":40,"column":11,"nodeType":"222","messageId":"223","endLine":40,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":88,"column":67,"nodeType":"246","messageId":"267","endLine":88,"endColumn":68},{"ruleId":"265","severity":1,"message":"266","line":88,"column":120,"nodeType":"246","messageId":"267","endLine":88,"endColumn":121},{"ruleId":"216","severity":1,"message":"270","line":135,"column":7,"nodeType":"218","endLine":135,"endColumn":24,"suggestions":"271"},{"ruleId":"220","severity":1,"message":"224","line":142,"column":11,"nodeType":"222","messageId":"223","endLine":142,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":417,"column":5,"nodeType":"250","endLine":417,"endColumn":44},{"ruleId":"261","severity":1,"message":"262","line":453,"column":27,"nodeType":"250","endLine":453,"endColumn":95},{"ruleId":"261","severity":1,"message":"262","line":469,"column":5,"nodeType":"250","endLine":469,"endColumn":44},{"ruleId":"261","severity":1,"message":"262","line":489,"column":27,"nodeType":"250","endLine":489,"endColumn":94},{"ruleId":"261","severity":1,"message":"262","line":505,"column":5,"nodeType":"250","endLine":505,"endColumn":44},{"ruleId":"220","severity":1,"message":"251","line":31,"column":13,"nodeType":"222","messageId":"223","endLine":31,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":83,"column":5,"nodeType":"250","endLine":83,"endColumn":44},{"ruleId":"220","severity":1,"message":"272","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":20},{"ruleId":"220","severity":1,"message":"273","line":9,"column":22,"nodeType":"222","messageId":"223","endLine":9,"endColumn":31},{"ruleId":"220","severity":1,"message":"274","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":22},{"ruleId":"220","severity":1,"message":"275","line":35,"column":8,"nodeType":"222","messageId":"223","endLine":35,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":114,"column":19,"nodeType":"250","endLine":114,"endColumn":68},{"ruleId":"261","severity":1,"message":"262","line":119,"column":19,"nodeType":"250","endLine":119,"endColumn":137},{"ruleId":"220","severity":1,"message":"276","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":23},{"ruleId":"220","severity":1,"message":"277","line":4,"column":9,"nodeType":"222","messageId":"223","endLine":4,"endColumn":15},{"ruleId":"220","severity":1,"message":"278","line":143,"column":11,"nodeType":"222","messageId":"223","endLine":143,"endColumn":20},{"ruleId":"220","severity":1,"message":"279","line":144,"column":11,"nodeType":"222","messageId":"223","endLine":144,"endColumn":23},{"ruleId":"220","severity":1,"message":"280","line":165,"column":17,"nodeType":"222","messageId":"223","endLine":165,"endColumn":22},{"ruleId":"220","severity":1,"message":"281","line":216,"column":17,"nodeType":"222","messageId":"223","endLine":216,"endColumn":22},{"ruleId":"220","severity":1,"message":"282","line":218,"column":17,"nodeType":"222","messageId":"223","endLine":218,"endColumn":27},{"ruleId":"220","severity":1,"message":"280","line":240,"column":11,"nodeType":"222","messageId":"223","endLine":240,"endColumn":16},{"ruleId":"220","severity":1,"message":"278","line":288,"column":11,"nodeType":"222","messageId":"223","endLine":288,"endColumn":20},{"ruleId":"220","severity":1,"message":"279","line":289,"column":11,"nodeType":"222","messageId":"223","endLine":289,"endColumn":23},{"ruleId":"220","severity":1,"message":"281","line":291,"column":11,"nodeType":"222","messageId":"223","endLine":291,"endColumn":16},{"ruleId":"220","severity":1,"message":"282","line":293,"column":11,"nodeType":"222","messageId":"223","endLine":293,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":13,"column":6,"nodeType":"250","endLine":13,"endColumn":35},{"ruleId":"261","severity":1,"message":"262","line":20,"column":5,"nodeType":"250","endLine":20,"endColumn":44},{"ruleId":"220","severity":1,"message":"283","line":7,"column":17,"nodeType":"222","messageId":"223","endLine":7,"endColumn":23},{"ruleId":"220","severity":1,"message":"284","line":16,"column":10,"nodeType":"222","messageId":"223","endLine":16,"endColumn":32},{"ruleId":"220","severity":1,"message":"251","line":43,"column":8,"nodeType":"222","messageId":"223","endLine":43,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":100,"column":64,"nodeType":"246","messageId":"267","endLine":100,"endColumn":65},{"ruleId":"265","severity":1,"message":"266","line":100,"column":122,"nodeType":"246","messageId":"267","endLine":100,"endColumn":123},{"ruleId":"285","severity":1,"message":"286","line":169,"column":1,"nodeType":"287","messageId":"288","endLine":184,"endColumn":14},{"ruleId":"220","severity":1,"message":"289","line":8,"column":9,"nodeType":"222","messageId":"223","endLine":8,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["290"],"no-unused-vars","'BLACKLIST_MOVIE_FAILURE' is defined but never used.","Identifier","unusedVar","'unsubscribe' is assigned a value but never used.","no-native-reassign",["291"],"no-negated-in-lhs",["292"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["293"],"'useSnackbarStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["294"],"'openPopup' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Snackbarclasses' is assigned a value but never used.","'handleClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["295"],"'anime' is defined but never used.","React Hook useEffect has missing dependencies: 'cast' and 'creditsapi'. Either include them or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'reviews' and 'reviewsapi'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["298"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'ShareButton' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'fetchData', 'result', and 'user.user'. Either include them or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'fetchData' and 'user.blacklist'. Either include them or remove the dependency array.",["300"],"'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.","'Switch' is defined but never used.","'LocalMoviesIcon' is defined but never used.","'Button' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Hidden' is defined but never used.","'getAccessTokenSilently' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ThemeContext' is assigned a value but never used.",{"desc":"301","fix":"302"},"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [dispatch]",{"range":"319","text":"320"},"Update the dependencies array to be: [dispatch, props.history, user, user.isLoggedIn]",{"range":"321","text":"322"},"Update the dependencies array to be: [queryString, search]",{"range":"323","text":"324"},"Update the dependencies array to be: [contest, fetchData]",{"range":"325","text":"326"},"Update the dependencies array to be: [cast, creditsapi]",{"range":"327","text":"328"},"Update the dependencies array to be: [reviews, reviewsapi]",{"range":"329","text":"330"},"Update the dependencies array to be: [apiurl, result]",{"range":"331","text":"332"},"Update the dependencies array to be: [fetchData, result, user.isLoggedIn, user.user]",{"range":"333","text":"334"},"Update the dependencies array to be: [fetchData, user.blacklist, user.isLoggedIn]",{"range":"335","text":"336"},[2547,2549],"[dispatch]",[1108,1148],"[dispatch, props.history, user, user.isLoggedIn]",[2231,2244],"[queryString, search]",[5178,5187],"[contest, fetchData]",[930,932],"[cast, creditsapi]",[1299,1301],"[reviews, reviewsapi]",[1549,1557],"[apiurl, result]",[4392,4409],"[fetchData, result, user.isLoggedIn, user.user]",[4799,4816],"[fetchData, user.blacklist, user.isLoggedIn]"]