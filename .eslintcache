[{"F:\\cinecup\\src\\index.js":"1","F:\\cinecup\\src\\App.js":"2","F:\\cinecup\\src\\reportWebVitals.js":"3","F:\\cinecup\\src\\reducer\\index.js":"4","F:\\cinecup\\src\\fontawesome.js":"5","F:\\cinecup\\src\\auth.js":"6","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js":"7","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js":"8","F:\\cinecup\\src\\Components\\FooterComponent\\FooterComponent.js":"9","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js":"10","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js":"11","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js":"12","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js":"13","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js":"14","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js":"15","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js":"16","F:\\cinecup\\src\\reducer\\user_reducer.js":"17","F:\\cinecup\\src\\action\\user_actions.js":"18","F:\\cinecup\\src\\key\\key.js":"19","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js":"20","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js":"21","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js":"22","F:\\cinecup\\src\\action\\types.js":"23","F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js":"24","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js":"25","F:\\cinecup\\src\\action\\movie_actions.js":"26","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js":"27"},{"size":1958,"mtime":1609410612438,"results":"28","hashOfConfig":"29"},{"size":2761,"mtime":1609089562536,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607518623915,"results":"31","hashOfConfig":"29"},{"size":160,"mtime":1608579878367,"results":"32","hashOfConfig":"29"},{"size":297,"mtime":1607853473199,"results":"33","hashOfConfig":"29"},{"size":1261,"mtime":1608990011982,"results":"34","hashOfConfig":"29"},{"size":2366,"mtime":1607847146261,"results":"35","hashOfConfig":"29"},{"size":300,"mtime":1608731171847,"results":"36","hashOfConfig":"29"},{"size":260,"mtime":1608043721147,"results":"37","hashOfConfig":"29"},{"size":8180,"mtime":1609090687869,"results":"38","hashOfConfig":"29"},{"size":3575,"mtime":1608141516252,"results":"39","hashOfConfig":"29"},{"size":9547,"mtime":1609090726526,"results":"40","hashOfConfig":"29"},{"size":2006,"mtime":1608398964730,"results":"41","hashOfConfig":"29"},{"size":4895,"mtime":1609338171651,"results":"42","hashOfConfig":"29"},{"size":5451,"mtime":1609179354302,"results":"43","hashOfConfig":"29"},{"size":12578,"mtime":1609089928974,"results":"44","hashOfConfig":"29"},{"size":4847,"mtime":1609065952289,"results":"45","hashOfConfig":"29"},{"size":17915,"mtime":1609088791106,"results":"46","hashOfConfig":"29"},{"size":838,"mtime":1609428650999,"results":"47","hashOfConfig":"29"},{"size":432,"mtime":1608038641665,"results":"48","hashOfConfig":"29"},{"size":765,"mtime":1608037850795,"results":"49","hashOfConfig":"29"},{"size":575,"mtime":1609093566526,"results":"50","hashOfConfig":"29"},{"size":1647,"mtime":1609057559381,"results":"51","hashOfConfig":"29"},{"size":5780,"mtime":1609428702192,"results":"52","hashOfConfig":"29"},{"size":4804,"mtime":1609338171608,"results":"53","hashOfConfig":"29"},{"size":5691,"mtime":1609400543674,"results":"54","hashOfConfig":"29"},{"size":9276,"mtime":1609179354168,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"7gk6ho",{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"58"},"F:\\cinecup\\src\\index.js",[],["129","130"],"F:\\cinecup\\src\\App.js",["131","132","133","134"],"import {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport './fontawesome';\r\nimport './App.css';\r\nimport DashBoardPageComponent from './Components/DashboardPageComponent/DashboardPageComponent';\r\nimport ErrorPageComponent from './Components/ErrorPageComponent/ErrorPageComponent';\r\nimport FooterComponent from './Components/FooterComponent/FooterComponent';\r\nimport HeaderComponent from './Components/HeaderComponent/HeaderComponent';\r\nimport HomePageComponent from './Components/HomePageComponent/HomePageComponent';\r\nimport LoginPageComponent from './Components/LoginPageComponent/LoginPageComponent';\r\nimport SearchPageComponent from './Components/SearchPageComponent/SearchPageComponent';\r\nimport SignUpPageComponent from './Components/SignUpPageComponent/SignUpPageComponent';\r\nimport MoviePageComponent from './Components/MoviePageComponent/MoviePageComponent';\r\nimport LeaderboardPageComponent from './Components/LeaderboardPageComponent/LeaderboardPageComponent';\r\nimport AdminDashboardComponent from './Components/AdminDashboardComponent/AdminDashboardComponent';\r\nimport Auth from './auth';\r\nimport ResetPassword from './Components/LoginPageComponent/ResetPassword';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchBlackListedMovies, fetchMoviesData} from './action/movie_actions';\r\nimport React,{useEffect,useState} from 'react';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    dispatch(fetchMoviesData());\r\n    dispatch(fetchBlackListedMovies());\r\n},[])\r\n  return (\r\n    <>    \r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <HeaderComponent></HeaderComponent>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(HomePageComponent,null)}></Route>\r\n          <Route exact path=\"/leaderboard\" component={Auth(LeaderboardPageComponent,null)}></Route>\r\n          <Route exact path=\"/login\" component={Auth(LoginPageComponent,false)}></Route>\r\n          <Route exact path=\"/resetpassword\" component={Auth(ResetPassword,false)}></Route>\r\n          <Route exact path=\"/signup\" component={Auth(SignUpPageComponent,false)}></Route>\r\n          <Route exact path=\"/dashboard\" component={Auth(DashBoardPageComponent,true)}></Route>\r\n          <Route exact path=\"/admin\" component={Auth(AdminDashboardComponent,true,true)}></Route>\r\n          <Route exact path=\"/search\" component={Auth(SearchPageComponent,null)}></Route>\r\n          <Route exact path=\"/movie/:movie_id\" component={Auth(MoviePageComponent,null)}></Route>\r\n          <Route path=\"*\" component={Auth(ErrorPageComponent,null)}></Route>\r\n        </Switch>\r\n       \r\n      </div>\r\n    </BrowserRouter>\r\n    \r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\cinecup\\src\\reportWebVitals.js",[],"F:\\cinecup\\src\\reducer\\index.js",[],"F:\\cinecup\\src\\fontawesome.js",[],"F:\\cinecup\\src\\auth.js",["135"],"import React, { useEffect } from 'react';\r\nimport { auth } from './action/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function Auth (ComposedClass, status, admin = false) {\r\n    function AuthenticationCheck(props) {\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        useEffect(() => {\r\n            dispatch(auth()).then(async response => {\r\n            console.log(\"------------\",user,\"----------------------\")\r\n            // response is true means user logged in\r\n            // logged in user can not see login and signup page\r\n            if (user.isLoggedIn && status === false) {\r\n                props.history.push('/')\r\n            }\r\n            // redirect to \r\n            if (user.isLoggedIn === false && status === true) {\r\n                props.history.push('/login')\r\n            }\r\n            // if user is not admin\r\n            else if(user.isLoggedIn === true && admin === true && user.user.IsAdmin === false){\r\n                props.history.push('/error');\r\n            }\r\n\r\n        })}, [dispatch,props.history,user.isLoggedIn])\r\n        return (\r\n            <ComposedClass {...props}/>\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js",["136"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './ErrorPageStyle.css'\r\n\r\nfunction ErrorPageComponent(){\r\n    \r\n        return (\r\n            <div className=\"errorcomp\">\r\n                <section className=\"wrapper\">\r\n                    <div className=\"container\">\r\n                        <div id=\"scene\" className=\"scene\" data-hover-only=\"false\">\r\n                            <div className=\"circle\" data-depth=\"1.2\"></div>\r\n                            <div className=\"one\" data-depth=\"0.9\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"two\" data-depth=\"0.60\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"three\" data-depth=\"0.40\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"p404\" data-depth=\"0.50\">404</p>\r\n                            <p className=\"p404\" data-depth=\"0.10\">404</p>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <article>\r\n                                <p>Uh oh! Looks like you got lost. <br/>Go back to the homepage if you dare!</p>\r\n                                <button><Link to=\"/\">i dare!</Link></button>\r\n                            </article>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ErrorPageComponent;","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js",["137"],"import React, { Component } from 'react';\r\nimport './HomePageStyle.css'\r\n\r\nfunction HomePageComponent (){\r\n    \r\n        return (\r\n            <>\r\n            <div><h2>Movie Nomination Leaderboard</h2></div>\r\n               \r\n            </>\r\n        );\r\n   \r\n}\r\n\r\n\r\nexport default HomePageComponent;","F:\\cinecup\\src\\Components\\FooterComponent\\FooterComponent.js",["138"],"import React, { Component } from 'react';\r\n\r\nfunction FooterComponent (){\r\n   \r\n        return (\r\n            <div style={{left:0,bottom:0,right:0}}>\r\n                FooterComponent\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default FooterComponent;","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js",["139","140","141","142","143"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux\r\nimport {loginwithfacebook, loginwithgoogle, login} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport ResetPassword from './ResetPassword'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'80px',\r\n      height: '80vh',\r\n      backgroundColor: \"rgb(0, 18, 34)\",\r\n      \r\n      \r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nfunction LoginPageComponent(){\r\n    const classes = useStyles();\r\n    const Snackbarclasses = useSnackbarStyles();\r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email,setemail] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n\r\n    useEffect(() => {\r\n      if(user.error){ \r\n          setOpen(true);\r\n      }\r\n    },[user.error])\r\n\r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!emailError && !passwordError && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[passwordError, emailError, email, password])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Login = (e) => {\r\n      e.preventDefault();\r\n      dispatch(login({email:email,password:password}))\r\n    }\r\n    const loginWithGoogle = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithgoogle());\r\n    }\r\n    const loginWithFaceBook = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithfacebook());\r\n    }\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n    \r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (    \r\n    <Grid container component=\"main\" className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} Validate>\r\n            <TextField\r\n              error = {emailError}\r\n              helperText = {emailError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e)=>{setemail(e.target.value);setaltemail(true)}}\r\n            />\r\n            <TextField\r\n              error = {passwordError}\r\n              helperText = {passwordError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"  \r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e)=>{setpassword(e.target.value);setaltpassword(true)}}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={Login}\r\n              disabled = {disabledSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {\r\n              user.error ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"/resetpassword\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n                    style={{marginTop:\"25px\",marginBottom:\"25px\"}}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<FontAwesomeIcon icon={faGoogle}/>}\r\n                    onClick={(e) => {loginWithGoogle(e)}} >\r\n                    Login with Google\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<FontAwesomeIcon icon={faFacebookF}/>}\r\n                    onClick={(e) => {loginWithFaceBook(e)}}>\r\n                    Login with Facebook\r\n                </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n    \r\n}\r\n\r\nexport default LoginPageComponent;","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js",[],"F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js",["144","145","146","147","148","149","150","151","152","153","154"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {faFacebookF, faGoogle} from '@fortawesome/free-brands-svg-icons'\r\nimport { faLock, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux\r\nimport {register} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\nfunction SignUpPageComponent(){\r\n    const classes = useStyles();\r\n\r\n    const Snackbarclasses = useSnackbarStyles();\r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [firstname,setfirstname] = useState(\"\");\r\n    const [lastname,setlastname] = useState(\"\");\r\n    const [email,setemail] = useState(\"\");\r\n    const [profilepic,setprofilepic]=useState(null);\r\n    const [password,setpassword] = useState(\"\");\r\n    const [firstnameError,setfirstnameError] = useState(\"\");\r\n    const [lastnameError,setlastnameError] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altfirstname,setaltfirstname] = useState(false);\r\n    const [altlastname,setaltlastname] = useState(false);\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n    const [imageAsFile, setImageAsFile] = useState('')\r\n    \r\n    function Alert(props) {\r\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    useEffect(() => {\r\n      if(user.error || user.successmsg){ \r\n          setOpen(true);\r\n      }\r\n    },[user])\r\n\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if(altfirstname && firstname.length<3)\r\n      setfirstnameError(\"Firstname must be more than 2 characters\")\r\n      else\r\n      setfirstnameError(\"\")\r\n    },[altfirstname, firstname])\r\n\r\n    useEffect(() => {\r\n      if(altlastname && lastname.length<3)\r\n      setlastnameError(\"Lastname must be more than 2 characters\")\r\n      else\r\n      setlastnameError(\"\")\r\n    },[altlastname, lastname])\r\n    \r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!firstnameError && !lastnameError && !emailError && !passwordError && firstname && lastname && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[firstnameError, lastnameError, passwordError, emailError, firstname, lastname, email, password])\r\n    \r\n    const handleChange = (e) => {\r\n      \r\n      if (e.target.files[0]) {\r\n        \r\n        setprofilepic(e.target.files[0]);\r\n        \r\n      }\r\n    }\r\n    \r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const signUp = (e) => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        firstname,lastname,email,password,profilepic\r\n      }\r\n      console.log(dataToSubmit)\r\n      dispatch(register(dataToSubmit));\r\n    }\r\n    \r\n\r\n    \r\n\r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n        return (\r\n          <Container component=\"main\" maxWidth=\"xs\" >\r\n     <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} Validate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {firstnameError}\r\n                helperText = {firstnameError}\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(e) => {setfirstname(e.target.value);setaltfirstname(true);}}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {lastnameError}\r\n                helperText = {lastnameError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastname}\r\n                onChange={(e)=>{setlastname(e.target.value);setaltlastname(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {emailError}\r\n                helperText = {emailError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e)=>{setemail(e.target.value);setaltemail(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {passwordError}\r\n                helperText = {passwordError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e)=>{setpassword(e.target.value);setaltpassword(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <input\r\n          type=\"file\"\r\n          \r\n          onChange={(e)=>{handleChange(e)}}\r\n        />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUp}\r\n            disabled = {disabledSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {\r\n            user.error ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : <div></div>\r\n          }\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n        );\r\n    \r\n}\r\n\r\nexport default SignUpPageComponent;","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js",["155","156"],"import {React,useState,useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport {useParams} from 'react-router-dom';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from 'axios';\r\nimport './MoviePageStyle.css'\r\nconst MoviePageComponent = () => {\r\n    const [result, setresult] = useState({});\r\n    const [trailerurl , settrailerurl] = useState(\"\");\r\n    const { movie_id } = useParams();\r\n\r\n\r\n    var apiurl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${TMDB_API_KEY}`;\r\n    useEffect(() =>{\r\n      axios(apiurl)\r\n      .then((res) => {\r\n          console.log(result);\r\n          setresult(res.data);\r\n      })\r\n    },[apiurl])\r\n    var trailerapi = `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${TMDB_API_KEY}`\r\n    useEffect(()=>{\r\n      axios(trailerapi)\r\n      .then(({data} ) => {\r\n        if(data && data.results && data.results.length && data.results[0].key)\r\n        {\r\n          console.log(data.results[0].key);\r\n          settrailerurl(data.results[0].key);\r\n        }\r\n      })\r\n    },[trailerapi])\r\n      const opts = {\r\n        \r\n        playerVars: {\r\n          \r\n          autoplay: 0\r\n        },\r\n      };\r\n    return ( \r\n        <div>\r\n           <div className=\"main1\">\r\n\t<div className=\"image\">\r\n\t\t<img src={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\r\n\t\t<div className=\"overlay\">\r\n\t\t\t<h1>{result.title}</h1>\r\n\t\t\t<h4>{result.runtime} min | {result.release_date}</h4>\r\n      {/* <h4>{result.genres[0].name}</h4> */}\r\n\t\t</div>\r\n\t</div>\r\n\t<div className=\"afterImage\">\r\n\t\t<div className=\"left1\">\r\n\t\t\t<h3>Description</h3>\r\n\t\t\t<p>{result.overview}\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div className=\"right1\">\r\n    {\r\n              trailerurl ? \r\n              <YouTube videoId={trailerurl} className=\"trail\" opts={opts}  />\r\n              :\r\n              (\r\n              <div>\r\n              </div>\r\n              )  \r\n            }\r\n     \r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n </div>\r\n    );\r\n};\r\n\r\nexport default MoviePageComponent;","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js",["157","158","159"],"import React, { useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Search from './Search'\r\nimport Results from './Results'\r\nimport Popup from './Popup'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useSelector} from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nfunction SearchPageComponent(){\r\n  const user = useSelector(state => state.user);\r\n  const [queryString, setqueryString] = useState(\"\");\r\n  const [results,setresults] = useState([]);\r\n  const [selected,setselected] = useState({});\r\n  const [isLoading,setisLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  var apiurl = `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${queryString}`;  \r\n  \r\nlet nominations;\r\nif(user.isLoggedIn)\r\n{\r\n  nominations=user.user.Nominations.length\r\n}\r\nelse{\r\n  nominations=10\r\n}\r\n\r\n  useEffect(() => {\r\n    if(user.error || nominations === 5 || user.successmsg){ \r\n        setOpen(true);\r\n    }\r\n  },[user,nominations])\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const search = () => {\r\n      console.log(queryString);\r\n      if(queryString)\r\n      {\r\n      axios(apiurl)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let results = data.results;\r\n        setresults(results);\r\n        console.log(results);\r\n        setisLoading(false);\r\n      })\r\n      }\r\n      else{\r\n        axios(`https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB_API_KEY}`)\r\n        .then(({ data }) => {\r\n        let results = data.results;\r\n        setresults(results);\r\n        setisLoading(false);\r\n      })\r\n    }\r\n  }\r\n      \r\n  const handleInput = (e) => {\r\n    setisLoading(true);\r\n    setqueryString(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    search();\r\n  },[queryString]);\r\n\r\n  const openPopup = id => {\r\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\r\n      let result = data;\r\n      console.log(result);\r\n      setselected(result);\r\n    });\r\n  }\r\n    \r\n  const closePopup = () => {\r\n    setselected({});\r\n  }\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Movie Search</h1>\r\n        </header>\r\n        <main>\r\n          <Search handleInput={handleInput} search={search} />\r\n          {\r\n            !isLoading ?\r\n            <React.Fragment>\r\n              <Results results={results}/>\r\n              {(typeof selected.Title != \"undefined\") ? <Popup selected={selected} closePopup={closePopup} /> : false}\r\n            </React.Fragment>\r\n            :\r\n            <div className=\"wrapper\">\r\n              <Skeleton variant=\"rect\" animation=\"wave\"  className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n\r\n            </div>\r\n            \r\n          }\r\n          {\r\n              (user.error ) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n                \r\n              </Alert>\r\n              </Snackbar>\r\n              : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n             {\r\n              (nominations === 5) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n               \r\n                You have already nominated 5 movies to add another remove one first\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n        </main>\r\n        \r\n      </div>\r\n    );\r\n     \r\n}\r\n\r\nexport default SearchPageComponent;","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js",["160","161","162","163","164"],"import React,{useState,useEffect} from 'react';\r\nimport './DashboardStyle.css'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {remove_nominate} from '../../action/user_actions';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {Button} from '@material-ui/core'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\nfunction DashboardPageComponent(){\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n  const [result,setresult] = useState([]);  \r\n  const [open, setOpen] = useState(false);\r\n  let nominations;\r\n  if(user.isLoggedIn)\r\n  {\r\n    nominations=user.user.Nominations.length\r\n  }\r\n  else{\r\n    nominations=10\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(user.error || nominations === 5 || user.successmsg){ \r\n        setOpen(true);\r\n    }\r\n  },[user,nominations])\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  //======================================Fetching data from internet ===========================\r\n  const getMovieNominations = () => {\r\n    let arr = [];\r\n    user.user.Nominations.forEach(element => {\r\n      axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n      .then((res) => {\r\n          let x=res.data\r\n          arr.push(x);  \r\n      })\r\n    });\r\n    setresult(arr);\r\n  }\r\n  //=========================================== Render Card =========================================\r\n\r\n  function RenderCard({r}){\r\n    const Remove_Nominate = (e) => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        Email: user.user.Email,\r\n        movieId: r.id\r\n      }\r\n      console.log(dataToSubmit);\r\n      dispatch(remove_nominate(dataToSubmit));\r\n      let array = result;\r\n      let cardIndex = array.indexOf(r);\r\n      if(cardIndex !== -1)\r\n      {\r\n        array.splice(cardIndex, 1);\r\n        setresult(array);\r\n      }\r\n    }      \r\n\r\n      return(\r\n        <div className=\"card_s\">\r\n        <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n        \r\n     </div>\r\n     <div className=\"back_s\">\r\n       <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n       <div>\r\n       <h2>{r.title}</h2>\r\n       <h3>{r.release_date}</h3>\r\n       <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n \r\n       </div>\r\n         \r\n     <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n   justifyContent: \"center\",\r\n   alignItems: \"center\"\r\n   }}>\r\n     <Link to={`/movie/${r.id}`}   >\r\n     <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n     </Link>\r\n     <Button className=\"button_s\"  style={{marginBottom:10}}\r\n     variant=\"outlined\" color=\"primary\" onClick={(e) => {Remove_Nominate(e)}} >\r\n       Remove</Button>\r\n    \r\n     </div>\r\n     \r\n       </div>\r\n     </div></div>\r\n      )\r\n    }\r\n    // ===================================================================================================\r\n  useEffect(() =>{\r\n    if(user.isLoggedIn){\r\n      getMovieNominations();\r\n      console.log(\"Render Card Chala\")\r\n      console.log(result);\r\n     }\r\n  },[user.isLoggedIn])\r\n  // Main Return from this component\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n        return (\r\n        <React.Fragment>\r\n          <div style={{marginTop:100}}>\r\n            <h1 style={{color:\"white\"}}>Your Nominations</h1>\r\n          </div>\r\n          <main>\r\n          <section className=\"wrapper1\">\r\n              {\r\n                console.log(result,result.length)}\r\n              {  \r\n                result.length !== 0 ?\r\n                (\r\n                  result.map((resul) => (              \r\n                  <RenderCard key={resul.id} r={resul} />   \r\n                  ))\r\n                )\r\n                :(<p>\r\n                       You have not nominated any movie\r\n                 </p>)\r\n              }\r\n            </section>\r\n            {\r\n              (user.error ) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n                \r\n              </Alert>\r\n              </Snackbar>\r\n              : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n          </main>\r\n        </React.Fragment>\r\n        );\r\n}\r\n\r\nexport default DashboardPageComponent;","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js",["165","166","167","168","169","170","171","172","173","174"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\n\r\nimport {Hidden} from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport List from '@material-ui/core/List';\r\nimport './HeaderStyle.css'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport clsx from 'clsx';\r\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useSelector,useDispatch,useStore } from \"react-redux\";\r\nimport {logout} from '../../action/user_actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction HeaderComponent(){\r\n        const user = useSelector(state => state.user);\r\n        const User = useSelector(state => state.user.user);\r\n        const dispatch = useDispatch();\r\n        const Logout = () => {\r\n          dispatch(logout());\r\n        }\r\n\r\n        const useStyles = makeStyles((theme) => ({\r\n          list: {\r\n            width:300,\r\n            alignItems:'center',\r\n            \r\n          },\r\n      \r\n            root: {\r\n              flexGrow: 1,\r\n              display:'flex'\r\n              \r\n            },\r\n            menuButton: {\r\n              marginRight: theme.spacing(2),\r\n              \r\n              color:'white'\r\n            },\r\n            title: {\r\n                marginRight: theme.spacing(2),\r\n                fontWeight:'bold',\r\n                color:'white',\r\n            },\r\n            Button1:{\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            navText:{\r\n              fontSize:20,\r\n              marginLeft:5\r\n            }\r\n          }));\r\n          const [state, setState] = React.useState(\r\n            false\r\n          );\r\n        \r\n          const toggleDrawer = (open) => (event) => {\r\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n              return;\r\n            }\r\n        \r\n            setState(open);\r\n          };\r\n\r\n\r\n          function TemporaryDrawer() {\r\n            const classes = useStyles();\r\n            \r\n          \r\n            \r\n          \r\n            return (\r\n              <div>\r\n                  <React.Fragment >\r\n                    \r\n                    <SwipeableDrawer anchor=\"left\" open={state} onClose={toggleDrawer(false)}  onOpen={toggleDrawer(true)} >\r\n                    <div className=\"drawe\">\r\n                      <div style={{width:\"100%\",display:'flex'}}>\r\n                      <IconButton style={{position:'absolute',right:0}} onClick={toggleDrawer(false)}>\r\n                      <CancelRoundedIcon color=\"secondary\" />\r\n                      </IconButton>\r\n                      </div>\r\n                      {\r\n                      (user.isLoggedIn) ?\r\n                      \r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src={User.ProfilePic} />\r\n\t\t                <h2 className=\"title title-medium\">{User.Name}</h2>\r\n\t                  </div>\r\n                    :\r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src=\"https://icons.iconarchive.com/icons/custom-icon-design/flatastic-3/256/user-icon.png\" />\r\n\t\t                <h2 className=\"title title-medium\">Welcome Guest</h2>\r\n\t\t                \r\n\t                  </div>\r\n                    }\r\n                      <List className={classes.list}>\r\n                      \r\n                      <Link to=\"/\"> \r\n                      <ListItem button key=\"Home\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <HomeRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                      <ListItemText primary=\"HOME\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      <Link to=\"/leaderboard\"> \r\n                      <ListItem button key=\"leaderboard\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <Timeline color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"Leaderboard\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <Link to=\"/Search\"> \r\n                      <ListItem button key=\"Search\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon> <SearchRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"SEARCH\" />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <ListItem  key=\"Dark Mode\" >\r\n                      <ListItemIcon> <Brightness4Icon color=\"primary\"/> </ListItemIcon>\r\n                      {/* <ListItemText primary=\"DARK MODE\" /> */}\r\n                      <Switch />\r\n                      </ListItem>\r\n                      \r\n                      {\r\n                        (user.isLoggedIn) ?\r\n                        <React.Fragment>\r\n                          <Link to=\"/dashboard\"> \r\n                          <ListItem button key=\"Dashboard\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <DashboardRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"DASHBOARD\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          {\r\n                            user.user.IsAdmin ?\r\n                            <Link to=\"/admin\"> \r\n                            <ListItem button key=\"Admin Dashboard\" onClick={toggleDrawer(false)}>\r\n                            <ListItemIcon> <SupervisorAccountIcon color=\"primary\" /> </ListItemIcon>\r\n                            <ListItemText primary=\"ADMIN DASHBOARD\" />\r\n                            </ListItem>\r\n                            </Link>\r\n                            :\r\n                            <Link>\r\n                            </Link>\r\n                          }\r\n                          <ListItem button key=\"Logout\" onClick={ () => {toggleDrawer(false);Logout()}}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGOUT\" />\r\n                          </ListItem>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                          <Link to=\"/login\">\r\n                          <ListItem button key=\"Login\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGIN\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          \r\n                          <Link to=\"/signup\">\r\n                          <ListItem button key=\"Signup\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <PersonAddRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                          <ListItemText primary=\"SIGNUP\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                        </React.Fragment>\r\n                      }\r\n                      \r\n                    \r\n                      </List>\r\n                      </div>\r\n                    </SwipeableDrawer>\r\n                  </React.Fragment>\r\n                \r\n              </div>\r\n            );\r\n          }\r\n\r\n\r\n\r\n\r\n          \r\n           function ButtonAppBar() {\r\n            const classes = useStyles();\r\n          \r\n            return (\r\n              <div className={classes.root}>\r\n                <AppBar position=\"fixed\" style={{backgroundColor: \"rgb(0, 18, 34)\"}}>\r\n                  <Toolbar>\r\n                    \r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                     CINECUP\r\n                    </Typography>\r\n\r\n                    <Hidden smDown>\r\n                    <div style={{position:\"absolute\",right:0}}>\r\n                    <Link to=\"/\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                      <HomeRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Home</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    <Link to=\"/leaderboard\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                    <Timeline fontSize=\"small\"/>\r\n                      <span className={classes.navText}>LeaderBoard</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    <Link to=\"/search\">\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <SearchRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Search</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    {\r\n                      (user.isLoggedIn) ?\r\n                      <React.Fragment>\r\n                      <Link to=\"/dashboard\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <DashboardRoundedIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Dashboard</span>\r\n                        </IconButton>\r\n                      </Link>\r\n                      {\r\n                        (user.user.IsAdmin) ?\r\n                        <Link to=\"/admin\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <SupervisorAccountIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Admin Dashboard</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                        :\r\n                        <Link></Link>\r\n                      }\r\n                      \r\n\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={Logout} className={classes.Button1}> Logout</Button>\r\n                      </React.Fragment>\r\n                      :\r\n                      <React.Fragment>\r\n                        <Button variant=\"contained\" color=\"secondary\" href=\"/login\" className={classes.Button1}> Login</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" href=\"/signup\" className={classes.Button1}> Signup</Button>\r\n                      </React.Fragment>\r\n                    }\r\n                    </div>\r\n                    </Hidden>\r\n                    \r\n                  </Toolbar>\r\n                    \r\n                   \r\n                </AppBar>\r\n              </div>\r\n            );\r\n          }\r\n       \r\n        if(user.isLoading)\r\n        return(\r\n          <></>\r\n        )\r\n        return (\r\n          <>\r\n          <TemporaryDrawer />\r\n          <ButtonAppBar />\r\n          \r\n          </>\r\n        );\r\n    \r\n  }\r\n\r\nexport default HeaderComponent;\r\n\r\n","F:\\cinecup\\src\\reducer\\user_reducer.js",["175"],"import {\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_ERROR,\r\n    REGISTER_USER_SUCCESS,\r\n    LOGOUT_USER_REQUEST,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_ERROR,\r\n    NOMINATE_MOVIE_REQUEST,\r\n    NOMINATE_MOVIE_SUCCESS,\r\n    NOMINATE_MOVIE_ERROR,\r\n    RESET_SUCCESS,\r\n    RESET_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_REQUEST,\r\n    AUTH_USER_SUCCESS,\r\n    AUTH_USER_ERROR,\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE\r\n} from '../action/types';\r\n\r\n\r\n\r\n\r\n\r\nexport default function user (state = {}, action){\r\n    switch(action.type){\r\n        case REGISTER_USER_REQUEST:\r\n            state = {...state,isLoading:true,isLoggedIn:false,user:undefined,error:undefined,successmsg:undefined}\r\n            break;\r\n        case REGISTER_USER_SUCCESS:\r\n            state = {...state,isLoading:false,isLoggedIn:false,user:undefined,error:undefined,successmsg:action.payload}\r\n            break;\r\n        case REGISTER_USER_ERROR:\r\n            state = {...state,isLoading:false,isLoggedIn:false,user:undefined,error:action.payload,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_REQUEST:\r\n            state = { ...state,isLoading:true,isLoggedIn:false,user:undefined,error:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:true,user:action.payload,error:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_ERROR:\r\n            state = { ...state,isLoading:false,isLoggedIn:false,user:undefined,error:action.payload,successmsg:undefined}\r\n            break;\r\n        case LOGOUT_USER_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case LOGOUT_USER_SUCCESS:\r\n            state = {...state,isLoading:false,isLoggedIn:false,error:undefined,user:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGOUT_USER_ERROR:\r\n            state = {...state,isLoading:false,error:\"Some Error Occured Try Again !!\"}\r\n            break;\r\n        case NOMINATE_MOVIE_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case NOMINATE_MOVIE_ERROR:\r\n            state = {...state,isLoading:false,error:action.payload}\r\n            break;\r\n        case NOMINATE_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,error:undefined,successmsg:action.successmsg,user:{...state.user,Nominations:[...state.user.Nominations,action.payload]}}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_ERROR:\r\n            state = {...state,isLoading:false,error:action.payload}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,error:undefined,successmsg:action.successmsg,user:{...state.user,Nominations:[action.payload]}}\r\n            break;\r\n        case AUTH_USER_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:true,user:action.payload,error:undefined,successmsg:undefined}\r\n            break;\r\n        case AUTH_USER_ERROR:\r\n            state = {...state,isLoading:false,isLoggedIn:false,error:action.payload,user:undefined,successmsg:undefined}\r\n            break;\r\n        case RESET_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:false,user:action.payload,error:undefined}\r\n            break;\r\n        case RESET_ERROR:\r\n            state = {...state,error:\"Some Error Occured Try Again !!\"}\r\n             break;\r\n        case FETCH_MOVIES_DATA_REQUEST:\r\n            state = {...state,isLoading:true}\r\n            break;\r\n        case FETCH_MOVIES_DATA_SUCCESS:\r\n            state = {...state,isLoading:false,movies:action.payload}\r\n            break;       \r\n        case BLACKLIST_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,successmsg:\"Movie Blacklisted Successfully\"}\r\n            break;       \r\n        case BLACKLIST_MOVIE_FETCH:\r\n            state = {...state,isLoading:false,blacklist:action.payload}\r\n            break;  \r\n        case REMOVE_BLACKLISTED_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,successmsg:\"Movie Removed from Blacklist\"}\r\n            break;\r\n        case REMOVE_BLACKLISTED_MOVIE_FAILURE:\r\n            state = {...state,isLoading:false,successmsg:undefined,error:action.payload}\r\n            break;\r\n        default :\r\n            return { ...state}\r\n            break;\r\n    }\r\n    console.log(state);\r\n    return state;\r\n}","F:\\cinecup\\src\\action\\user_actions.js",["176","177","178","179","180","181","182","183","184","185","186"],"import firebase from 'firebase';\r\nimport {\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_ERROR,\r\n    LOGOUT_USER,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_ERROR,\r\n    NOMINATE_MOVIE_REQUEST,\r\n    NOMINATE_MOVIE_ERROR,\r\n    NOMINATE_MOVIE_SUCCESS,\r\n    RESET_ERROR,\r\n    RESET_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_REQUEST,\r\n    AUTH_USER_SUCCESS,\r\n    AUTH_USER_ERROR\r\n} from './types';\r\n\r\n//============================================== Register =================================================\r\n\r\nexport const register = (User) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:REGISTER_USER_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        firebase.auth()\r\n        .createUserWithEmailAndPassword(User.email, User.password)\r\n          .then(dataBeforeEmail => {\r\n            firebase.auth().onAuthStateChanged(user=> {\r\n              user.sendEmailVerification()\r\n              .then(dataAfterEmail => {\r\n                firebase.auth().onAuthStateChanged(async function(user) {\r\n                  if (user) {\r\n                    // Sign up successful\r\n                    let image = await uploadImage(User);\r\n                    console.log(User.profilepic)\r\n                    console.log(user);\r\n                    db.collection(\"users\").doc(User.email).set({\r\n                      Name: `${User.firstname} ${User.lastname}`,\r\n                      Email: User.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: image,\r\n                      Nominations:[]\r\n                    }).then(()=>{\r\n                      dispatch({\r\n                        type: REGISTER_USER_SUCCESS,\r\n                        payload:\r\n                          \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\r\n                      })\r\n                    }).catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:REGISTER_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                    })\r\n                  } else {\r\n                    // Signup failed\r\n                    dispatch({\r\n                      type: REGISTER_USER_ERROR,\r\n                      payload:\r\n                        \"Something went wrong, we couldn't create your account. Please try again.\"\r\n                    });\r\n                  }\r\n                });\r\n              })\r\n              // Error in sending mail\r\n              .catch(error => {\r\n                console.log(error);\r\n                dispatch({\r\n                  type:REGISTER_USER_ERROR,\r\n                  payload: \"Sorry We are unable to send Email Verification Link at this moment.\"\r\n                })\r\n              })\r\n            });\r\n          })\r\n          // User Not Created Means Email Already Registered\r\n          .catch(error => {\r\n              console.log(error);\r\n              dispatch({\r\n                type:REGISTER_USER_ERROR,\r\n                payload: \"This Email is already registered. Kindly Login\"\r\n              })\r\n          })\r\n}}\r\n\r\n\r\nasync function uploadImage(User){\r\n  if(User.profilepic !== null ){\r\n  try{\r\n    const storage=firebase.storage();\r\n    let snapshot = await storage.ref(`images/${User.profilepic.name}`).put(User.profilepic)\r\n    console.log('Uploaded', snapshot.totalBytes, 'bytes.');\r\n    let url = await snapshot.ref.getDownloadURL()\r\n    console.log('File available at', url);\r\n    return url;\r\n  }\r\n  catch(err){\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n  }\r\n  else{\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// =================================== Simple Login ===========================================\r\n\r\nexport const login = (User) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n    })\r\n\r\n    firebase.auth().signInWithEmailAndPassword(User.email, User.password)\r\n    .then((user) => {\r\n      if(firebase.auth().currentUser.emailVerified)\r\n      {\r\n        dispatch({\r\n          type:LOGIN_USER_SUCCESS,\r\n          payload:{Name:user.Name, Email:user.Email, IsAdmin:user.IsAdmin,ProfilePic:user.ProfilePic,Nominations:user.Nominations}\r\n        })\r\n      }  \r\n      else{\r\n        firebase.auth().signOut().then(function() {\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Kindly Verify Your Email\"\r\n          })\r\n        })\r\n      }    \r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      dispatch({\r\n        type:LOGIN_USER_ERROR,\r\n        payload: error.message\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ============================================== Google Login ======================================\r\n\r\nexport const loginwithgoogle = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:LOGIN_USER_REQUEST,\r\n        })\r\n        const db = firebase.firestore();\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            var docRef = db.collection(\"users\").doc(user.email);\r\n            docRef.get().then(function(doc) {\r\n                if (doc.exists) {\r\n                    console.log(\"Already Registered !\");\r\n                    dispatch({\r\n                      type:LOGIN_USER_SUCCESS,\r\n                      payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                    })\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                    console.log(\"Not Already Registered !!!\");\r\n                    db.collection(\"users\").doc(user.email).set({\r\n                            Name: user.displayName,\r\n                            Email: user.email,\r\n                            IsAdmin: false,\r\n                            ProfilePic: user.photoURL,\r\n                            Nominations:[]\r\n                        })\r\n                        .then(function() {\r\n                            console.log(\"Document successfully written!\");\r\n                            dispatch({\r\n                              type:LOGIN_USER_SUCCESS,\r\n                              payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            console.error(\"Error writing document: \", error);\r\n                            dispatch({\r\n                              type:LOGIN_USER_ERROR,\r\n                              payload: \"Some Error Occured Try Again !!\"\r\n                            })\r\n                        });\r\n                    console.log(user);\r\n                }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting documents: \", error);\r\n                dispatch({\r\n                  type:LOGIN_USER_ERROR,\r\n                  payload: \"Some Error Occured Try Again !!\"\r\n                })\r\n              });\r\n           \r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n            return{\r\n              errorCode : errorCode,\r\n              errorMessage:errorMessage\r\n            }\r\n          });\r\n    }\r\n}\r\n\r\n// ======================================= FaceBook Login =================================================\r\n\r\nexport const loginwithfacebook = () => {\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n      payload: \"\"\r\n    })\r\n    const db = firebase.firestore();\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase.auth().signInWithPopup(provider).then(function(result) {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      var docRef = db.collection(\"users\").doc(user.email);\r\n      docRef.get().then(function(doc) {\r\n          if (doc.exists) {\r\n              console.log(\"Already Registered !\");\r\n              dispatch({\r\n                type:LOGIN_USER_SUCCESS,\r\n                payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n              })\r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such document!\");\r\n              console.log(\"Not Already Registered !!!\");\r\n              db.collection(\"users\").doc(user.email).set({\r\n                      Name: user.displayName,\r\n                      Email: user.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: user.photoURL,\r\n                      Nominations:[]\r\n                  })\r\n                  .then(function() {\r\n                      console.log(\"Document successfully written!\");\r\n                      dispatch({\r\n                        type:LOGIN_USER_SUCCESS,\r\n                        payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                      })\r\n                  })\r\n                  .catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:LOGIN_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                  });\r\n              console.log(user);\r\n          }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting documents: \", error);\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Some Error Occured Try Again !!\"\r\n          })\r\n        });\r\n\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================================== Logout ================================================\r\n\r\nexport const logout = () =>{\r\n  return async (dispatch) =>{\r\n    firebase.auth().signOut().then(function() {\r\n      dispatch({\r\n        type:LOGOUT_USER_SUCCESS,\r\n      })\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: LOGOUT_USER_ERROR\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Auth ====================================================\r\nexport const auth = () => {\r\n  return async (dispatch) => {\r\n    console.log(\"Running Auth\")\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"users\").doc(user.email);\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists && user.emailVerified) {\r\n                dispatch({\r\n                  type:AUTH_USER_SUCCESS,\r\n                  payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                })\r\n            }\r\n            else {\r\n              dispatch({\r\n                type:AUTH_USER_ERROR,\r\n                payload:\"Kindly Verify Your Email\"\r\n              })\r\n            }\r\n          })\r\n        } else{\r\n          dispatch({\r\n            type:AUTH_USER_ERROR,\r\n            payload:\"\"\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n// ================================================= Nominate ================================================== \r\nexport const nominate = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type:NOMINATE_MOVIE_REQUEST\r\n    })\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.length < 5 && !doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayUnion(user.movieId)\r\n          },{ merge: true })\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(1)\r\n          }, { merge: true })\r\n\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_SUCCESS,\r\n            payload:user.movieId,\r\n            successmsg:\"You have successfully nominated the movie.\"\r\n          })\r\n          });\r\n        }\r\n        else if(doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Reset Password ================================================== \r\n\r\nexport const resetPassword = (User) => {\r\n  return async (dispatch) => {\r\n    firebase\r\n    .auth()\r\n    .sendPasswordResetEmail(User.email)\r\n    .then(() =>\r\n      dispatch({\r\n        type: RESET_SUCCESS,\r\n        payload:\r\n          \"Check your inbox. We've sent you a secured reset link by e-mail.\"\r\n      })\r\n      \r\n    )\r\n    .catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: RESET_ERROR,\r\n        payload: `Some Error Occured Try Again !! ${error}`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// =================================================Remove Nominate ================================================== \r\n\r\n\r\nexport const remove_nominate = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type:REMOVE_NOMINATE_MOVIE_REQUEST\r\n    })\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayRemove(user.movieId)\r\n          },{ merge: true })\r\n\r\n        if(moviesRef.Votes === 1){\r\n         batch.delete(moviesRef);\r\n        }\r\n        else {\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(-1)\r\n          }, { merge: true })\r\n        }\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n            payload:usersRef.Nominations,\r\n            successmsg:\"Movie has been removed from your Nominations\"\r\n          })\r\n          });\r\n        }\r\n        else if(!doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have not nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n","F:\\cinecup\\src\\key\\key.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js",["187","188"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport {Button} from '@material-ui/core'\r\nfunction Search ({ handleInput }) {\r\n\treturn (\r\n\t\t<section className=\"searchbox-wrap\">\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Search for a movie...\" \r\n\t\t\t\tclassName=\"searchbox\" \r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Search;","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js",["189"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nfunction Popup({ selected, closePopup }) {\r\n\treturn (\r\n\t\t<section className=\"popup\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t    <div className=\"con\">\r\n\t\t\t\t<h2>{ selected.Title } <span>({ selected.Year })</span></h2>\r\n\t\t\t\t<br />\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"plot\">\r\n\t\t\t\t\t<img src={selected.Poster} />\r\n\t\t\t\t\t<div className=\"pa\"><p className=\"rating\" ><span>IMDB Rating : </span>{selected.imdbRating} <br /><br/><span>Genre :</span>  {selected.Genre}<br></br><br></br><span>Actors : </span>{selected.Actors}<br></br><br></br>{selected.Plot}</p></div>\r\n\t\t\t       \r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"close\" onClick={closePopup}>Close</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Popup;","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js",[],"F:\\cinecup\\src\\action\\types.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js",["204","205"],"import React from 'react';\r\nimport './LeaderboardStyles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf:\"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0 ,\r\n    width: '60%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: '20%',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:\"white\"\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    color:\"white\",\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '70%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '50ch',\r\n      '&:focus': {\r\n        width: '60ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst LeaderboardPageComponent = () => {\r\n  const classes = useStyles();\r\n    const user = useSelector(state => state.user);\r\n    let result = user.movies ? user.movies : [] ;\r\n\r\n    function RenderCard ({r}) {     \r\n      \r\n          return(  \r\n            <div className=\"wraap\">\r\n            <Badge  anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }} badgeContent={<b style={{fontSize:\"20px\"}}># {r.rank}</b>} color=\"error\" overlap=\"circle\">\r\n            <Link to={`/movie/${r.id}`} className=\"cards cards--two\"  >\r\n              <img src={`https://image.tmdb.org/t/p/w500/${r.poster_path}`} alt=\"Cards Image\"/>\r\n              <span class=\"cards--two__rect\"></span>\r\n              <span class=\"cards--two__tri\"></span>\r\n              <p>{r.title}</p>\r\n              <ul className=\"cards__list\">\r\n                <li>{r.votes} Votes</li>\r\n              </ul>\r\n            </Link>\r\n            </Badge> \r\n            </div>\r\n          )\r\n        }\r\n    if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n    return (\r\n        <div className=\"wrapper2\">\r\n            <header>\r\n                <h1>LeaderBoard</h1>\r\n                <div >\r\n            <div >\r\n            \r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search','id':'sear'}}\r\n              onKeyUp={()=>{\r\n                  var all = document.getElementById(\"leaderboard_cards\").getElementsByTagName(\"div\");\r\n                \r\n                console.log(all)\r\n                for(var i=0;i<all.length;i++)\r\n                  {\r\n                    var txtValue = all[i].innerText;\r\n                    console.log(txtValue)\r\n                    if (txtValue.toLowerCase().includes(document.getElementById(\"sear\").value) ) {\r\n                      all[i].style.display = \"\";\r\n                    } else {\r\n                      all[i].style.display = \"none\";\r\n                    }\r\n                    \r\n                  } \r\n              }}\r\n              \r\n            />\r\n            </div>\r\n            </header>\r\n            \r\n            <div className=\"card__collection clear-fix\" id=\"leaderboard_cards\">\r\n            {  \r\n                result.length !== 0 ?\r\n                (\r\n                  result.map((resul) => (              \r\n                  <RenderCard key={resul.id} r={resul}  />   \r\n                  ))\r\n                )\r\n                :(\r\n                  <p style={{color:\"white\"}}> Nothing Here </p>\r\n                 )\r\n              }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaderboardPageComponent;","F:\\cinecup\\src\\action\\movie_actions.js",["206","207","208"],"import firebase from 'firebase';\r\nimport axios from 'axios';\r\nimport {TMDB_API_KEY} from '../key/key';\r\nimport {\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FAILURE,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n} from './types';\r\n\r\n// ==================================== Fetching Movies Data =======================================\r\nexport const fetchMoviesData = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('movies')\r\n        .orderBy(\"Votes\", \"desc\")\r\n        .onSnapshot(function(querySnapshot) {\r\n            dispatch({\r\n                type: FETCH_MOVIES_DATA_REQUEST\r\n            })\r\n            let arr = []\r\n            let i = 1;\r\n            let j = 1;\r\n            let prevVotes,currVotes;\r\n            querySnapshot.forEach(function(doc) {\r\n                currVotes = doc.data().Votes;\r\n                if(i===1)\r\n                    prevVotes = doc.data().Votes;\r\n                if(prevVotes!==currVotes)\r\n                {\r\n                    j = i;\r\n                    prevVotes = currVotes;\r\n                }\r\n                arr.push({id:doc.data().MovieId, votes:doc.data().Votes, rank:j})\r\n                i++;\r\n            });\r\n            console.log(arr.length)\r\n            xyz(arr)\r\n            .then((result)=>{\r\n                dispatch({\r\n                    type:FETCH_MOVIES_DATA_SUCCESS,\r\n                    payload:result\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nasync function xyz (arr){\r\n    let r = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let element = arr[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.id}?api_key=${TMDB_API_KEY}`)\r\n        r.push({...res.data, rank:element.rank, votes:element.votes}); \r\n            if(i === arr.length - 1)\r\n            {\r\n                console.log(\"BEEP Beep Beep\",r.length,\"BEEP Beep Beep\");\r\n                return r;\r\n            } \r\n      }\r\n}\r\n// ================================ Fetching Blacklisted Movies ==================================\r\n\r\nexport const fetchBlackListedMovies = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('blacklist')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                arr.push(doc.id)\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:BLACKLIST_MOVIE_FETCH,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================== Blacklisting Movie =========================================\r\n\r\nexport const blackListMovie = ({movieId,movieName,token}) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        // getting all users and removing blacklisted movie from their nominations\r\n        db.collection(\"users\").get()\r\n        .then(async function(querySnapshot) {\r\n            var batch = db.batch();\r\n            \r\n            let mailto = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n                var usersref = db.collection(\"users\").doc(doc.id);\r\n                    if(doc.data().Nominations.includes(movieId))\r\n                        mailto.push(doc.data().Email);\r\n                    batch.set(usersref,{\r\n                        Nominations: firebase.firestore.FieldValue.arrayRemove(movieId)\r\n                      },{ merge: true });\r\n            })\r\n\r\n            console.log(\"Tu Phodega Tu Phodega Tu Phodega\",mailto);\r\n            // adding movie to blacklist\r\n            let blacklistRef = db.collection('blacklist').doc(movieId.toString())\r\n            batch.set(blacklistRef, {\r\n                MovieId: movieId.toString(),\r\n            })\r\n    \r\n            // deleting movie and it's votes from movies\r\n            let moviesRef = db.collection('movies').doc(movieId.toString())\r\n            batch.delete(moviesRef)\r\n\r\n            \r\n\r\n            axios.post('https://cinecup-backend.herokuapp.com/send',{receivers:mailto,movieName:movieName},\r\n            {\r\n                headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              }\r\n            })\r\n            .then((res)=>{\r\n                console.log(res);\r\n            })\r\n\r\n            // Commit the batch\r\n            batch.commit()\r\n            .then(function () {\r\n                dispatch({\r\n                    type:BLACKLIST_MOVIE_SUCCESS,\r\n                })\r\n            });             \r\n        });\r\n    }\r\n}\r\n\r\n// ======================================= Removing Blacklisted Movie ===============================\r\nexport const removeBlacklistedMovie = ({movieId}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"blacklist\").doc(movieId.toString()).delete()\r\n        .then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_SUCCESS\r\n            })\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n                payload:error\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js",["209","210","211","212","213","214","215"],"import React,{useState,useEffect} from 'react';\r\nimport './AdminDashboardStyle.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {removeBlacklistedMovie} from '../../action/movie_actions';\r\nimport {Button} from '@material-ui/core'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport firebase from 'firebase';\r\nimport Rating from '@material-ui/lab/Rating';\r\nconst AdminDashboardComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user);\r\n    console.log(user);\r\n    const [result,setresult] = useState([]);  \r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user.error || user.successmsg){ \r\n            setOpen(true);\r\n        }\r\n    },[user,user.blacklist])\r\n\r\n\r\n    // ======================================= ui ================================\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const useSnackbarStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    //======================================Fetching data from internet ===========================\r\n    const getMovieDetails = () => {\r\n        let arr = [];\r\n        user.blacklist.forEach(element => {\r\n        axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n        .then((res) => {\r\n            let x=res.data\r\n            arr.push(x);  \r\n        })\r\n        });\r\n        setresult(arr);\r\n    }\r\n    //=========================================== Render Card =========================================\r\n\r\n    function RenderCard({r}){\r\n        const RemoveFromBlackList = (e) => {\r\n        e.preventDefault();\r\n        const dataToSubmit = {\r\n            movieId: r.id\r\n        }\r\n        dispatch(removeBlacklistedMovie(dataToSubmit));\r\n        let array = result;\r\n        let cardIndex = array.indexOf(r);\r\n        if(cardIndex !== -1)\r\n        {\r\n            array.splice(cardIndex, 1);\r\n            setresult(array);\r\n        }\r\n        }      \r\n\r\n        return(\r\n          <div className=\"card_s\">\r\n          <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n          \r\n       </div>\r\n       <div className=\"back_s\">\r\n         <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n         <div>\r\n         <h2>{r.title}</h2>\r\n         <h3>{r.release_date}</h3>\r\n         <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n   \r\n         </div>\r\n           \r\n       <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\"\r\n     }}>\r\n       <Link to={`/movie/${r.id}`}   >\r\n       <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n       </Link>\r\n       <Button className=\"button_s\"  style={{marginBottom:10}}\r\n       variant=\"outlined\" color=\"primary\" onClick={(e) => {RemoveFromBlackList(e)}} >\r\n         Remove</Button>\r\n      \r\n       </div>\r\n       \r\n         </div>\r\n       </div></div>\r\n        )\r\n    }\r\n    // ===================================================================================================\r\n    useEffect(() =>{\r\n        if(user.isLoggedIn){\r\n        getMovieDetails();\r\n        }\r\n    },[user.isLoggedIn])\r\n\r\n    // ======================== Fetching other users =================================\r\n    const [allusers,setallusers] = useState([]);    \r\n    const [alladmin,setalladmin] = useState([]);\r\n    useEffect(()=>{\r\n      const db = firebase.firestore();\r\n      let unsubscribe = db.collection('users')\r\n      .onSnapshot(function(querySnapshot){\r\n        let arr = [];\r\n        let arr1 = [];\r\n        querySnapshot.forEach((doc)=>{\r\n          if(doc.data().IsAdmin)\r\n            arr1.push(doc.data());\r\n          else\r\n            arr.push(doc.data())\r\n        })\r\n        setallusers(arr);\r\n        setalladmin(arr1);\r\n      })\r\n    },[])\r\n\r\n    function makeAdmin(emailid,e){\r\n      e.preventDefault()\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:true})\r\n    }\r\n\r\n    function removeFromAdmin(emailid,e){\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:false})\r\n    }\r\n\r\n\r\n  // =========================== Main Return from this component ==================================\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{marginTop:100}}>\r\n        <h1 style={{color:\"white\"}}>BlackListed Movies</h1>\r\n      </div>\r\n      <main>\r\n      <section className=\"wrapper1\">\r\n          {  \r\n            result.length !== 0 ?\r\n            (\r\n              result.map((resul) => (              \r\n              <RenderCard key={resul.id} r={resul} />   \r\n              ))\r\n            )\r\n            :(<p>\r\n                   There are no blacklisted movies\r\n             </p>)\r\n          }\r\n        </section>\r\n        {\r\n          (user.error ) ?\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {`${user.error}`}\r\n            \r\n          </Alert>\r\n          </Snackbar>\r\n          : user.successmsg ?\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            {`${user.successmsg}`}\r\n          </Alert>\r\n        </Snackbar>\r\n        :\r\n        <div></div>\r\n        }\r\n      {/* Admin */}\r\n      <div style={{marginTop:100}}>\r\n        <h1 style={{color:\"white\"}}>All Administrators</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            alladmin.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {alladmin.map((admin) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={admin.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" style={{color:\"black\"}}>{admin.Name}</h3>\r\n                          <h4 class=\"title\">{admin.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {removeFromAdmin(admin.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Dismiss From Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<p>\r\n                   There are no admin users\r\n             </p>)\r\n          }\r\n      </main>\r\n      {/* Users */}\r\n      </main>\r\n      <div style={{marginTop:100}}>\r\n        <h1 style={{color:\"white\"}}>All users</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            allusers.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {allusers.map((user) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={user.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" style={{color:\"black\"}}>{user.Name}</h3>\r\n                          <h4 class=\"title\">{user.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {makeAdmin(user.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Make Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<p>\r\n                   There are no non admin users\r\n             </p>)\r\n          }\r\n        </main>\r\n    </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default AdminDashboardComponent;",{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":23},{"ruleId":"220","severity":1,"message":"224","line":17,"column":8,"nodeType":"222","messageId":"223","endLine":17,"endColumn":24},{"ruleId":"220","severity":1,"message":"225","line":20,"column":25,"nodeType":"222","messageId":"223","endLine":20,"endColumn":33},{"ruleId":"226","severity":1,"message":"227","line":27,"column":3,"nodeType":"228","endLine":27,"endColumn":5,"suggestions":"229"},{"ruleId":"226","severity":1,"message":"230","line":26,"column":14,"nodeType":"228","endLine":26,"endColumn":54,"suggestions":"231"},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"233","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":19},{"ruleId":"220","severity":1,"message":"234","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":11},{"ruleId":"220","severity":1,"message":"235","line":24,"column":8,"nodeType":"222","messageId":"223","endLine":24,"endColumn":21},{"ruleId":"220","severity":1,"message":"236","line":77,"column":11,"nodeType":"222","messageId":"223","endLine":77,"endColumn":26},{"ruleId":"220","severity":1,"message":"237","line":132,"column":11,"nodeType":"222","messageId":"223","endLine":132,"endColumn":22},{"ruleId":"220","severity":1,"message":"234","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":11},{"ruleId":"220","severity":1,"message":"238","line":15,"column":9,"nodeType":"222","messageId":"223","endLine":15,"endColumn":20},{"ruleId":"220","severity":1,"message":"239","line":15,"column":22,"nodeType":"222","messageId":"223","endLine":15,"endColumn":30},{"ruleId":"220","severity":1,"message":"240","line":16,"column":10,"nodeType":"222","messageId":"223","endLine":16,"endColumn":16},{"ruleId":"220","severity":1,"message":"241","line":16,"column":18,"nodeType":"222","messageId":"223","endLine":16,"endColumn":24},{"ruleId":"220","severity":1,"message":"242","line":17,"column":10,"nodeType":"222","messageId":"223","endLine":17,"endColumn":25},{"ruleId":"220","severity":1,"message":"243","line":18,"column":8,"nodeType":"222","messageId":"223","endLine":18,"endColumn":16},{"ruleId":"220","severity":1,"message":"236","line":59,"column":11,"nodeType":"222","messageId":"223","endLine":59,"endColumn":26},{"ruleId":"220","severity":1,"message":"244","line":79,"column":12,"nodeType":"222","messageId":"223","endLine":79,"endColumn":23},{"ruleId":"220","severity":1,"message":"245","line":79,"column":25,"nodeType":"222","messageId":"223","endLine":79,"endColumn":39},{"ruleId":"220","severity":1,"message":"237","line":92,"column":11,"nodeType":"222","messageId":"223","endLine":92,"endColumn":22},{"ruleId":"226","severity":1,"message":"246","line":20,"column":7,"nodeType":"228","endLine":20,"endColumn":15,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":43,"column":3,"nodeType":"250","endLine":43,"endColumn":78},{"ruleId":"220","severity":1,"message":"251","line":41,"column":9,"nodeType":"222","messageId":"223","endLine":41,"endColumn":26},{"ruleId":"226","severity":1,"message":"252","line":79,"column":5,"nodeType":"228","endLine":79,"endColumn":18,"suggestions":"253"},{"ruleId":"220","severity":1,"message":"254","line":81,"column":9,"nodeType":"222","messageId":"223","endLine":81,"endColumn":18},{"ruleId":"220","severity":1,"message":"255","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":23},{"ruleId":"220","severity":1,"message":"251","line":39,"column":9,"nodeType":"222","messageId":"223","endLine":39,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":87,"column":65,"nodeType":"258","messageId":"259","endLine":87,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":87,"column":118,"nodeType":"258","messageId":"259","endLine":87,"endColumn":119},{"ruleId":"226","severity":1,"message":"260","line":123,"column":5,"nodeType":"228","endLine":123,"endColumn":22,"suggestions":"261"},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"262","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":15},{"ruleId":"220","severity":1,"message":"263","line":25,"column":8,"nodeType":"222","messageId":"223","endLine":25,"endColumn":12},{"ruleId":"220","severity":1,"message":"264","line":29,"column":8,"nodeType":"222","messageId":"223","endLine":29,"endColumn":13},{"ruleId":"220","severity":1,"message":"265","line":30,"column":8,"nodeType":"222","messageId":"223","endLine":30,"endColumn":13},{"ruleId":"220","severity":1,"message":"266","line":32,"column":34,"nodeType":"222","messageId":"223","endLine":32,"endColumn":42},{"ruleId":"220","severity":1,"message":"242","line":34,"column":10,"nodeType":"222","messageId":"223","endLine":34,"endColumn":25},{"ruleId":"220","severity":1,"message":"267","line":35,"column":10,"nodeType":"222","messageId":"223","endLine":35,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":109,"column":19,"nodeType":"250","endLine":109,"endColumn":68},{"ruleId":"248","severity":1,"message":"249","line":114,"column":19,"nodeType":"250","endLine":114,"endColumn":137},{"ruleId":"268","severity":1,"message":"269","line":112,"column":13,"nodeType":"270","messageId":"271","endLine":112,"endColumn":19},{"ruleId":"220","severity":1,"message":"272","line":9,"column":5,"nodeType":"222","messageId":"223","endLine":9,"endColumn":16},{"ruleId":"220","severity":1,"message":"273","line":143,"column":11,"nodeType":"222","messageId":"223","endLine":143,"endColumn":20},{"ruleId":"220","severity":1,"message":"274","line":144,"column":11,"nodeType":"222","messageId":"223","endLine":144,"endColumn":23},{"ruleId":"220","severity":1,"message":"275","line":165,"column":17,"nodeType":"222","messageId":"223","endLine":165,"endColumn":22},{"ruleId":"220","severity":1,"message":"276","line":216,"column":17,"nodeType":"222","messageId":"223","endLine":216,"endColumn":22},{"ruleId":"220","severity":1,"message":"277","line":218,"column":17,"nodeType":"222","messageId":"223","endLine":218,"endColumn":27},{"ruleId":"220","severity":1,"message":"275","line":240,"column":11,"nodeType":"222","messageId":"223","endLine":240,"endColumn":16},{"ruleId":"220","severity":1,"message":"273","line":288,"column":11,"nodeType":"222","messageId":"223","endLine":288,"endColumn":20},{"ruleId":"220","severity":1,"message":"274","line":289,"column":11,"nodeType":"222","messageId":"223","endLine":289,"endColumn":23},{"ruleId":"220","severity":1,"message":"276","line":291,"column":11,"nodeType":"222","messageId":"223","endLine":291,"endColumn":16},{"ruleId":"220","severity":1,"message":"277","line":293,"column":11,"nodeType":"222","messageId":"223","endLine":293,"endColumn":21},{"ruleId":"220","severity":1,"message":"255","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":23},{"ruleId":"220","severity":1,"message":"278","line":4,"column":9,"nodeType":"222","messageId":"223","endLine":4,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":13,"column":6,"nodeType":"250","endLine":13,"endColumn":35},{"ruleId":"220","severity":1,"message":"279","line":2,"column":9,"nodeType":"222","messageId":"223","endLine":2,"endColumn":21},{"ruleId":"220","severity":1,"message":"280","line":7,"column":17,"nodeType":"222","messageId":"223","endLine":7,"endColumn":23},{"ruleId":"220","severity":1,"message":"255","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":23},{"ruleId":"220","severity":1,"message":"281","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":12},{"ruleId":"220","severity":1,"message":"282","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":22},{"ruleId":"220","severity":1,"message":"283","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":19},{"ruleId":"220","severity":1,"message":"284","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":19},{"ruleId":"220","severity":1,"message":"285","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":17},{"ruleId":"220","severity":1,"message":"286","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":18},{"ruleId":"220","severity":1,"message":"287","line":19,"column":10,"nodeType":"222","messageId":"223","endLine":19,"endColumn":32},{"ruleId":"220","severity":1,"message":"288","line":46,"column":8,"nodeType":"222","messageId":"223","endLine":46,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":88,"column":64,"nodeType":"258","messageId":"259","endLine":88,"endColumn":65},{"ruleId":"256","severity":1,"message":"257","line":88,"column":122,"nodeType":"258","messageId":"259","endLine":88,"endColumn":123},{"ruleId":"289","severity":1,"message":"290","line":148,"column":1,"nodeType":"291","messageId":"292","endLine":163,"endColumn":14},{"ruleId":"220","severity":1,"message":"293","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":86,"column":15,"nodeType":"250","endLine":86,"endColumn":96},{"ruleId":"220","severity":1,"message":"296","line":8,"column":5,"nodeType":"222","messageId":"223","endLine":8,"endColumn":28},{"ruleId":"220","severity":1,"message":"297","line":21,"column":13,"nodeType":"222","messageId":"223","endLine":21,"endColumn":24},{"ruleId":"220","severity":1,"message":"297","line":76,"column":13,"nodeType":"222","messageId":"223","endLine":76,"endColumn":24},{"ruleId":"220","severity":1,"message":"251","line":34,"column":11,"nodeType":"222","messageId":"223","endLine":34,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":81,"column":67,"nodeType":"258","messageId":"259","endLine":81,"endColumn":68},{"ruleId":"256","severity":1,"message":"257","line":81,"column":120,"nodeType":"258","messageId":"259","endLine":81,"endColumn":121},{"ruleId":"226","severity":1,"message":"298","line":115,"column":7,"nodeType":"228","endLine":115,"endColumn":24,"suggestions":"299"},{"ruleId":"220","severity":1,"message":"297","line":122,"column":11,"nodeType":"222","messageId":"223","endLine":122,"endColumn":22},{"ruleId":"248","severity":1,"message":"249","line":206,"column":27,"nodeType":"250","endLine":206,"endColumn":95},{"ruleId":"248","severity":1,"message":"249","line":240,"column":27,"nodeType":"250","endLine":240,"endColumn":94},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'FooterComponent' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["302"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["303"],"'Component' is defined but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'ResetPassword' is defined but never used.","'Snackbarclasses' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'faFacebookF' is defined but never used.","'faGoogle' is defined but never used.","'faLock' is defined but never used.","'faUser' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'firebase' is defined but never used.","'imageAsFile' is assigned a value but never used.","'setImageAsFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["304"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSnackbarStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["305"],"'openPopup' is assigned a value but never used.","'LocalMoviesIcon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'getMovieNominations' and 'result'. Either include them or remove the dependency array.",["306"],"'Divider' is defined but never used.","'clsx' is defined but never used.","'Paper' is defined but never used.","'Slide' is defined but never used.","'useStore' is defined but never used.","'faMedal' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'LOGOUT_USER' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Button' is defined but never used.","'ACCESS_TOKEN' is defined but never used.","'Hidden' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'getAccessTokenSilently' is assigned a value but never used.","'classes' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'SearchIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'BLACKLIST_MOVIE_FAILURE' is defined but never used.","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMovieDetails'. Either include it or remove the dependency array.",["307"],"no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [dispatch]",{"range":"320","text":"321"},"Update the dependencies array to be: [dispatch, props.history, user, user.isLoggedIn]",{"range":"322","text":"323"},"Update the dependencies array to be: [apiurl, result]",{"range":"324","text":"325"},"Update the dependencies array to be: [queryString, search]",{"range":"326","text":"327"},"Update the dependencies array to be: [getMovieNominations, result, user.isLoggedIn]",{"range":"328","text":"329"},"Update the dependencies array to be: [getMovieDetails, user.isLoggedIn]",{"range":"330","text":"331"},[1579,1581],"[dispatch]",[1108,1148],"[dispatch, props.history, user, user.isLoggedIn]",[658,666],"[apiurl, result]",[2231,2244],"[queryString, search]",[3860,3877],"[getMovieNominations, result, user.isLoggedIn]",[3968,3985],"[getMovieDetails, user.isLoggedIn]"]