[{"F:\\cinecup\\src\\index.js":"1","F:\\cinecup\\src\\reportWebVitals.js":"2","F:\\cinecup\\src\\App.js":"3","F:\\cinecup\\src\\reducer\\index.js":"4","F:\\cinecup\\src\\fontawesome.js":"5","F:\\cinecup\\src\\action\\movie_actions.js":"6","F:\\cinecup\\src\\auth.js":"7","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js":"8","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js":"9","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js":"10","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js":"11","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js":"12","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js":"13","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js":"14","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js":"15","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js":"16","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js":"17","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js":"18","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js":"19","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js":"20","F:\\cinecup\\src\\reducer\\user_reducer.js":"21","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js":"22","F:\\cinecup\\src\\action\\user_actions.js":"23","F:\\cinecup\\src\\action\\types.js":"24","F:\\cinecup\\src\\key\\key.js":"25","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js":"26","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js":"27","F:\\cinecup\\src\\Components\\shareButton.js":"28","F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js":"29","F:\\cinecup\\src\\useDarkMode.js":"30","F:\\cinecup\\src\\theme.js":"31","F:\\cinecup\\src\\global.js":"32","F:\\cinecup\\src\\Components\\Toggle.js":"33"},{"size":1958,"mtime":1609428964994,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1607518623915,"results":"36","hashOfConfig":"35"},{"size":3542,"mtime":1609960923270,"results":"37","hashOfConfig":"35"},{"size":160,"mtime":1608579878367,"results":"38","hashOfConfig":"35"},{"size":297,"mtime":1607853473199,"results":"39","hashOfConfig":"35"},{"size":14423,"mtime":1609960544049,"results":"40","hashOfConfig":"35"},{"size":1261,"mtime":1609618569289,"results":"41","hashOfConfig":"35"},{"size":3622,"mtime":1609780187909,"results":"42","hashOfConfig":"35"},{"size":4895,"mtime":1609338171651,"results":"43","hashOfConfig":"35"},{"size":2366,"mtime":1607847146261,"results":"44","hashOfConfig":"35"},{"size":5728,"mtime":1609966736534,"results":"45","hashOfConfig":"35"},{"size":8197,"mtime":1609868613104,"results":"46","hashOfConfig":"35"},{"size":9170,"mtime":1609868613038,"results":"47","hashOfConfig":"35"},{"size":4584,"mtime":1609868613104,"results":"48","hashOfConfig":"35"},{"size":5030,"mtime":1609940218033,"results":"49","hashOfConfig":"35"},{"size":5856,"mtime":1609868612823,"results":"50","hashOfConfig":"35"},{"size":9767,"mtime":1609868613168,"results":"51","hashOfConfig":"35"},{"size":13346,"mtime":1609940217926,"results":"52","hashOfConfig":"35"},{"size":2954,"mtime":1609940217982,"results":"53","hashOfConfig":"35"},{"size":14053,"mtime":1609961698913,"results":"54","hashOfConfig":"35"},{"size":6052,"mtime":1609960601749,"results":"55","hashOfConfig":"35"},{"size":432,"mtime":1608038641665,"results":"56","hashOfConfig":"35"},{"size":17722,"mtime":1609940218037,"results":"57","hashOfConfig":"35"},{"size":2079,"mtime":1609960347613,"results":"58","hashOfConfig":"35"},{"size":838,"mtime":1609428650999,"results":"59","hashOfConfig":"35"},{"size":765,"mtime":1608037850795,"results":"60","hashOfConfig":"35"},{"size":575,"mtime":1609093566526,"results":"61","hashOfConfig":"35"},{"size":1222,"mtime":1609868613168,"results":"62","hashOfConfig":"35"},{"size":5307,"mtime":1609868613168,"results":"63","hashOfConfig":"35"},{"size":834,"mtime":1609940218050,"results":"64","hashOfConfig":"35"},{"size":705,"mtime":1609940218049,"results":"65","hashOfConfig":"35"},{"size":1132,"mtime":1609940218038,"results":"66","hashOfConfig":"35"},{"size":1406,"mtime":1609940218035,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"lakeq2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"70"},"F:\\cinecup\\src\\index.js",[],["155","156"],"F:\\cinecup\\src\\reportWebVitals.js",[],"F:\\cinecup\\src\\App.js",["157","158","159","160"],"import {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport './fontawesome';\r\nimport './App.css';\r\nimport DashBoardPageComponent from './Components/DashboardPageComponent/DashboardPageComponent';\r\nimport ErrorPageComponent from './Components/ErrorPageComponent/ErrorPageComponent';\r\n\r\nimport HeaderComponent from './Components/HeaderComponent/HeaderComponent';\r\nimport HomePageComponent from './Components/HomePageComponent/HomePageComponent';\r\nimport LoginPageComponent from './Components/LoginPageComponent/LoginPageComponent';\r\nimport SearchPageComponent from './Components/SearchPageComponent/SearchPageComponent';\r\nimport SignUpPageComponent from './Components/SignUpPageComponent/SignUpPageComponent';\r\nimport MoviePageComponent from './Components/MoviePageComponent/MoviePageComponent';\r\nimport LeaderboardPageComponent from './Components/LeaderboardPageComponent/LeaderboardPageComponent';\r\nimport AdminDashboardComponent from './Components/AdminDashboardComponent/AdminDashboardComponent';\r\nimport Auth from './auth';\r\nimport ResetPassword from './Components/LoginPageComponent/ResetPassword';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchBlackListedMovies, fetchHistory, fetchMoviesData,getAnnouncement,getVotingOnOff} from './action/movie_actions';\r\nimport React,{useEffect,useState} from 'react';\r\nimport HistoryComponent from './Components/HistoryComponent/HistoryComponent';\r\nimport HistoryDetailComponent from './Components/HistoryDetailComponent/HistoryDetailComponent';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport { useDarkMode } from './useDarkMode';\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\r\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  useEffect(()=>{\r\n    dispatch(fetchMoviesData());\r\n    dispatch(fetchBlackListedMovies());\r\n    dispatch(getVotingOnOff());\r\n    dispatch(fetchHistory());\r\n    dispatch(getAnnouncement());\r\n},[])\r\n\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n    <>    \r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n      <GlobalStyles />\r\n        <HeaderComponent></HeaderComponent>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(HomePageComponent,null)}></Route>\r\n          <Route exact path=\"/leaderboard\" component={Auth(LeaderboardPageComponent,null)}></Route>\r\n          <Route exact path=\"/login\" component={Auth(LoginPageComponent,false)}></Route>\r\n          <Route exact path=\"/resetpassword\" component={Auth(ResetPassword,false)}></Route>\r\n          <Route exact path=\"/signup\" component={Auth(SignUpPageComponent,false)}></Route>\r\n          <Route exact path=\"/dashboard\" component={Auth(DashBoardPageComponent,true)}></Route>\r\n          <Route exact path=\"/history\" component={Auth(HistoryComponent,null)}></Route>\r\n          <Route exact path=\"/history/:contest_id\" component={Auth(HistoryDetailComponent,null)}></Route>\r\n          <Route exact path=\"/admin\" component={Auth(AdminDashboardComponent,true,true)}></Route>\r\n          <Route exact path=\"/search\" component={Auth(SearchPageComponent,null)}></Route>\r\n          <Route exact path=\"/movie/:movie_id\" component={Auth(MoviePageComponent,null)}></Route>\r\n          <Route path=\"*\" component={Auth(ErrorPageComponent,null)}></Route>\r\n        </Switch>\r\n       \r\n      </div>\r\n    </BrowserRouter>\r\n    \r\n    \r\n    </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\cinecup\\src\\reducer\\index.js",[],"F:\\cinecup\\src\\fontawesome.js",[],"F:\\cinecup\\src\\action\\movie_actions.js",["161","162","163","164"],"import firebase from 'firebase';\r\nimport axios from 'axios';\r\nimport {TMDB_API_KEY} from '../key/key';\r\nimport {\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FAILURE,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n    FETCH_VOTING_SUCCESS,\r\n    START_VOTING_SUCCESS,\r\n    START_VOTING_FAILURE,\r\n    END_VOTING_SUCCESS,\r\n    END_VOTING_FAILURE,\r\n    FETCH_HISTORY_SUCCESS,\r\n    FETCH_ANNOUNCEMENT_SUCCESS,\r\n} from './types';\r\n\r\n// ==================================== Fetching Movies Data =======================================\r\nexport const fetchMoviesData = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('movies')\r\n        .orderBy(\"Votes\", \"desc\")\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            let i = 1;\r\n            let j = 1;\r\n            let prevVotes,currVotes;\r\n            querySnapshot.forEach(function(doc) {\r\n                currVotes = doc.data().Votes;\r\n                if(i===1)\r\n                    prevVotes = doc.data().Votes;\r\n                if(prevVotes!==currVotes)\r\n                {\r\n                    j = i;\r\n                    prevVotes = currVotes;\r\n                }\r\n                arr.push({id:doc.data().MovieId, votes:doc.data().Votes, rank:j})\r\n                i++;\r\n            });\r\n            console.log(arr.length)\r\n            xyz(arr)\r\n            .then((result)=>{\r\n                dispatch({\r\n                    type:FETCH_MOVIES_DATA_SUCCESS,\r\n                    payload:result\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nasync function xyz (arr){\r\n    let r = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let element = arr[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.id}?api_key=${TMDB_API_KEY}`)\r\n        r.push({...res.data, rank:element.rank, votes:element.votes}); \r\n            if(i === arr.length - 1)\r\n            {\r\n                console.log(\"BEEP Beep Beep\",r.length,\"BEEP Beep Beep\");\r\n                return r;\r\n            } \r\n      }\r\n}\r\n// ================================ Fetching History ===========================================\r\nexport const fetchHistory = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('history').orderBy(\"Start\",'desc')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().End){\r\n                    let sdate; \r\n                let sDay;\r\n                let sTime;\r\n                if(doc.data().Start){\r\n                   sdate = new Date(doc.data().Start.toMillis());\r\n                   sDay = `${sdate.getDate()} ${sdate.toLocaleString('default', { month: 'short' })},${sdate.getFullYear()}`;\r\n                   sTime = `${sdate.getHours()}:${sdate.getMinutes()}`;\r\n                }\r\n                let edate;\r\n                let eDay;\r\n                let eTime;\r\n                if(doc.data() && doc.data().End ){\r\n                    edate = new Date(doc.data().End.toMillis());\r\n                    eDay = `${edate.getDate()} ${edate.toLocaleString('default', { month: 'short' })},${edate.getFullYear()}`;\r\n                    eTime = `${edate.getHours()}:${edate.getMinutes()}`;\r\n                }\r\n                arr.push({...doc.data(),contestid:doc.id,sDay:sDay,sTime:sTime,eDay:eDay,eTime:eTime})\r\n                }\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:FETCH_HISTORY_SUCCESS,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================ Fetching Blacklisted Movies ==================================\r\n\r\nexport const fetchBlackListedMovies = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        let unsubscribe = db.collection('blacklist')\r\n        .onSnapshot(function(querySnapshot) {\r\n            let arr = []\r\n            querySnapshot.forEach(function(doc) {\r\n                arr.push(doc.id)\r\n            });\r\n            console.log(arr.length)\r\n            dispatch({\r\n                type:BLACKLIST_MOVIE_FETCH,\r\n                payload:arr\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// ================================== Blacklisting Movie =========================================\r\n\r\nexport const blackListMovie = ({movieId,movieName,token}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        // getting all users and removing blacklisted movie from their nominations\r\n        db.collection(\"users\").get()\r\n        .then(async function(querySnapshot) {\r\n            var batch = db.batch();\r\n            \r\n            let mailto = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n                var usersref = db.collection(\"users\").doc(doc.id);\r\n                    if(doc.data().Nominations.includes(movieId))\r\n                        mailto.push(doc.data().Email);\r\n                    batch.set(usersref,{\r\n                        Nominations: firebase.firestore.FieldValue.arrayRemove(movieId)\r\n                      },{ merge: true });\r\n            })\r\n\r\n            console.log(\"Tu Phodega Tu Phodega Tu Phodega\",mailto);\r\n            // adding movie to blacklist\r\n            let blacklistRef = db.collection('blacklist').doc(movieId.toString())\r\n            batch.set(blacklistRef, {\r\n                MovieId: movieId.toString(),\r\n            })\r\n    \r\n            // deleting movie and it's votes from movies\r\n            let moviesRef = db.collection('movies').doc(movieId.toString())\r\n            batch.delete(moviesRef)\r\n\r\n            \r\n\r\n            axios.post('https://cinecup-backend.herokuapp.com/send',{receivers:mailto,movieName:movieName},\r\n            {\r\n                headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              }\r\n            })\r\n            .then((res)=>{\r\n                console.log(res);\r\n            })\r\n\r\n            // Commit the batch\r\n            batch.commit()\r\n            .then(function () {\r\n                dispatch({\r\n                    type:BLACKLIST_MOVIE_SUCCESS,\r\n                })\r\n            });             \r\n        });\r\n    }\r\n}\r\n\r\n// ======================================= Removing Blacklisted Movie ===============================\r\nexport const removeBlacklistedMovie = ({movieId}) => {\r\n    return async (dispatch) => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"blacklist\").doc(movieId.toString()).delete()\r\n        .then(function() {\r\n            console.log(\"Document successfully deleted!\");\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_SUCCESS\r\n            })\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n            dispatch({\r\n                type:REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n                payload:error\r\n            })\r\n        });\r\n    }\r\n}\r\n// Get ---------------------------VotingOnOff---------------------------------------\r\nexport const getVotingOnOff = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_VOTING_SUCCESS,\r\n                    payload:doc.data().on\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== Start Voting =====================================\r\nexport const startVoting = ({Name}) =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"onoroff\");\r\n        docRef.update({\r\n            on: true\r\n        })\r\n        .then(function() {\r\n            db.collection(\"history\").add({\r\n                Name: Name,\r\n                Start:new Date(),\r\n                Ongoing:true,\r\n            })\r\n            .then(function(docRef) {\r\n                console.log(\"Document written with ID: \", docRef.id);\r\n                dispatch({\r\n                    type:START_VOTING_SUCCESS\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error adding document: \", error);\r\n                dispatch({\r\n                    type:START_VOTING_FAILURE\r\n                })\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error updating document: \", error);\r\n            dispatch({\r\n                type:START_VOTING_FAILURE\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n// ===================================== myfunction ======================================\r\nasync function myfunction({docs}){\r\n    let topThree = [];\r\n    console.log(docs.length);\r\n    for(let i=0;i<docs.length;i++)\r\n    {\r\n        let doc = docs[i];\r\n        topThree.push({movieId:doc.data().MovieId,votes:doc.data().Votes,rank:i+1});\r\n        if(i === docs.length-1)\r\n            return topThree;\r\n    }\r\n    return topThree;\r\n}\r\n\r\n// ===================================== End Voting =======================================\r\n\r\nexport const stopVoting = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            const db = firebase.firestore();\r\n            // =================== Getting the top 3 movies =======================\r\n            let movieRef = db.collection(\"movies\").orderBy(\"Votes\", \"desc\")\r\n            let querySnapshot = await movieRef.get()\r\n            // ================= Storing top three in movies array =================\r\n            let topThree = await myfunction(querySnapshot)\r\n            if(topThree.length)\r\n            {\r\n                var batch = db.batch();\r\n                db.collection('history').where(\"Ongoing\", \"==\", true)\r\n                .get()\r\n                .then(function(querySnapshot) {\r\n                    querySnapshot.forEach(function(doc) {\r\n                        let history = db.collection('history').doc(doc.id)\r\n                        batch.set(history, {\r\n                            Movies:topThree,\r\n                            Ongoing:false,\r\n                            End:new Date()\r\n                        },{merge: true})\r\n                    });\r\n                    // =========================== Set voting on to false =================================\r\n                    let onRef = db.collection('on').doc('onoroff')\r\n                    batch.set(onRef,{\r\n                        on:false\r\n                    })\r\n                    // =========================== Deleting Votes of all Movies ===========================\r\n                    db.collection(\"movies\").get()\r\n                    .then(function(querySnapshot) {\r\n                        querySnapshot.forEach(function(doc) {\r\n                            let x = db.collection(\"movies\").doc(doc.id);\r\n                            batch.delete(x);\r\n                        });\r\n                        // =========================== Removing all nominations =======================\r\n                        db.collection(\"users\").get()\r\n                        .then(function(querySnapshot) {\r\n                            querySnapshot.forEach(function(doc) {\r\n                                let x = db.collection(\"users\").doc(doc.id);\r\n                                batch.update(x,{Nominations:[]})\r\n                            });\r\n                            // Commit the batch\r\n                            batch.commit()\r\n                            .then(function () {\r\n                                dispatch({\r\n                                    type:END_VOTING_SUCCESS,\r\n                                })\r\n                            })\r\n                            .catch(function(error) {\r\n                                dispatch({\r\n                                    type:END_VOTING_FAILURE\r\n                                })\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            dispatch({\r\n                                type:END_VOTING_FAILURE\r\n                            })\r\n                        })\r\n                    })\r\n                    .catch(function(error) {\r\n                        dispatch({\r\n                            type:END_VOTING_FAILURE\r\n                        })\r\n                    });\r\n                })\r\n                .catch(function(error) {\r\n                    dispatch({\r\n                        type:END_VOTING_FAILURE\r\n                    })\r\n                });\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type:END_VOTING_FAILURE\r\n                })\r\n            }\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type:END_VOTING_FAILURE\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// ================================= fetch announcement ================================\r\n\r\nexport const getAnnouncement = () =>{\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: FETCH_MOVIES_DATA_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"on\").doc(\"announce\");\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                dispatch({\r\n                    type:FETCH_ANNOUNCEMENT_SUCCESS,\r\n                    payload:doc.data().list\r\n                })\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}","F:\\cinecup\\src\\auth.js",["165"],"import React, { useEffect } from 'react';\r\nimport { auth } from './action/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function Auth (ComposedClass, status, admin = false) {\r\n    function AuthenticationCheck(props) {\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        useEffect(() => {\r\n            dispatch(auth()).then(async response => {\r\n            console.log(\"------------\",user,\"----------------------\")\r\n            // response is true means user logged in\r\n            // logged in user can not see login and signup page\r\n            if (user.isLoggedIn && status === false) {\r\n                props.history.push('/')\r\n            }\r\n            // redirect to \r\n            if (user.isLoggedIn === false && status === true) {\r\n                props.history.push('/login')\r\n            }\r\n            // if user is not admin\r\n            else if(user.isLoggedIn === true && admin === true && user.user.IsAdmin === false){\r\n                props.history.push('/error');\r\n            }\r\n\r\n        })}, [dispatch,props.history,user.isLoggedIn])\r\n        return (\r\n            <ComposedClass {...props}/>\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js",["166","167","168"],"import React, { useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Search from './Search'\r\nimport Results from './Results'\r\nimport Popup from './Popup'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {useSelector} from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nfunction SearchPageComponent(){\r\n  const user = useSelector(state => state.user);\r\n  const [queryString, setqueryString] = useState(\"\");\r\n  const [results,setresults] = useState([]);\r\n  const [selected,setselected] = useState({});\r\n  const [isLoading,setisLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  var apiurl = `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${queryString}`;  \r\n  \r\nlet nominations;\r\nif(user.isLoggedIn)\r\n{\r\n  nominations=user.user.Nominations.length\r\n}\r\nelse{\r\n  nominations=10\r\n}\r\n\r\n  useEffect(() => {\r\n    if(user.error || nominations === 5 || user.successmsg){ \r\n        setOpen(true);\r\n    }\r\n  },[user,nominations])\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const search = () => {\r\n      console.log(queryString);\r\n      if(queryString)\r\n      {\r\n      axios(apiurl)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let results = data.results;\r\n        setresults(results);\r\n        console.log(results);\r\n        setisLoading(false);\r\n      })\r\n      }\r\n      else{\r\n        axios(`https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB_API_KEY}`)\r\n        .then(({ data }) => {\r\n        let results = data.results;\r\n        setresults(results);\r\n        setisLoading(false);\r\n      })\r\n    }\r\n  }\r\n      \r\n  const handleInput = (e) => {\r\n    setisLoading(true);\r\n    setqueryString(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    search();\r\n  },[queryString]);\r\n\r\n  const openPopup = id => {\r\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\r\n      let result = data;\r\n      console.log(result);\r\n      setselected(result);\r\n    });\r\n  }\r\n    \r\n  const closePopup = () => {\r\n    setselected({});\r\n  }\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Movie Search</h1>\r\n        </header>\r\n        <main>\r\n          <Search handleInput={handleInput} search={search} />\r\n          {\r\n            !isLoading ?\r\n            <React.Fragment>\r\n              <Results results={results}/>\r\n              {(typeof selected.Title != \"undefined\") ? <Popup selected={selected} closePopup={closePopup} /> : false}\r\n            </React.Fragment>\r\n            :\r\n            <div className=\"wrapper\">\r\n              <Skeleton variant=\"rect\" animation=\"wave\"  className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n              <Skeleton variant=\"rect\" animation=\"wave\" className=\"card_s\" />\r\n\r\n            </div>\r\n            \r\n          }\r\n          {\r\n              (user.error ) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n                \r\n              </Alert>\r\n              </Snackbar>\r\n              : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n             {\r\n              (nominations === 5) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n               \r\n                You have already nominated 5 movies to add another remove one first\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n        </main>\r\n        \r\n      </div>\r\n    );\r\n     \r\n}\r\n\r\nexport default SearchPageComponent;","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js",["169"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './ErrorPageStyle.css'\r\n\r\nfunction ErrorPageComponent(){\r\n    \r\n        return (\r\n            <div className=\"errorcomp\">\r\n                <section className=\"wrapper\">\r\n                    <div className=\"container\">\r\n                        <div id=\"scene\" className=\"scene\" data-hover-only=\"false\">\r\n                            <div className=\"circle\" data-depth=\"1.2\"></div>\r\n                            <div className=\"one\" data-depth=\"0.9\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"two\" data-depth=\"0.60\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"three\" data-depth=\"0.40\">\r\n                                <div className=\"content\">\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                    <span className=\"piece\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <p className=\"p404\" data-depth=\"0.50\">404</p>\r\n                            <p className=\"p404\" data-depth=\"0.10\">404</p>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <article>\r\n                                <p>Uh oh! Looks like you got lost. <br/>Go back to the homepage if you dare!</p>\r\n                                <button><Link to=\"/\">i dare!</Link></button>\r\n                            </article>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ErrorPageComponent;","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js",["170","171"],"F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js",["172","173","174","175"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux\r\nimport {loginwithfacebook, loginwithgoogle, login} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop:'80px',\r\n      height: '80vh',\r\n      backgroundColor: \"rgb(0, 18, 34)\",\r\n      \r\n      \r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://image.freepik.com/free-vector/login-concept-illustration_114360-739.jpg)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'contain',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nfunction LoginPageComponent(){\r\n    const classes = useStyles();\r\n    const Snackbarclasses = useSnackbarStyles();\r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email,setemail] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n\r\n    useEffect(() => {\r\n      if(user.error){ \r\n          setOpen(true);\r\n      }\r\n    },[user.error])\r\n\r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!emailError && !passwordError && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[passwordError, emailError, email, password])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Login = (e) => {\r\n      e.preventDefault();\r\n      dispatch(login({email:email,password:password}))\r\n    }\r\n    const loginWithGoogle = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithgoogle());\r\n    }\r\n    const loginWithFaceBook = (e) =>{\r\n      e.preventDefault();\r\n      dispatch(loginwithfacebook());\r\n    }\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n    \r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (    \r\n    <Grid container component=\"main\" className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} Validate>\r\n            <TextField\r\n              error = {emailError}\r\n              helperText = {emailError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e)=>{setemail(e.target.value);setaltemail(true)}}\r\n            />\r\n            <TextField\r\n              error = {passwordError}\r\n              helperText = {passwordError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"  \r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e)=>{setpassword(e.target.value);setaltpassword(true)}}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={Login}\r\n              disabled = {disabledSubmit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {\r\n              user.error ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n              </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Link href=\"/resetpassword\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n                    style={{marginTop:\"25px\",marginBottom:\"25px\"}}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<FontAwesomeIcon icon={faGoogle}/>}\r\n                    onClick={(e) => {loginWithGoogle(e)}} >\r\n                    Login with Google\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<FontAwesomeIcon icon={faFacebookF}/>}\r\n                    onClick={(e) => {loginWithFaceBook(e)}}>\r\n                    Login with Facebook\r\n                </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n    \r\n}\r\n\r\nexport default LoginPageComponent;","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js",["176","177","178","179","180","181"],"import React,{useState,useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './HistoryDetailStyle.css';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { faStar} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst Cards = () => { \r\n  console.log('started')\r\n  init()\r\n  function init()\r\n  {\r\n    if(document.querySelector(\".cards_carousal\"))\r\n    {\r\n      let cards = document.querySelector(\".cards_carousal\");\r\n      cards.addEventListener('click', clicked, false);\r\n      document.querySelectorAll(\".cards_carousal .card_co\")[1].click();\r\n    }\r\n  }\r\n\r\n \r\n  function clicked(e)\r\n  {\r\n    let card = e.target;\r\n    if(card.getAttribute(\"data-card\")){rearrange(card.getAttribute(\"data-card\"));}\r\n  }\r\n  \r\n  function rearrange(card)\r\n  {\r\n    let cards = document.querySelectorAll(\".cards_carousal .card_co\");\r\n    for(let n = 0; n < cards.length; n++)\r\n    {\r\n      cards[n].classList.remove(\"card--left\");\r\n      cards[n].classList.remove(\"card--center\");\r\n      cards[n].classList.remove(\"card--right\");\r\n    }\r\n    cards[card].classList.add(\"card--center\");\r\n    if(card == 0)\r\n    {\r\n      cards[2].classList.add(\"card--left\");\r\n      cards[1].classList.add(\"card--right\");\r\n    }\r\n    if(card == 1)\r\n    {\r\n      cards[0].classList.add(\"card--left\");\r\n      cards[2].classList.add(\"card--right\");\r\n    }\r\n    if(card == 2)\r\n    {\r\n      cards[1].classList.add(\"card--left\");\r\n      cards[0].classList.add(\"card--right\");\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      alignSelf:\"center\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      margin: 0 ,\r\n      width: '60%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: '20%',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color:\"white\"\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      color:\"white\",\r\n  \r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '70%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '50ch',\r\n        '&:focus': {\r\n          width: '60ch',\r\n        },\r\n      },\r\n    },\r\n    paper: {\r\n      // padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      height:200,\r\n      \r\n      display:\"flex\",\r\n      flexDirection:\"row\",\r\n    },\r\n  }));\r\n\r\n\r\n  function RenderCard ({r}) {     \r\n      let x=r.rank - 1\r\n    return(  \r\n      <>\r\n      <div className=\"card_co fill-blue\" data-card={x}>\r\n      <div className=\"card__icon\" >\r\n      <img src={`https://image.tmdb.org/t/p/w500/${r.poster_path}`} alt=\"Cards Image\" className=\"card--image\"/>\r\n      </div>\r\n      <div className=\"card__detail\">\r\n        <h1>\r\n          <span className=\"star\">\r\n          <FontAwesomeIcon icon={faStar} color=\"#FFD700\" size=\"2x\" >\r\n        \r\n        </FontAwesomeIcon>\r\n          </span>\r\n       \r\n        <span className=\"ranky\">\r\n        {r.rank}\r\n        </span>\r\n        \r\n        </h1>\r\n     \r\n        <h1>{r.title}</h1>\r\n        <h1>Votes : {r.votes}</h1>\r\n        </div>\r\n     </div>\r\n      \r\n     </>  \r\n    )\r\n  }\r\n\r\nconst HistoryDetailComponent = () => {\r\n    const user = useSelector(state => state.user);\r\n    const { contest_id } = useParams();\r\n    const [moviedetail,setmoviedetail] = useState([]);\r\n    const [contest,setcontest] = useState({});\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n      if(user.history)\r\n      {\r\n        for(let i=0;i< user.history.length; i++){\r\n          if(user.history[i].contestid === contest_id)\r\n          {\r\n            setcontest(user.history[i])\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },[user.history,contest_id])\r\n\r\n    useEffect(() => {\r\n        if(contest && contest.Movies)\r\n        fetchData().then((arr)=>{\r\n        setmoviedetail(arr);\r\n        })\r\n        \r\n    },[contest])\r\n    useEffect(()=>{\r\n      Cards()\r\n    })\r\n    async function fetchData(){\r\n      let arr = [];\r\n      for(let i=0;i<contest.Movies.length;i++){\r\n        let element = contest.Movies[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element.movieId}?api_key=${TMDB_API_KEY}`)\r\n            let x=res.data\r\n            arr.push({...x,rank:element.rank,votes:element.votes})\r\n            if(i===contest.Movies.length-1)\r\n              return arr;\r\n      }  \r\n    }\r\n\r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n    return (\r\n      <div className=\"wrapper3\">\r\n        \r\n          {  \r\n                moviedetail.length !== 0 ?\r\n                (\r\n                <div className=\"cards_carousal\">\r\n                  {\r\n                  moviedetail.slice(0,3).map((resul) => (              \r\n                  <RenderCard key={resul.id} r={resul}  />   \r\n                  ))\r\n                  }\r\n                </div>\r\n                \r\n                \r\n                )\r\n                :(\r\n                  <CircularProgress style={{marginTop:\"15vw\"}} color=\"secondary\" ></CircularProgress>\r\n                 )\r\n        }\r\n        \r\n         <div className=\"wrapper_history1\">\r\n                     \r\n                     <div className=\"list\">\r\n                       <div className=\"list__header\">\r\n                         <h1 style={{color:\"black\"}}>Leaderboard</h1>\r\n                        \r\n                         \r\n                       </div>\r\n                       <div className=\"list__body\">\r\n                         <table className=\"list__table\" id=\"list-table\">\r\n                         <tr className=\"header_row\">\r\n                         <th className=\"list__cell\">Rank</th>\r\n                       <th className=\"list__cell\">Movie</th>\r\n                       <th className=\"list__cell\">Genre</th>\r\n                       <th className=\"list__cell\">Votes</th>\r\n                       <th class=\"list__cell\">Explore</th>\r\n                     </tr>\r\n                         \r\n                        {  \r\n                                 moviedetail.length !== 0 ?  \r\n                                   (\r\n                                    moviedetail.map((resul) => (              \r\n                                       <tr className=\"list__row\" >\r\n                            \r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.rank}</span></td>\r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.title}</span></td>\r\n                            <td className=\"list__cell\">\r\n                              {\r\n                            resul.genres.slice(0,1).map(genre=>{\r\n                             return <span> {genre.name} </span>\r\n                           })\r\n                         }</td>\r\n                           \r\n                            <td className=\"list__cell\"><span className=\"list__value\">{resul.votes}</span></td>\r\n                            <td className=\"list__cell\"> \r\n                            <Link to={`/movie/${resul.id}`}   >\r\n                            <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span> \r\n                            </Link></td>\r\n                          </tr>\r\n                                     ))\r\n                                   )\r\n                                   :(\r\n                                     <p style={{color:\"white\"}}> Nothing Here </p>\r\n                                    )\r\n                                 }              \r\n                         \r\n                           \r\n                     \r\n                           \r\n                         </table>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n      \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HistoryDetailComponent;","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js",["182","183","184","185","186","187","188"],"import {React,useState,useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport {useParams} from 'react-router-dom';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from 'axios';\r\nimport './MoviePageStyle.css'\r\nimport ShareButton from '../shareButton'\r\nimport Anime, {anime} from 'react-anime'\r\nconst MoviePageComponent = () => {\r\n    const [result, setresult] = useState({});\r\n    const [trailerurl , settrailerurl] = useState(\"\");\r\n    const { movie_id } = useParams();\r\n    const [cast,setCast]=useState([]);\r\n    const [reviews,setReviews]=useState([]);\r\n\r\n    var creditsapi = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${TMDB_API_KEY}`\r\n    \r\n\r\n    useEffect(()=>{\r\n      axios(creditsapi)\r\n      .then(({data} ) => {\r\n        if(data && data.cast && data.cast.length )\r\n        {\r\n          console.log(cast)\r\n          setCast(data.cast);\r\n        }\r\n      })\r\n      \r\n    },[])\r\n\r\n    var reviewsapi = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${TMDB_API_KEY}`\r\n    useEffect(()=>{\r\n      axios(reviewsapi)\r\n      .then(({data} ) => {\r\n        if(data && data.results && data.results.length )\r\n        {\r\n          \r\n          setReviews(data.results);\r\n          console.log(reviews)\r\n        }\r\n      })\r\n      \r\n    },[])\r\n\r\n\r\n\r\n    var apiurl = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${TMDB_API_KEY}`;\r\n    useEffect(() =>{\r\n      axios(apiurl)\r\n      .then((res) => {\r\n          console.log(result);\r\n          setresult(res.data);\r\n      })\r\n    },[apiurl])\r\n    var trailerapi = `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${TMDB_API_KEY}`\r\n    useEffect(()=>{\r\n      axios(trailerapi)\r\n      .then(({data} ) => {\r\n        if(data && data.results && data.results.length && data.results[0].key)\r\n        {\r\n          console.log(data.results[0].key);\r\n          settrailerurl(data.results[0].key);\r\n        }\r\n      })\r\n    },[trailerapi])\r\n      const opts = {\r\n        \r\n        playerVars: {\r\n          \r\n          autoplay: 0\r\n        },\r\n      };\r\n    return ( \r\n        <div>\r\n          \r\n           <div className=\"main1\">\r\n             \r\n          \r\n\t<div className=\"image\">\r\n\t\t<img src={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\r\n\t\t<div className=\"overlay\">\r\n    <Anime easing=\"easeOutElastic\"\r\n         duration={1000}\r\n         direction=\"alternate\"\r\n         loop={true}\r\n         delay={(el, index) => index * 240}\r\n         translateX={[-50,20]}\r\n         scale={[.75, .9]}\r\n         >\r\n\t\t\t<h1>{result.title}</h1>\r\n\t\t\t<h4>{result.runtime} min | {result.release_date}</h4>\r\n      </Anime>\r\n      {/* <h4>{result.genres[0].name}</h4> */}\r\n      \r\n      <div  className=\"share_but_m\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.backdrop_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div className=\"afterImage\">\r\n\t\t<div className=\"left1\">\r\n\t\t\t<h3>Description</h3>\r\n\t\t\t<p>{result.overview}\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div className=\"right1\">\r\n    {\r\n              trailerurl ? \r\n              <YouTube videoId={trailerurl} className=\"trail\" opts={opts}  />\r\n              :\r\n              (\r\n              <div>\r\n              </div>\r\n              )  \r\n            }\r\n     \r\n\t\t</div>\r\n    <div className=\"cast_wrapper\">\r\n    <h1 className=\"reviews_header\">\r\n      CAST\r\n      </h1>\r\n      <div className=\"cast_data\">\r\n      {\r\n        \r\n        cast.slice(0,5).map((x)=>{\r\n          return <div className=\"cast_1\">\r\n            <img src={`https://image.tmdb.org/t/p/original/${x.profile_path}`}  className=\"cast_image\"/>\r\n            <span>{x.name}</span>\r\n            </div>\r\n        })\r\n        \r\n      }\r\n\r\n      </div>\r\n    \r\n    </div>\r\n    <div className=\"reviews_wrapper\">\r\n      <h1 className=\"reviews_header\">\r\n        REVIEWS\r\n      </h1>\r\n    <div class=\"container\">\r\n\r\n<div class=\"reviews\">\r\n   {\r\n     (reviews.length!=0)?\r\n      (\r\n      reviews.slice(0,5).map((x)=>{\r\n        return <div class=\"column is-4 testimonial-wrapper\">\r\n      <div class=\"testimonial\">\r\n      <p class=\"quote\"> {x.content.slice(0,100)}</p>\r\n      <p class=\"attribution\">- {x.author}</p>\r\n    </div>\r\n  </div>\r\n      })\r\n      ):\r\n      <h2 className=\"text_re\">No reviews found</h2>\r\n    }\r\n    </div>\r\n    \r\n\t\t\r\n\t\r\n\r\n\t</div>\r\n</div>\r\n\t</div>\r\n\t</div>\r\n </div>\r\n    );\r\n};\r\n\r\nexport default MoviePageComponent;","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js",["189"],"import React from 'react';\r\nimport './LeaderboardStyles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ShareButton from '../shareButton'\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf:\"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0 ,\r\n    width: '100%',\r\n    \r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color:\"white\"\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: fade(theme.palette.common.black, 0.45),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.55),\r\n    },\r\n    width:\"100%\",\r\n  },\r\n  inputInput: {\r\n    \r\n    color:\"white\",\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    \r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height:200,\r\n    \r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n  },\r\n}));\r\nconst LeaderboardPageComponent = () => {\r\n  const classes = useStyles();\r\n    const user = useSelector(state => state.user);\r\n    let result = user.movies ? user.movies : [] ;\r\n\r\n   \r\n    if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n    return (\r\n        <div className=\"wrapper2\">\r\n                      <div className=\"wrapper_history\">\r\n                     \r\n  <div className=\"list\">\r\n    <div className=\"list__header\">\r\n      <h1 >Leaderboard</h1>\r\n      <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search','id':'sear'}}\r\n              onKeyUp={()=>{\r\n                  var all = document.getElementById(\"list-table\").getElementsByClassName(\"list__row\");\r\n                \r\n                console.log(all)\r\n                for(var i=0;i<all.length;i++)\r\n                  {\r\n                    var txtValue = all[i].innerText;\r\n                    console.log(txtValue)\r\n                    if (txtValue.toLowerCase().includes(document.getElementById(\"sear\").value) ) {\r\n                      all[i].style.display = \"\";\r\n                    } else {\r\n                      all[i].style.display = \"none\";\r\n                    }\r\n                    \r\n                  } \r\n              }}\r\n              \r\n            />\r\n      \r\n    </div>\r\n    <div className=\"list__body\">\r\n      <table className=\"list__table\" id=\"list-table\">\r\n      <tr className=\"header_row\">\r\n      <th className=\"list__cell\">Rank</th>\r\n    <th className=\"list__cell\">Movie</th>\r\n    <th className=\"list__cell\">Genre</th>\r\n    <th className=\"list__cell\">Votes</th>\r\n    <th class=\"list__cell\">Explore</th>\r\n  </tr>\r\n      \r\n     {  \r\n                result.length !== 0 ?\r\n                (\r\n                  result.map((resul) => (              \r\n                    <tr className=\"list__row\" >\r\n         \r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.rank}</span></td>\r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.title}</span></td>\r\n         <td className=\"list__cell\">\r\n           {\r\n         resul.genres.slice(0,1).map(genre=>{\r\n          return <span> {genre.name} </span>\r\n        })\r\n      }</td>\r\n        \r\n         <td className=\"list__cell\"><span className=\"list__value\">{resul.votes}</span></td>\r\n         <td className=\"list__cell\"> \r\n         <Link to={`/movie/${resul.id}`}   >\r\n         <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span> \r\n         </Link></td>\r\n       </tr>\r\n                  ))\r\n                )\r\n                :(\r\n                  <p > Nothing Here </p>\r\n                 )\r\n              }              \r\n      \r\n        \r\n  \r\n        \r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaderboardPageComponent;","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js",["190","191","192","193"],"import React,{useState,useEffect} from 'react';\r\nimport './DashboardStyle.css'\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {remove_nominate} from '../../action/user_actions';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {Button} from '@material-ui/core'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ShareButton from '../shareButton'\r\nfunction DashboardPageComponent(){\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n  const [result,setresult] = useState([]);  \r\n  const [open, setOpen] = useState(false);\r\n  let nominations;\r\n  if(user.isLoggedIn)\r\n  {\r\n    nominations=user.user.Nominations.length\r\n  }\r\n  else{\r\n    nominations=10\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(user.error || nominations === 5 || user.successmsg){ \r\n        setOpen(true);\r\n    }\r\n  },[user,nominations])\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  //======================================Fetching data from internet ===========================\r\n  async function fetchData(){\r\n    let arr = [];\r\n    for(let i=0;i<user.user.Nominations.length;i++){\r\n      let element = user.user.Nominations[i];\r\n      let res = await axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n      let x=res.data\r\n      arr.push(x)\r\n      if(i===user.user.Nominations.length-1)\r\n        return arr;\r\n    }  \r\n  }\r\n  //=========================================== Render Card =========================================\r\n\r\n  function RenderCard({r}){\r\n    const Remove_Nominate = (e) => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        Email: user.user.Email,\r\n        movieId: r.id\r\n      }\r\n      console.log(dataToSubmit);\r\n      dispatch(remove_nominate(dataToSubmit));\r\n      let array = result;\r\n      let cardIndex = array.indexOf(r);\r\n      if(cardIndex !== -1)\r\n      {\r\n        array.splice(cardIndex, 1);\r\n        setresult(array);\r\n      }\r\n    }      \r\n\r\n      return(\r\n        <div className=\"card_s\">\r\n        <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n        \r\n     </div>\r\n     <div className=\"back_s\">\r\n       <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n       <div>\r\n       <h2>{r.title}</h2>\r\n       <h3>{r.release_date}</h3>\r\n       <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n \r\n       </div>\r\n         \r\n     <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n   justifyContent: \"center\",\r\n   alignItems: \"center\"\r\n   }}>\r\n     <Link to={`/movie/${r.id}`}   >\r\n     <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n     </Link>\r\n     <Button className=\"button_s\"  style={{marginBottom:10}}\r\n     variant=\"outlined\" color=\"primary\" onClick={(e) => {Remove_Nominate(e)}} >\r\n       Remove</Button>\r\n       <div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n    \r\n     </div>\r\n     \r\n       </div>\r\n     </div></div>\r\n      )\r\n    }\r\n    // ===================================================================================================\r\n  useEffect(() =>{\r\n    if(user.isLoggedIn){\r\n       if(user.user && user.user.Nominations)\r\n       fetchData()\r\n       .then((arr)=>{\r\n        setresult(arr);\r\n       })\r\n      console.log(\"Render Card Chala\")\r\n      console.log(result);\r\n     }\r\n  },[user.isLoggedIn])\r\n  // Main Return from this component\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n        return (\r\n        <React.Fragment>\r\n          <div style={{marginTop:100}}>\r\n            <h1 >Your Nominations</h1>\r\n          </div>\r\n          <main>\r\n          <section className=\"wrapper1\">\r\n              {  \r\n                result && result.length !== 0 ?\r\n                (\r\n                  result.map((resul) => (              \r\n                  <RenderCard key={resul.id} r={resul} />   \r\n                  ))\r\n                )\r\n                :(<p>\r\n                       You have not nominated any movie\r\n                 </p>)\r\n              }\r\n            </section>\r\n            {\r\n              (user.error ) ?\r\n              <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n                \r\n              </Alert>\r\n              </Snackbar>\r\n              : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n            }\r\n          </main>\r\n        </React.Fragment>\r\n        );\r\n}\r\n\r\nexport default DashboardPageComponent;","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js",["194","195"],"import React,{useState,useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\n// redux\r\nimport {register} from '../../action/user_actions';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop:'80px',\r\n    height: '80vh',\r\n    backgroundColor: \"rgb(0, 18, 34)\",\r\n    \r\n    \r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://image.freepik.com/free-vector/account-concept-illustration_114360-399.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding:theme.spacing(1)\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '80%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  const useSnackbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\nfunction SignUpPageComponent(){\r\n    const classes = useStyles();\r\n\r\n    \r\n    \r\n    const user = useSelector(state => state.user);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [firstname,setfirstname] = useState(\"\");\r\n    const [lastname,setlastname] = useState(\"\");\r\n    const [email,setemail] = useState(\"\");\r\n    const [profilepic,setprofilepic]=useState(null);\r\n    const [password,setpassword] = useState(\"\");\r\n    const [firstnameError,setfirstnameError] = useState(\"\");\r\n    const [lastnameError,setlastnameError] = useState(\"\");\r\n    const [emailError,setemailError] = useState(\"\");\r\n    const [passwordError,setpasswordError] = useState(\"\");\r\n    const [altfirstname,setaltfirstname] = useState(false);\r\n    const [altlastname,setaltlastname] = useState(false);\r\n    const [altemail,setaltemail] = useState(false);\r\n    const [altpassword,setaltpassword] = useState(false);\r\n    const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n  \r\n    \r\n    function Alert(props) {\r\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    useEffect(() => {\r\n      if(user.error || user.successmsg){ \r\n          setOpen(true);\r\n      }\r\n    },[user])\r\n\r\n\r\n    const handleClick = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if(altfirstname && firstname.length<3)\r\n      setfirstnameError(\"Firstname must be more than 2 characters\")\r\n      else\r\n      setfirstnameError(\"\")\r\n    },[altfirstname, firstname])\r\n\r\n    useEffect(() => {\r\n      if(altlastname && lastname.length<3)\r\n      setlastnameError(\"Lastname must be more than 2 characters\")\r\n      else\r\n      setlastnameError(\"\")\r\n    },[altlastname, lastname])\r\n    \r\n    useEffect(() => {\r\n      if (altemail && !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)))\r\n      setemailError(\"Invalid Email Address\")\r\n      else\r\n      setemailError(\"\")\r\n    },[altemail, email])\r\n\r\n    useEffect(() => {\r\n      if(altpassword && password.length<6)\r\n      setpasswordError(\"Password must have more than 5 characters\")\r\n      else\r\n      setpasswordError(\"\")\r\n    },[altpassword, password])\r\n\r\n    useEffect(() => {\r\n      if(!firstnameError && !lastnameError && !emailError && !passwordError && firstname && lastname && email && password)\r\n        setdisabledSubmit(false);\r\n      else\r\n        setdisabledSubmit(true);\r\n    },[firstnameError, lastnameError, passwordError, emailError, firstname, lastname, email, password])\r\n    \r\n    const handleChange = (e) => {\r\n      \r\n      if (e.target.files[0]) {\r\n        \r\n        setprofilepic(e.target.files[0]);\r\n        \r\n      }\r\n    }\r\n    \r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const signUp = (e) => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        firstname,lastname,email,password,profilepic\r\n      }\r\n      console.log(dataToSubmit)\r\n      dispatch(register(dataToSubmit));\r\n    }\r\n    \r\n\r\n    \r\n\r\n    if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n        return (\r\n          <Grid container component=\"main\" className={classes.root}>\r\n   \r\n     <Grid item xs={false} sm={4} md={6} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} Validate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {firstnameError}\r\n                helperText = {firstnameError}\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                value={firstname}\r\n                onChange={(e) => {setfirstname(e.target.value);setaltfirstname(true);}}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error = {lastnameError}\r\n                helperText = {lastnameError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastname}\r\n                onChange={(e)=>{setlastname(e.target.value);setaltlastname(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {emailError}\r\n                helperText = {emailError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e)=>{setemail(e.target.value);setaltemail(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error = {passwordError}\r\n                helperText = {passwordError}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e)=>{setpassword(e.target.value);setaltpassword(true);}}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <input\r\n          type=\"file\"\r\n          \r\n          onChange={(e)=>{handleChange(e)}}\r\n        />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUp}\r\n            disabled = {disabledSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {\r\n            user.error ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                {`${user.error}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : user.successmsg ?\r\n            <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                {`${user.successmsg}`}\r\n              </Alert>\r\n            </Snackbar>\r\n            : <div></div>\r\n          }\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item xs={12}>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n      </Grid>\r\n    </Grid>\r\n        );\r\n    \r\n}\r\n\r\nexport default SignUpPageComponent;","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js",["196","197","198","199","200","201","202"],"import React,{useState,useEffect} from 'react';\r\nimport './AdminDashboardStyle.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {TMDB_API_KEY} from '../../key/key';\r\nimport axios from  'axios';\r\nimport {removeBlacklistedMovie, startVoting, stopVoting} from '../../action/movie_actions';\r\nimport {Button} from '@material-ui/core'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport firebase from 'firebase';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShareButton from '../shareButton'\r\nimport swal from 'sweetalert';\r\nconst AdminDashboardComponent = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user);\r\n    console.log(user);\r\n    const [result,setresult] = useState([]);  \r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user.error || user.successmsg){ \r\n            setOpen(true);\r\n        }\r\n    },[user,user.blacklist])\r\n\r\n\r\n    // ======================================= ui ================================\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    const useSnackbarStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    //======================================Fetching data from internet ===========================\r\n\r\n    async function fetchData(){\r\n      let arr = [];\r\n      for(let i=0;i<user.blacklist.length;i++){\r\n        let element = user.blacklist[i];\r\n        let res = await axios(`https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`)\r\n        let x=res.data\r\n        arr.push(x)\r\n        if(i===user.blacklist.length-1)\r\n          return arr;\r\n      }  \r\n    }\r\n    //=========================================== Render Card =========================================\r\n\r\n    function RenderCard({r}){\r\n        const RemoveFromBlackList = (e) => {\r\n        e.preventDefault();\r\n        const dataToSubmit = {\r\n            movieId: r.id\r\n        }\r\n        dispatch(removeBlacklistedMovie(dataToSubmit));\r\n        let array = result;\r\n        let cardIndex = array.indexOf(r);\r\n        if(cardIndex !== -1)\r\n        {\r\n            array.splice(cardIndex, 1);\r\n            setresult(array);\r\n        }\r\n        }      \r\n\r\n        return(\r\n          <div className=\"card_s\">\r\n          <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${r.poster_path}`)+\")\"}}>\r\n          \r\n       </div>\r\n       <div className=\"back_s\">\r\n         <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n         <div>\r\n         <h2>{r.title}</h2>\r\n         <h3>{r.release_date}</h3>\r\n         <Rating precision=\"0.5\" name=\"read-only\" value={(r.vote_average)/2} readOnly />\r\n   \r\n         </div>\r\n           \r\n       <div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n     justifyContent: \"center\",\r\n     alignItems: \"center\"\r\n     }}>\r\n       <Link to={`/movie/${r.id}`}   >\r\n       <Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n       </Link>\r\n       <Button className=\"button_s\"  style={{marginBottom:10}}\r\n       variant=\"outlined\" color=\"primary\" onClick={(e) => {RemoveFromBlackList(e)}} >\r\n         Remove</Button>\r\n         <div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n      \r\n       </div>\r\n       \r\n         </div>\r\n       </div></div>\r\n        )\r\n    }\r\n    // ===================================================================================================\r\n    useEffect(() =>{\r\n        if(user.isLoggedIn && user.blacklist){\r\n          console.log(\"Chala\")\r\n          fetchData()\r\n          .then((arr)=>{\r\n            console.log(\"Ohh \",arr);\r\n            setresult(arr);\r\n          })\r\n        }\r\n    },[user.isLoggedIn])\r\n\r\n    // ======================== Fetching other users =================================\r\n    const [allusers,setallusers] = useState([]);    \r\n    const [alladmin,setalladmin] = useState([]);\r\n    useEffect(()=>{\r\n      const db = firebase.firestore();\r\n      let unsubscribe = db.collection('users')\r\n      .onSnapshot(function(querySnapshot){\r\n        let arr = [];\r\n        let arr1 = [];\r\n        querySnapshot.forEach((doc)=>{\r\n          if(doc.data().IsAdmin)\r\n            arr1.push(doc.data());\r\n          else\r\n            arr.push(doc.data())\r\n        })\r\n        setallusers(arr);\r\n        setalladmin(arr1);\r\n      })\r\n    },[])\r\n\r\n    function makeAdminAlert(name,emailid,e){\r\n      e.preventDefault();\r\n      swal({\r\n        title: 'Are you sure ?',\r\n        text: `${name} (${emailid}) will become an admin and, he/she will have the rights to remove you from admin.`,\r\n        icon:\"warning\",\r\n        dangerMode: true,\r\n        buttons: true,\r\n      }).then((isConfirm) => {\r\n        if (isConfirm) {\r\n          makeAdmin(name,emailid,e)\r\n        }\r\n    })\r\n  }\r\n\r\n    function makeAdmin(name,emailid,e){\r\n      e.preventDefault()\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:true})\r\n    }\r\n\r\n    function removeFromAdmin(emailid,e){\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"users\").doc(emailid)\r\n      .update({IsAdmin:false})\r\n    }\r\n\r\n  // ========================== Start and Stop Voting =========================\r\n  const [name,setname] = useState(\"\");\r\n  const [nameError,setnameError] = useState(\"\");\r\n  const [altname,setaltname] = useState(false);\r\n  const [disabledSubmit,setdisabledSubmit] = useState(true);\r\n  useEffect(() => {\r\n    if(altname && name.length<3)\r\n    setnameError(\"name must be more than 2 characters\")\r\n    else\r\n    setnameError(\"\")\r\n  },[altname,name])\r\n\r\n  useEffect(() => {\r\n    if(nameError)\r\n      setdisabledSubmit(true);\r\n    else\r\n      setdisabledSubmit(false);\r\n      \r\n  },[nameError])\r\n\r\n  const startAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: ` Voting for ${name} will start now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        start(e);\r\n      }\r\n  })\r\n  }\r\n\r\n  const start = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(startVoting({Name:name,Start:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n\r\n  const stopAlert = (e) => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: `Contest will end now.`,\r\n      icon:\"warning\",\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((isConfirm) => {\r\n      if (isConfirm) {\r\n        stop(e);\r\n      }\r\n  })\r\n  }\r\n  const stop = (e) => {\r\n    e.preventDefault();\r\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today  = new Date();\r\n    dispatch(stopVoting({End:today.toLocaleDateString(\"en-US\", options)}))\r\n  }\r\n  // =========================== Main Return from this component ==================================\r\n  if(user.isLoading)\r\n    return(\r\n      <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n    )\r\n  return (\r\n    <React.Fragment>\r\n      <main style={{marginTop:\"70px\"}}>\r\n      {\r\n        !user.isVoting ?\r\n              <form Validate className=\"voting\">\r\n              <TextField\r\n                error = {nameError}\r\n                helperText = {nameError}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Event\"\r\n                name=\"event\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => {setname(e.target.value);setaltname(true);}}\r\n              />\r\n       \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={startAlert}  \r\n                disabled = {disabledSubmit}\r\n              >\r\n                Start Voting\r\n              </Button>\r\n            </form>\r\n            :\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={stopAlert}  \r\n              >\r\n                Stop Voting\r\n              </Button>\r\n      }\r\n      </main>\r\n      <div style={{marginTop:100}}>\r\n        <h1 >BlackListed Movies</h1>\r\n      </div>\r\n      <main>\r\n      <section className=\"wrapper1\">\r\n          {  \r\n            result && result.length !== 0 ?\r\n            (\r\n              result.map((resul) => (              \r\n              <RenderCard key={resul.id} r={resul} />   \r\n              ))\r\n            )\r\n            :(<p>\r\n                   There are no blacklisted movies\r\n             </p>)\r\n          }\r\n        </section>\r\n        {\r\n          (user.error ) ?\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {`${user.error}`}\r\n            \r\n          </Alert>\r\n          </Snackbar>\r\n          : user.successmsg ?\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            {`${user.successmsg}`}\r\n          </Alert>\r\n        </Snackbar>\r\n        :\r\n        <div></div>\r\n        }\r\n      {/* Admin */}\r\n      <div style={{marginTop:100}}>\r\n        <h1 >All Administrators</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            alladmin.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {alladmin.map((admin) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={admin.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" style={{color:\"black\"}}>{admin.Name}</h3>\r\n                          <h4 class=\"title\">{admin.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {removeFromAdmin(admin.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Dismiss From Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<p>\r\n                   There are no admin users\r\n             </p>)\r\n          }\r\n      </main>\r\n      {/* Users */}\r\n      </main>\r\n      <div style={{marginTop:100,textAlign:\"center\"}}>\r\n        <h1 >All users</h1>\r\n      </div>\r\n      <main>\r\n          {  \r\n            allusers.length !== 0 ?\r\n            (\r\n              <section className=\"wrapper1\">\r\n              {allusers.map((user) => (              \r\n                <React.Fragment className=\"profile-card\">\r\n                      <div class=\"our-team\" style={{width:\"250px\",height:\"220px\"}}>\r\n                        <div class=\"picture\">\r\n                          <img style={{width:\"130px\",height:\"130px\"}} src={user.ProfilePic}/>\r\n                        </div>\r\n                        <div class=\"team-content\">\r\n                          <h3 class=\"name\" style={{color:\"black\"}}>{user.Name}</h3>\r\n                          <h4 class=\"title\">{user.Email}</h4>\r\n                        </div>\r\n                        <ul class=\"social\">\r\n                        <Button variant=\"contained\" style={{width:\"100%\", backgroundColor:\" #1369ce\"}} onClick={(e) => {makeAdminAlert(user.Name,user.Email,e)}} endIcon={<LocalMoviesIcon />} className=\"but1\">\r\n                        Make Admin</Button>\r\n                        </ul>\r\n                      </div>\r\n                </React.Fragment>\r\n              ))}\r\n              </section>\r\n            )\r\n            :(<p>\r\n                   There are no non admin users\r\n             </p>)\r\n          }\r\n        </main>\r\n    </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default AdminDashboardComponent;","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js",["203"],"import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport './HistoryStyle.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { faArrowCircleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst HistoryComponent = () => {\r\n    const user = useSelector(state => state.user);\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          marginTop:50,\r\n          minWidth: 275,\r\n          maxWidth:300,\r\n        },\r\n        bullet: {\r\n          display: 'inline-block',\r\n          margin: '0 2px',\r\n          transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n          fontSize: 14,\r\n        },\r\n        pos: {\r\n          marginBottom: 12,\r\n        },\r\n      });\r\n      const classes = useStyles();\r\n      if(user.isLoading)\r\n      return(\r\n        <CircularProgress style={{marginTop:\"25vw\"}} color=\"secondary\" ></CircularProgress>\r\n      )\r\n      return (\r\n        <div>\r\n            <div class=\"wrapper_history\">\r\n  <div class=\"list\">\r\n    <div class=\"list__header\">\r\n      <h1 >Previous Contests</h1>\r\n      \r\n    </div>\r\n    <div class=\"list__body\">\r\n      <table class=\"list__table\">\r\n      <tr class=\"header_row\">\r\n      <th class=\"list__cell\">S.no</th>\r\n    <th class=\"list__cell\">Contest</th>\r\n    <th class=\"list__cell\">Start date</th>\r\n    <th class=\"list__cell\">End date</th>\r\n    <th class=\"list__cell\">Link</th>\r\n  </tr>\r\n      {\r\n                user.history && user.history.length ?\r\n                (\r\n                    user.history.map((element,index) => {\r\n                        return(\r\n                                       \r\n       <tr class=\"list__row\" >\r\n         \r\n          <td class=\"list__cell\"><span class=\"list__value\">{index+1}</span></td>\r\n          <td class=\"list__cell\"><span class=\"list__value\">{`${element.Name}`}</span></td>\r\n          <td class=\"list__cell\">\r\n            <span class=\"list__value\">{`${element.sDay}`}</span>\r\n            <small class=\"list__label\">{`${element.sTime}`}</small>\r\n            </td>\r\n          \r\n          <td class=\"list__cell\"><span class=\"list__value\">{`${element.eDay}`}</span>\r\n          <small class=\"list__label\">{`${element.eTime}`}</small>\r\n          </td>\r\n         <td class=\"list__cell\">\r\n         <Link to={`/history/${element.contestid}`} className=\"linky\"> \r\n         <span class=\"list__value\"><FontAwesomeIcon icon={faArrowCircleRight} /></span>\r\n         </Link>\r\n         </td>\r\n        </tr>\r\n        \r\n      \r\n  \r\n\r\n                        )\r\n                    })\r\n                )\r\n                :\r\n                <h1>\r\n                    No previous contests\r\n                </h1>\r\n            }\r\n       \r\n        \r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HistoryComponent;","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js",["204","205","206","207","208","209"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDarkMode } from '../../useDarkMode'\r\nimport { lightTheme, darkTheme } from '../../theme';\r\nimport { GlobalStyles } from '../../global';\r\n\r\nimport Toggle from '../Toggle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\n\r\nimport {Hidden} from '@material-ui/core'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport List from '@material-ui/core/List';\r\nimport './HeaderStyle.css'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\n\r\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {logout} from '../../action/user_actions';\r\n\r\nimport { ExitToAppRounded } from '@material-ui/icons';\r\nfunction HeaderComponent(){\r\n        const user = useSelector(state => state.user);\r\n        const User = useSelector(state => state.user.user);\r\n        const [theme, toggleTheme, componentMounted] = useDarkMode();\r\n        const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n        const dispatch = useDispatch();\r\n        const Logout = () => {\r\n          dispatch(logout());\r\n        }\r\n\r\n        const useStyles = makeStyles((theme) => ({\r\n          list: {\r\n            width:300,\r\n            alignItems:'center',\r\n            \r\n          },\r\n      \r\n            root: {\r\n              flexGrow: 1,\r\n              display:'flex'\r\n              \r\n            },\r\n            menuButton: {\r\n              marginRight: theme.spacing(2),\r\n              \r\n              color:'white'\r\n            },\r\n            title: {\r\n                marginRight: theme.spacing(2),\r\n                fontWeight:'bold',\r\n                color:'white',\r\n            },\r\n            Button1:{\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            navText:{\r\n              fontSize:20,\r\n              marginLeft:5\r\n            }\r\n          }));\r\n          const [state, setState] = React.useState(\r\n            false\r\n          );\r\n        \r\n          const toggleDrawer = (open) => (event) => {\r\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n              return;\r\n            }\r\n        \r\n            setState(open);\r\n          };\r\n\r\n\r\n          function TemporaryDrawer() {\r\n            const classes = useStyles();\r\n            \r\n          \r\n            \r\n          \r\n            return (\r\n              <div>\r\n                  <React.Fragment >\r\n                    \r\n                    <SwipeableDrawer anchor=\"left\" open={state} onClose={toggleDrawer(false)}  onOpen={toggleDrawer(true)} >\r\n                    <div className=\"drawe\">\r\n                      <div style={{width:\"100%\",display:'flex'}}>\r\n                      <IconButton style={{position:'absolute',right:0}} onClick={toggleDrawer(false)}>\r\n                      <CancelRoundedIcon color=\"secondary\" />\r\n                      </IconButton>\r\n                      </div>\r\n                      {\r\n                      (user.isLoggedIn) ?\r\n                      \r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src={User.ProfilePic} />\r\n\t\t                <h2 className=\"title title-medium\">{User.Name}</h2>\r\n\t                  </div>\r\n                    :\r\n                    <div className=\"navbrand\">\r\n\t\t                <img className=\"rounded\" src=\"https://icons.iconarchive.com/icons/custom-icon-design/flatastic-3/256/user-icon.png\" />\r\n\t\t                <h2 className=\"title title-medium\">Welcome Guest</h2>\r\n\t\t                \r\n\t                  </div>\r\n                    }\r\n                      <List className={classes.list}>\r\n                      \r\n                      <Link to=\"/\"> \r\n                      <ListItem button key=\"Home\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <HomeRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                      <ListItemText primary=\"HOME\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <Link to=\"/leaderboard\"> \r\n                      <ListItem button key=\"leaderboard\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <Timeline color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"LEADERBOARD\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n\r\n                      <Link to=\"/history\"> \r\n                      <ListItem button key=\"history\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon  > <HistoryIcon color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"HISTORY\"  />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <Link to=\"/Search\"> \r\n                      <ListItem button key=\"Search\" onClick={toggleDrawer(false)}>\r\n                      <ListItemIcon> <SearchRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                      <ListItemText primary=\"SEARCH\" />\r\n                      </ListItem>\r\n                      </Link>\r\n                      \r\n                      <ListItem  key=\"Dark Mode\" >\r\n                      <ListItemIcon> <Brightness4Icon color=\"primary\"/> </ListItemIcon>\r\n                      <Toggle theme={theme} toggleTheme={toggleTheme} />\r\n                      \r\n                      \r\n                      </ListItem>\r\n                      \r\n                      {\r\n                        (user.isLoggedIn) ?\r\n                        <React.Fragment>\r\n                          <Link to=\"/dashboard\"> \r\n                          <ListItem button key=\"Dashboard\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <DashboardRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"DASHBOARD\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          {\r\n                            user.user.IsAdmin ?\r\n                            <Link to=\"/admin\"> \r\n                            <ListItem button key=\"Admin Dashboard\" onClick={toggleDrawer(false)}>\r\n                            <ListItemIcon> <SupervisorAccountIcon color=\"primary\" /> </ListItemIcon>\r\n                            <ListItemText primary=\"ADMIN DASHBOARD\" />\r\n                            </ListItem>\r\n                            </Link>\r\n                            :\r\n                            <Link>\r\n                            </Link>\r\n                          }\r\n                          <ListItem button key=\"Logout\" onClick={ () => {toggleDrawer(false);Logout()}}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGOUT\" />\r\n                          </ListItem>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                          <Link to=\"/login\">\r\n                          <ListItem button key=\"Login\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <LockOpenRoundedIcon color=\"primary\" /> </ListItemIcon>\r\n                          <ListItemText primary=\"LOGIN\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                          \r\n                          <Link to=\"/signup\">\r\n                          <ListItem button key=\"Signup\" onClick={toggleDrawer(false)}>\r\n                          <ListItemIcon> <PersonAddRoundedIcon color=\"primary\"/> </ListItemIcon>\r\n                          <ListItemText primary=\"SIGNUP\" />\r\n                          </ListItem>\r\n                          </Link>\r\n                        </React.Fragment>\r\n                      }\r\n                      \r\n                    \r\n                      </List>\r\n                      </div>\r\n                    </SwipeableDrawer>\r\n                  </React.Fragment>\r\n                \r\n              </div>\r\n            );\r\n          }\r\n\r\n\r\n\r\n\r\n          \r\n           function ButtonAppBar() {\r\n            const classes = useStyles();\r\n           \r\n            return (\r\n              <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className=\"navbar_h\">\r\n                  <Toolbar>\r\n                    \r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                     CINECUP\r\n                    </Typography>\r\n\r\n                    <Hidden mdDown>\r\n                    <div style={{position:\"absolute\",right:0}}>\r\n                    <Link to=\"/\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                      <HomeRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Home</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    <Link to=\"/leaderboard\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                    <Timeline fontSize=\"small\"/>\r\n                      <span className={classes.navText}>LeaderBoard</span>\r\n                    </IconButton>\r\n                    </Link>\r\n\r\n                    <Link to=\"/history\"> \r\n                    <IconButton edge=\"start\" className={classes.menuButton}  color=\"inherit\" aria-label=\"menu\">\r\n                    <HistoryIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>History</span>\r\n                    </IconButton>\r\n                    </Link>\r\n\r\n                    <Link to=\"/search\">\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <SearchRoundedIcon fontSize=\"small\"/>\r\n                      <span className={classes.navText}>Search</span>\r\n                    </IconButton>\r\n                    </Link>\r\n                    {\r\n                      (user.isLoggedIn) ?\r\n                      <React.Fragment>\r\n                      <Link to=\"/dashboard\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <DashboardRoundedIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Dashboard</span>\r\n                        </IconButton>\r\n                      </Link>\r\n                      {\r\n                        (user.user.IsAdmin) ?\r\n                        <Link to=\"/admin\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                          <SupervisorAccountIcon fontSize=\"small\"/>\r\n                          <span className={classes.navText}>Admin Dashboard</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                        :\r\n                        <Link></Link>\r\n                      }\r\n                      \r\n                      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={Logout}>\r\n                      <ExitToAppRounded fontSize=\"small\" />\r\n                          <span className={classes.navText}>Logout</span>\r\n                        </IconButton>\r\n                     \r\n                      </React.Fragment>\r\n                      :\r\n                      <React.Fragment>\r\n                         <Link to=\"/login\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                       <LockOpenRoundedIcon fontSize=\"small\" />\r\n                          <span className={classes.navText}>Login</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                        <Link to=\"/signup\">\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <PersonAddRoundedIcon fontSize=\"small\" />\r\n                          <span className={classes.navText}>Signup</span>\r\n                        </IconButton>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    }\r\n                    </div>\r\n                    </Hidden>\r\n                    \r\n                  </Toolbar>\r\n                    \r\n                   \r\n                </AppBar>\r\n              </div>\r\n            );\r\n          }\r\n       \r\n        if(user.isLoading)\r\n        return(\r\n          <></>\r\n        )\r\n        return (\r\n          <>\r\n          <TemporaryDrawer />\r\n          <ButtonAppBar />\r\n          \r\n          </>\r\n        );\r\n    \r\n  }\r\n\r\nexport default HeaderComponent;\r\n\r\n","F:\\cinecup\\src\\reducer\\user_reducer.js",["210"],"import {\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_ERROR,\r\n    REGISTER_USER_SUCCESS,\r\n    LOGOUT_USER_REQUEST,\r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_ERROR,\r\n    NOMINATE_MOVIE_REQUEST,\r\n    NOMINATE_MOVIE_SUCCESS,\r\n    NOMINATE_MOVIE_ERROR,\r\n    RESET_SUCCESS,\r\n    RESET_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_REQUEST,\r\n    AUTH_USER_SUCCESS,\r\n    AUTH_USER_ERROR,\r\n    FETCH_MOVIES_DATA_REQUEST,\r\n    FETCH_MOVIES_DATA_SUCCESS,\r\n    BLACKLIST_MOVIE_SUCCESS,\r\n    BLACKLIST_MOVIE_FETCH,\r\n    REMOVE_BLACKLISTED_MOVIE_SUCCESS,\r\n    REMOVE_BLACKLISTED_MOVIE_FAILURE,\r\n    FETCH_VOTING_SUCCESS,\r\n    START_VOTING_SUCCESS,\r\n    START_VOTING_FAILURE,\r\n    END_VOTING_SUCCESS,\r\n    END_VOTING_FAILURE,\r\n    FETCH_HISTORY_SUCCESS,\r\n    FETCH_ANNOUNCEMENT_SUCCESS,\r\n} from '../action/types';\r\n\r\n\r\n\r\n\r\n\r\nexport default function user (state = {}, action){\r\n    switch(action.type){\r\n        case REGISTER_USER_REQUEST:\r\n            state = {...state,isLoading:true,isLoggedIn:false,user:undefined,error:undefined,successmsg:undefined}\r\n            break;\r\n        case REGISTER_USER_SUCCESS:\r\n            state = {...state,isLoading:false,isLoggedIn:false,user:undefined,error:undefined,successmsg:action.payload}\r\n            break;\r\n        case REGISTER_USER_ERROR:\r\n            state = {...state,isLoading:false,isLoggedIn:false,user:undefined,error:action.payload,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_REQUEST:\r\n            state = { ...state,isLoading:true,isLoggedIn:false,user:undefined,error:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:true,user:action.payload,error:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGIN_USER_ERROR:\r\n            state = { ...state,isLoading:false,isLoggedIn:false,user:undefined,error:action.payload,successmsg:undefined}\r\n            break;\r\n        case LOGOUT_USER_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case LOGOUT_USER_SUCCESS:\r\n            state = {...state,isLoading:false,isLoggedIn:false,error:undefined,user:undefined,successmsg:undefined}\r\n            break;\r\n        case LOGOUT_USER_ERROR:\r\n            state = {...state,isLoading:false,error:\"Some Error Occured Try Again !!\"}\r\n            break;\r\n        case NOMINATE_MOVIE_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case NOMINATE_MOVIE_ERROR:\r\n            state = {...state,isLoading:false,error:action.payload}\r\n            break;\r\n        case NOMINATE_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,error:undefined,successmsg:action.successmsg,user:{...state.user,Nominations:[...state.user.Nominations,action.payload]}}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_REQUEST:\r\n            state = {...state,isLoading:true,error:undefined}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_ERROR:\r\n            state = {...state,isLoading:false,error:action.payload}\r\n            break;\r\n        case REMOVE_NOMINATE_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,error:undefined,successmsg:action.successmsg,user:{...state.user,Nominations:[action.payload]}}\r\n            break;\r\n        case AUTH_USER_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:true,user:action.payload,error:undefined,successmsg:undefined}\r\n            break;\r\n        case AUTH_USER_ERROR:\r\n            state = {...state,isLoading:false,isLoggedIn:false,error:action.payload,user:undefined,successmsg:undefined}\r\n            break;\r\n        case RESET_SUCCESS:\r\n            state = { ...state,isLoading:false,isLoggedIn:false,user:action.payload,error:undefined}\r\n            break;\r\n        case RESET_ERROR:\r\n            state = {...state,error:\"Some Error Occured Try Again !!\"}\r\n             break;\r\n        case FETCH_MOVIES_DATA_REQUEST:\r\n            state = {...state,isLoading:true}\r\n            break;\r\n        case FETCH_MOVIES_DATA_SUCCESS:\r\n            state = {...state,isLoading:false,movies:action.payload}\r\n            break;       \r\n        case BLACKLIST_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,successmsg:\"Movie Blacklisted Successfully\"}\r\n            break;       \r\n        case BLACKLIST_MOVIE_FETCH:\r\n            state = {...state,isLoading:false,blacklist:action.payload}\r\n            break;  \r\n        case REMOVE_BLACKLISTED_MOVIE_SUCCESS:\r\n            state = {...state,isLoading:false,successmsg:\"Movie Removed from Blacklist\"}\r\n            break;\r\n        case REMOVE_BLACKLISTED_MOVIE_FAILURE:\r\n            state = {...state,isLoading:false,successmsg:undefined,error:action.payload}\r\n            break;\r\n        case FETCH_VOTING_SUCCESS:\r\n            state = {...state,isVoting:action.payload,isLoading:false}\r\n            break;\r\n        case START_VOTING_SUCCESS:\r\n            state = {...state,isVoting:true,isLoading:false,successmsg:\"Voting Started Successfully\"}\r\n            break;\r\n        case START_VOTING_FAILURE:\r\n            state = {...state,isVoting:false,isLoading:false,error:\"Voting Can not be started\"}\r\n            break;\r\n        case END_VOTING_SUCCESS:\r\n            state = {...state,isVoting:false,isLoading:false,successmsg:\"Voting Ended SuccessFully\"}\r\n            break;\r\n        case END_VOTING_FAILURE:\r\n            state = {...state,isVoting:true,isLoading:false,error:\"Voting can not be stopped\"}\r\n            break;\r\n        case FETCH_HISTORY_SUCCESS:\r\n            state = {...state,history:action.payload,isLoading:false}\r\n            break;\r\n        case FETCH_ANNOUNCEMENT_SUCCESS:\r\n            state = {...state,announcement:action.payload,isLoading:false}\r\n            break;\r\n        default :\r\n            return { ...state}\r\n            break;\r\n    }\r\n    console.log(state);\r\n    return state;\r\n}","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js",["211","212"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport {Button} from '@material-ui/core'\r\nfunction Search ({ handleInput }) {\r\n\treturn (\r\n\t\t<section className=\"searchbox-wrap\">\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Search for a movie...\" \r\n\t\t\t\tclassName=\"searchbox\" \r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Search;","F:\\cinecup\\src\\action\\user_actions.js",["213","214","215","216","217","218","219","220","221","222"],"import firebase from 'firebase';\r\nimport {\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_ERROR,\r\n  \r\n    LOGOUT_USER_SUCCESS,\r\n    LOGOUT_USER_ERROR,\r\n    \r\n    NOMINATE_MOVIE_ERROR,\r\n    NOMINATE_MOVIE_SUCCESS,\r\n    RESET_ERROR,\r\n    RESET_SUCCESS,\r\n    REMOVE_NOMINATE_MOVIE_ERROR,\r\n    REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n   \r\n    AUTH_USER_SUCCESS,\r\n    AUTH_USER_ERROR\r\n} from './types';\r\n\r\n//============================================== Register =================================================\r\n\r\nexport const register = (User) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:REGISTER_USER_REQUEST\r\n        })\r\n        const db = firebase.firestore();\r\n        firebase.auth()\r\n        .createUserWithEmailAndPassword(User.email, User.password)\r\n          .then(dataBeforeEmail => {\r\n            firebase.auth().onAuthStateChanged(user=> {\r\n              user.sendEmailVerification()\r\n              .then(dataAfterEmail => {\r\n                firebase.auth().onAuthStateChanged(async function(user) {\r\n                  if (user) {\r\n                    // Sign up successful\r\n                    let image = await uploadImage(User);\r\n                    console.log(User.profilepic)\r\n                    console.log(user);\r\n                    db.collection(\"users\").doc(User.email).set({\r\n                      Name: `${User.firstname} ${User.lastname}`,\r\n                      Email: User.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: image,\r\n                      Nominations:[]\r\n                    }).then(()=>{\r\n                      dispatch({\r\n                        type: REGISTER_USER_SUCCESS,\r\n                        payload:\r\n                          \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\r\n                      })\r\n                    }).catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:REGISTER_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                    })\r\n                  } else {\r\n                    // Signup failed\r\n                    dispatch({\r\n                      type: REGISTER_USER_ERROR,\r\n                      payload:\r\n                        \"Something went wrong, we couldn't create your account. Please try again.\"\r\n                    });\r\n                  }\r\n                });\r\n              })\r\n              // Error in sending mail\r\n              .catch(error => {\r\n                console.log(error);\r\n                dispatch({\r\n                  type:REGISTER_USER_ERROR,\r\n                  payload: \"Sorry We are unable to send Email Verification Link at this moment.\"\r\n                })\r\n              })\r\n            });\r\n          })\r\n          // User Not Created Means Email Already Registered\r\n          .catch(error => {\r\n              console.log(error);\r\n              dispatch({\r\n                type:REGISTER_USER_ERROR,\r\n                payload: \"This Email is already registered. Kindly Login\"\r\n              })\r\n          })\r\n}}\r\n\r\n\r\nasync function uploadImage(User){\r\n  if(User.profilepic !== null ){\r\n  try{\r\n    const storage=firebase.storage();\r\n    let snapshot = await storage.ref(`images/${User.profilepic.name}`).put(User.profilepic)\r\n    console.log('Uploaded', snapshot.totalBytes, 'bytes.');\r\n    let url = await snapshot.ref.getDownloadURL()\r\n    console.log('File available at', url);\r\n    return url;\r\n  }\r\n  catch(err){\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n  }\r\n  else{\r\n    return \"https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png\"\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// =================================== Simple Login ===========================================\r\n\r\nexport const login = (User) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n    })\r\n\r\n    firebase.auth().signInWithEmailAndPassword(User.email, User.password)\r\n    .then((user) => {\r\n      if(firebase.auth().currentUser.emailVerified)\r\n      {\r\n        dispatch({\r\n          type:LOGIN_USER_SUCCESS,\r\n          payload:{Name:user.Name, Email:user.Email, IsAdmin:user.IsAdmin,ProfilePic:user.ProfilePic,Nominations:user.Nominations}\r\n        })\r\n      }  \r\n      else{\r\n        firebase.auth().signOut().then(function() {\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Kindly Verify Your Email\"\r\n          })\r\n        })\r\n      }    \r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      dispatch({\r\n        type:LOGIN_USER_ERROR,\r\n        payload: error.message\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ============================================== Google Login ======================================\r\n\r\nexport const loginwithgoogle = () => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n          type:LOGIN_USER_REQUEST,\r\n        })\r\n        const db = firebase.firestore();\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider)\r\n        .then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            var docRef = db.collection(\"users\").doc(user.email);\r\n            docRef.get().then(function(doc) {\r\n                if (doc.exists) {\r\n                    console.log(\"Already Registered !\");\r\n                    dispatch({\r\n                      type:LOGIN_USER_SUCCESS,\r\n                      payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                    })\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                    console.log(\"Not Already Registered !!!\");\r\n                    db.collection(\"users\").doc(user.email).set({\r\n                            Name: user.displayName,\r\n                            Email: user.email,\r\n                            IsAdmin: false,\r\n                            ProfilePic: user.photoURL,\r\n                            Nominations:[]\r\n                        })\r\n                        .then(function() {\r\n                            console.log(\"Document successfully written!\");\r\n                            dispatch({\r\n                              type:LOGIN_USER_SUCCESS,\r\n                              payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                            })\r\n                        })\r\n                        .catch(function(error) {\r\n                            console.error(\"Error writing document: \", error);\r\n                            dispatch({\r\n                              type:LOGIN_USER_ERROR,\r\n                              payload: \"Some Error Occured Try Again !!\"\r\n                            })\r\n                        });\r\n                    console.log(user);\r\n                }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting documents: \", error);\r\n                dispatch({\r\n                  type:LOGIN_USER_ERROR,\r\n                  payload: \"Some Error Occured Try Again !!\"\r\n                })\r\n              });\r\n           \r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n            return{\r\n              errorCode : errorCode,\r\n              errorMessage:errorMessage\r\n            }\r\n          });\r\n    }\r\n}\r\n\r\n// ======================================= FaceBook Login =================================================\r\n\r\nexport const loginwithfacebook = () => {\r\n  return async (dispatch)=>{\r\n    dispatch({\r\n      type:LOGIN_USER_REQUEST,\r\n      payload: \"\"\r\n    })\r\n    const db = firebase.firestore();\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase.auth().signInWithPopup(provider).then(function(result) {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      var docRef = db.collection(\"users\").doc(user.email);\r\n      docRef.get().then(function(doc) {\r\n          if (doc.exists) {\r\n              console.log(\"Already Registered !\");\r\n              dispatch({\r\n                type:LOGIN_USER_SUCCESS,\r\n                payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n              })\r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such document!\");\r\n              console.log(\"Not Already Registered !!!\");\r\n              db.collection(\"users\").doc(user.email).set({\r\n                      Name: user.displayName,\r\n                      Email: user.email,\r\n                      IsAdmin: false,\r\n                      ProfilePic: user.photoURL,\r\n                      Nominations:[]\r\n                  })\r\n                  .then(function() {\r\n                      console.log(\"Document successfully written!\");\r\n                      dispatch({\r\n                        type:LOGIN_USER_SUCCESS,\r\n                        payload:{Name:user.displayName,Email:user.email,IsAdmin:false,ProfilePic:user.photoURL,Nominations:[]}\r\n                      })\r\n                  })\r\n                  .catch(function(error) {\r\n                      console.error(\"Error writing document: \", error);\r\n                      dispatch({\r\n                        type:LOGIN_USER_ERROR,\r\n                        payload: \"Some Error Occured Try Again !!\"\r\n                      })\r\n                  });\r\n              console.log(user);\r\n          }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting documents: \", error);\r\n          dispatch({\r\n            type:LOGIN_USER_ERROR,\r\n            payload: \"Some Error Occured Try Again !!\"\r\n          })\r\n        });\r\n\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================================== Logout ================================================\r\n\r\nexport const logout = () =>{\r\n  return async (dispatch) =>{\r\n    firebase.auth().signOut().then(function() {\r\n      dispatch({\r\n        type:LOGOUT_USER_SUCCESS,\r\n      })\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: LOGOUT_USER_ERROR\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Auth ====================================================\r\nexport const auth = () => {\r\n  return async (dispatch) => {\r\n    console.log(\"Running Auth\")\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        const db = firebase.firestore();\r\n        var docRef = db.collection(\"users\").doc(user.email);\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists && user.emailVerified) {\r\n                dispatch({\r\n                  type:AUTH_USER_SUCCESS,\r\n                  payload:{Name:doc.data().Name,Email:doc.data().Email,IsAdmin:doc.data().IsAdmin,ProfilePic:doc.data().ProfilePic,Nominations:doc.data().Nominations}\r\n                })\r\n            }\r\n            else {\r\n              dispatch({\r\n                type:AUTH_USER_ERROR,\r\n                payload:\"Kindly Verify Your Email\"\r\n              })\r\n            }\r\n          })\r\n        } else{\r\n          dispatch({\r\n            type:AUTH_USER_ERROR,\r\n            payload:\"\"\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n// ================================================= Nominate ================================================== \r\nexport const nominate = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.length < 5 && !doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayUnion(user.movieId)\r\n          },{ merge: true })\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(1)\r\n          }, { merge: true })\r\n\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_SUCCESS,\r\n            payload:user.movieId,\r\n            successmsg:\"You have successfully nominated the movie.\"\r\n          })\r\n          });\r\n        }\r\n        else if(doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// ================================================= Reset Password ================================================== \r\n\r\nexport const resetPassword = (User) => {\r\n  return async (dispatch) => {\r\n    firebase\r\n    .auth()\r\n    .sendPasswordResetEmail(User.email)\r\n    .then(() =>\r\n      dispatch({\r\n        type: RESET_SUCCESS,\r\n        payload:\r\n          \"Check your inbox. We've sent you a secured reset link by e-mail.\"\r\n      })\r\n      \r\n    )\r\n    .catch(function(error) {\r\n      // An error happened.\r\n      dispatch({\r\n        type: RESET_ERROR,\r\n        payload: `Some Error Occured Try Again !! ${error}`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n// =================================================Remove Nominate ================================================== \r\n\r\n\r\nexport const remove_nominate = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    var userRef = db.collection('users').doc(user.Email);\r\n    userRef.get().then(function(doc) {\r\n      if (doc.exists) {\r\n        console.log(doc.data().Nominations.length);\r\n        console.log(doc.data().Nominations.includes(user.movieId.toString));\r\n        if(doc.data().Nominations.includes(user.movieId))\r\n        {\r\n          // Get a new write batch\r\n          var batch = db.batch();\r\n\r\n          var usersRef = db.collection('users').doc(user.Email);\r\n          var moviesRef = db.collection('movies').doc(user.movieId.toString());\r\n          batch.set(usersRef,{\r\n            Nominations: firebase.firestore.FieldValue.arrayRemove(user.movieId)\r\n          },{ merge: true })\r\n\r\n        if(moviesRef.Votes === 1){\r\n         batch.delete(moviesRef);\r\n        }\r\n        else {\r\n          batch.set(moviesRef, {\r\n            MovieId: user.movieId.toString(),\r\n            Votes: firebase.firestore.FieldValue.increment(-1)\r\n          }, { merge: true })\r\n        }\r\n          // Commit the batch\r\n          batch.commit().then(function () {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_SUCCESS,\r\n            payload:usersRef.Nominations,\r\n            successmsg:\"Movie has been removed from your Nominations\"\r\n          })\r\n          });\r\n        }\r\n        else if(!doc.data().Nominations.includes(user.movieId)) {\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have not nominated that movie\"\r\n          })\r\n        }\r\n        else{\r\n          dispatch({\r\n            type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n            payload:\"You have already nominated 5 movies\"\r\n          })\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n          payload:\"Some Error Occred. Better Luck Next Time !!\"\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      dispatch({\r\n        type:REMOVE_NOMINATE_MOVIE_ERROR,\r\n        payload:`Some Error Occred. Try again !!`\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\n","F:\\cinecup\\src\\action\\types.js",[],"F:\\cinecup\\src\\key\\key.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js",["223"],"import React from 'react'\r\nimport './SearchPageStyle.css'\r\nfunction Popup({ selected, closePopup }) {\r\n\treturn (\r\n\t\t<section className=\"popup\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t    <div className=\"con\">\r\n\t\t\t\t<h2>{ selected.Title } <span>({ selected.Year })</span></h2>\r\n\t\t\t\t<br />\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"plot\">\r\n\t\t\t\t\t<img src={selected.Poster} />\r\n\t\t\t\t\t<div className=\"pa\"><p className=\"rating\" ><span>IMDB Rating : </span>{selected.imdbRating} <br /><br/><span>Genre :</span>  {selected.Genre}<br></br><br></br><span>Actors : </span>{selected.Actors}<br></br><br></br>{selected.Plot}</p></div>\r\n\t\t\t       \r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"close\" onClick={closePopup}>Close</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Popup;","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js",[],"F:\\cinecup\\src\\Components\\shareButton.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js",["224","225","226","227","228","229"],"import React, { useState } from 'react'\r\nimport {ACCESS_TOKEN} from '../../key/key'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {nominate} from '../../action/user_actions';\r\nimport {blackListMovie} from '../../action/movie_actions';\r\nimport {Button, Hidden} from '@material-ui/core'\r\nimport ShareButton from '../shareButton'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport swal from 'sweetalert';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nfunction Result({ result, openPopup }) {\r\n\tconst { getAccessTokenSilently } = useAuth0();\r\n\tconst useStyles = makeStyles({\r\n\t\t\r\n\t\tbut:{\r\n\t\t\tdisplay:\"flex\",\r\n\t\t\tflexDirection:\"row\",\r\n\t\t\talignItems:\"center\",\r\n\t\t\tjustifyItems:\"center\"\r\n\t\t},\r\n\t\tbutton1:{\r\n\t\t\tposition:'relative'\r\n\t\t}\r\n\t  });\r\n\tconst user = useSelector(state => state.user);\r\n\tconst dispatch = useDispatch();\r\n\tconst [btn,setbtn] = useState(false);\r\n\tconst [blackbtn,setblackbtn] = useState(false);\r\n\tconst Nominate = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(result);\r\n\t\tconst dataToSubmit = {\r\n\t\t\tEmail: user.user.Email,\r\n\t\t\tmovieId:result.id\r\n\t\t}\r\n\t\tconsole.log(dataToSubmit);\r\n\t\tdispatch(nominate(dataToSubmit));\r\n\t}\r\n\tconst classes = useStyles();\r\n\r\n\tfunction BlacklistMovieAlert(e){\r\n\t\te.preventDefault();\r\n\t\tswal({\r\n\t\t  title: 'Are you sure ?',\r\n\t\t  text: `${result.title} will be blacklisted and it's votes will be reduced to 0`,\r\n\t\t  icon:\"warning\",\r\n\t\t  dangerMode: true,\r\n\t\t  buttons: true,\r\n\t\t}).then((isConfirm) => {\r\n\t\t  if (isConfirm) {\r\n\t\t\tsetblackbtn(true); \r\n\t\t\tsetbtn(true);\r\n\t\t\tBlacklistMovie(e);\r\n\t\t  }\r\n\t  })\r\n\t}\r\n\r\n\tconst BlacklistMovie = async (e) => {\r\n\t\t\r\n\t\te.preventDefault();\r\n\t\tconst dataToSubmit = {\r\n\t\t\tmovieId:result.id,\r\n\t\t\tmovieName:result.title,\r\n\t\t\ttoken:ACCESS_TOKEN\r\n\t\t}\r\n\t\tconsole.log(dataToSubmit);\r\n\t\tdispatch(blackListMovie(dataToSubmit));\r\n\t}\r\n \r\n\tconst isdisabled = (id) => {\r\n\t\tif(user.isLoggedIn && user.isVoting)\r\n\t\t{\r\n\t\t\tif (user.blacklist && user.blacklist.includes(id.toString()))\r\n\t\t\t\treturn true;\t\t\t\r\n\t\t\telse if(user && user.user && user.user.Nominations.length)\r\n\t\t\t{\r\n\t\t\t\tif(user.user.Nominations.length === 5 || user.user.Nominations.includes(id))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tconst isblackdisabled = (id) => {\r\n\t\tif(user.isLoggedIn)\r\n\t\t{\r\n\t\t\tif(user && user.blacklist && user.blacklist.includes(id.toString()))\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card_s\">\r\n       <div className=\"front_s\" style={{backgroundImage: \"url(\"+(`https://image.tmdb.org/t/p/w500/${result.poster_path}`)+\")\"}}>\r\n       \r\n    </div>\r\n    <div className=\"back_s\">\r\n      <div style={{display:\"flex\",flexDirection:\"column \"}}>\r\n\t\t  <div>\r\n\t\t  <h2>{result.title}</h2>\r\n\t\t  <h3>{result.release_date}</h3>\r\n\t\t  <Rating precision=\"0.5\" name=\"read-only\" value={(result.vote_average)/2} readOnly />\r\n\r\n\t\t  </div>\r\n        \r\n\t\t<div style={{display:\"flex\",flexDirection:\"column\",textAlign: \"center\",\r\n\tjustifyContent: \"center\",\r\n\talignItems: \"center\"\r\n\t}}>\r\n\t\t<Link to={`/movie/${result.id}`}   >\r\n\t\t<Button className=\"button_s\" variant=\"outlined\" color=\"secondary\" style={{marginBottom:10}}>Explore</Button>\r\n\t\t</Link>\r\n\t\t<Button className=\"button_s\" disabled={btn || isdisabled(result.id)} style={{marginBottom:10}}\r\n\t\tvariant=\"outlined\" color=\"primary\" onClick={(e) => {setbtn(true); Nominate(e)}}>\r\n\t\t\tNominate</Button>\r\n\t\t{\r\n\t\t\t\t\tuser.user && user.user.IsAdmin ?\r\n\t\t\t\t\t<Button className=\"button_s\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\r\n\t\t\t\t\tdisabled={blackbtn || isblackdisabled(result.id)}\r\n\t\t\t\t\t onClick={(e) => {BlacklistMovieAlert(e)}}>Blacklist</Button>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t</span>\r\n\t\t}\r\n\t\t<div  className=\"share_but_s\">\r\n          <ShareButton \r\n          url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n           image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n            title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n           />\r\n        </div>\r\n\t\t</div>\r\n\t\t\r\n      </div>\r\n    </div></div>\r\n\t)\r\n}\r\n\r\nexport default Result;\r\n\r\n\r\n/*\r\n\r\n\r\n.wrapper\r\n\t.card\r\n\t\timg(src=\"https://images.unsplash.com/photo-1477666250292-1419fac4c25c?auto=format&fit=crop&w=667&q=80&ixid=dW5zcGxhc2guY29tOzs7Ozs%3D\")\r\n\t\t.info\r\n\t\t\th1 Mountain\r\n\t\t\tp Lorem Ipsum is simply dummy text from the printing and typeseting industry\r\n\t\t\tbutton Read More\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n{/* <Link to={`/movie/${result.id}`} classNameName=\"card\"  >\r\n\t\t\t<img src={`https://image.tmdb.org/t/p/w500/${result.poster_path}`} />\r\n\t\t\t<div classNameName=\"info\">\r\n\t\t\t\t<h1>{result.title}</h1>\r\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\" disabled={btn || isdisabled(result.id)} onClick={(e) => {setbtn(true); Nominate(e)}} endIcon={<LocalMoviesIcon />} classNameName=\"but1\">\r\n                 Nominate</Button>\r\n\t\t\t\t{\r\n\t\t\t\t\tuser.user && user.user.IsAdmin ?\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disabled={blackbtn || isblackdisabled(result.id)} onClick={(e) => {setblackbtn(true); setbtn(true); BlacklistMovie(e)}} endIcon={<LocalMoviesIcon />} classNameName=\"but1\">\r\n                 \tBlackList</Button>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</Link> */}","F:\\cinecup\\src\\useDarkMode.js",[],"F:\\cinecup\\src\\theme.js",[],"F:\\cinecup\\src\\global.js",[],"F:\\cinecup\\src\\Components\\Toggle.js",["230","231","232"],"import React from 'react'\r\nimport { func, string } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { ReactComponent as MoonIcon } from '../icons/moon.svg';\r\nimport { ReactComponent as SunIcon } from '../icons/sun.svg';\r\nimport Switch from '@material-ui/core/Switch';\r\nconst ToggleContainer = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.gradient};\r\n  width: 4rem;\r\n  height: 2rem;\r\n  margin: 0 auto;\r\n  border-radius: 30px;\r\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\r\n  font-size: 0.5rem;\r\n  padding: 0.5rem;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    width: 1.5rem;\r\n    height: auto;\r\n    transition: all 0.3s linear;\r\n\r\n    &:first-child {\r\n      transform: ${({ lightTheme }) => lightTheme ? 'translateY(0)' : 'translateY(100px)'};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      transform: ${({ lightTheme }) => lightTheme ? 'translateY(-100px)' : 'translateY(0)'};\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  const isLight = theme === 'light';\r\n\r\n  return (\r\n    <Switch\r\n        checked={isLight}\r\n        onChange={toggleTheme}\r\n        name=\"Theme\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n      />\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  toggleTheme: func.isRequired,\r\n  theme: string.isRequired,\r\n}\r\n\r\nexport default Toggle;\r\n",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":19,"column":25,"nodeType":"239","messageId":"240","endLine":19,"endColumn":33},{"ruleId":"237","severity":1,"message":"241","line":29,"column":17,"nodeType":"239","messageId":"240","endLine":29,"endColumn":28},{"ruleId":"237","severity":1,"message":"242","line":29,"column":30,"nodeType":"239","messageId":"240","endLine":29,"endColumn":46},{"ruleId":"243","severity":1,"message":"244","line":37,"column":3,"nodeType":"245","endLine":37,"endColumn":5,"suggestions":"246"},{"ruleId":"237","severity":1,"message":"247","line":8,"column":5,"nodeType":"239","messageId":"240","endLine":8,"endColumn":28},{"ruleId":"237","severity":1,"message":"248","line":28,"column":13,"nodeType":"239","messageId":"240","endLine":28,"endColumn":24},{"ruleId":"237","severity":1,"message":"248","line":79,"column":13,"nodeType":"239","messageId":"240","endLine":79,"endColumn":24},{"ruleId":"237","severity":1,"message":"248","line":120,"column":13,"nodeType":"239","messageId":"240","endLine":120,"endColumn":24},{"ruleId":"243","severity":1,"message":"249","line":26,"column":14,"nodeType":"245","endLine":26,"endColumn":54,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"251","line":41,"column":9,"nodeType":"239","messageId":"240","endLine":41,"endColumn":26},{"ruleId":"243","severity":1,"message":"252","line":79,"column":5,"nodeType":"245","endLine":79,"endColumn":18,"suggestions":"253"},{"ruleId":"237","severity":1,"message":"254","line":81,"column":9,"nodeType":"239","messageId":"240","endLine":81,"endColumn":18},{"ruleId":"237","severity":1,"message":"255","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":1,"column":15,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},{"ruleId":"237","severity":1,"message":"256","line":5,"column":21,"nodeType":"239","messageId":"240","endLine":5,"endColumn":32},{"ruleId":"237","severity":1,"message":"257","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":19},{"ruleId":"237","severity":1,"message":"258","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":11},{"ruleId":"237","severity":1,"message":"259","line":77,"column":11,"nodeType":"239","messageId":"240","endLine":77,"endColumn":26},{"ruleId":"237","severity":1,"message":"260","line":132,"column":11,"nodeType":"239","messageId":"240","endLine":132,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":45,"column":13,"nodeType":"263","messageId":"264","endLine":45,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":50,"column":13,"nodeType":"263","messageId":"264","endLine":50,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":55,"column":13,"nodeType":"263","messageId":"264","endLine":55,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":143,"column":7,"nodeType":"267","endLine":143,"endColumn":112},{"ruleId":"237","severity":1,"message":"268","line":173,"column":11,"nodeType":"239","messageId":"240","endLine":173,"endColumn":18},{"ruleId":"243","severity":1,"message":"269","line":194,"column":7,"nodeType":"245","endLine":194,"endColumn":16,"suggestions":"270"},{"ruleId":"237","severity":1,"message":"271","line":8,"column":16,"nodeType":"239","messageId":"240","endLine":8,"endColumn":21},{"ruleId":"243","severity":1,"message":"272","line":29,"column":7,"nodeType":"245","endLine":29,"endColumn":9,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"274","line":43,"column":7,"nodeType":"245","endLine":43,"endColumn":9,"suggestions":"275"},{"ruleId":"243","severity":1,"message":"276","line":54,"column":7,"nodeType":"245","endLine":54,"endColumn":15,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":80,"column":3,"nodeType":"267","endLine":80,"endColumn":78},{"ruleId":"278","severity":1,"message":"279","line":132,"column":13,"nodeType":"267","endLine":132,"endColumn":105},{"ruleId":"261","severity":1,"message":"280","line":150,"column":21,"nodeType":"263","messageId":"264","endLine":150,"endColumn":23},{"ruleId":"237","severity":1,"message":"281","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":19},{"ruleId":"237","severity":1,"message":"251","line":40,"column":9,"nodeType":"239","messageId":"240","endLine":40,"endColumn":26},{"ruleId":"282","severity":1,"message":"283","line":88,"column":65,"nodeType":"263","messageId":"284","endLine":88,"endColumn":66},{"ruleId":"282","severity":1,"message":"283","line":88,"column":118,"nodeType":"263","messageId":"284","endLine":88,"endColumn":119},{"ruleId":"243","severity":1,"message":"285","line":136,"column":5,"nodeType":"245","endLine":136,"endColumn":22,"suggestions":"286"},{"ruleId":"237","severity":1,"message":"251","line":59,"column":9,"nodeType":"239","messageId":"240","endLine":59,"endColumn":26},{"ruleId":"237","severity":1,"message":"260","line":104,"column":11,"nodeType":"239","messageId":"240","endLine":104,"endColumn":22},{"ruleId":"237","severity":1,"message":"251","line":37,"column":11,"nodeType":"239","messageId":"240","endLine":37,"endColumn":28},{"ruleId":"282","severity":1,"message":"283","line":85,"column":67,"nodeType":"263","messageId":"284","endLine":85,"endColumn":68},{"ruleId":"282","severity":1,"message":"283","line":85,"column":120,"nodeType":"263","messageId":"284","endLine":85,"endColumn":121},{"ruleId":"243","severity":1,"message":"287","line":132,"column":7,"nodeType":"245","endLine":132,"endColumn":24,"suggestions":"288"},{"ruleId":"237","severity":1,"message":"248","line":139,"column":11,"nodeType":"239","messageId":"240","endLine":139,"endColumn":22},{"ruleId":"278","severity":1,"message":"279","line":342,"column":27,"nodeType":"267","endLine":342,"endColumn":95},{"ruleId":"278","severity":1,"message":"279","line":376,"column":27,"nodeType":"267","endLine":376,"endColumn":94},{"ruleId":"237","severity":1,"message":"268","line":31,"column":13,"nodeType":"239","messageId":"240","endLine":31,"endColumn":20},{"ruleId":"237","severity":1,"message":"289","line":10,"column":10,"nodeType":"239","messageId":"240","endLine":10,"endColumn":22},{"ruleId":"237","severity":1,"message":"290","line":35,"column":8,"nodeType":"239","messageId":"240","endLine":35,"endColumn":14},{"ruleId":"237","severity":1,"message":"242","line":43,"column":36,"nodeType":"239","messageId":"240","endLine":43,"endColumn":52},{"ruleId":"237","severity":1,"message":"291","line":44,"column":15,"nodeType":"239","messageId":"240","endLine":44,"endColumn":24},{"ruleId":"278","severity":1,"message":"279","line":114,"column":19,"nodeType":"267","endLine":114,"endColumn":68},{"ruleId":"278","severity":1,"message":"279","line":119,"column":19,"nodeType":"267","endLine":119,"endColumn":137},{"ruleId":"292","severity":1,"message":"293","line":140,"column":13,"nodeType":"294","messageId":"295","endLine":140,"endColumn":19},{"ruleId":"237","severity":1,"message":"296","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":23},{"ruleId":"237","severity":1,"message":"297","line":4,"column":9,"nodeType":"239","messageId":"240","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"298","line":143,"column":11,"nodeType":"239","messageId":"240","endLine":143,"endColumn":20},{"ruleId":"237","severity":1,"message":"299","line":144,"column":11,"nodeType":"239","messageId":"240","endLine":144,"endColumn":23},{"ruleId":"237","severity":1,"message":"300","line":165,"column":17,"nodeType":"239","messageId":"240","endLine":165,"endColumn":22},{"ruleId":"237","severity":1,"message":"301","line":216,"column":17,"nodeType":"239","messageId":"240","endLine":216,"endColumn":22},{"ruleId":"237","severity":1,"message":"302","line":218,"column":17,"nodeType":"239","messageId":"240","endLine":218,"endColumn":27},{"ruleId":"237","severity":1,"message":"300","line":240,"column":11,"nodeType":"239","messageId":"240","endLine":240,"endColumn":16},{"ruleId":"237","severity":1,"message":"298","line":288,"column":11,"nodeType":"239","messageId":"240","endLine":288,"endColumn":20},{"ruleId":"237","severity":1,"message":"299","line":289,"column":11,"nodeType":"239","messageId":"240","endLine":289,"endColumn":23},{"ruleId":"237","severity":1,"message":"301","line":291,"column":11,"nodeType":"239","messageId":"240","endLine":291,"endColumn":16},{"ruleId":"237","severity":1,"message":"302","line":293,"column":11,"nodeType":"239","messageId":"240","endLine":293,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":13,"column":6,"nodeType":"267","endLine":13,"endColumn":35},{"ruleId":"237","severity":1,"message":"303","line":7,"column":17,"nodeType":"239","messageId":"240","endLine":7,"endColumn":23},{"ruleId":"237","severity":1,"message":"304","line":16,"column":10,"nodeType":"239","messageId":"240","endLine":16,"endColumn":32},{"ruleId":"237","severity":1,"message":"268","line":43,"column":8,"nodeType":"239","messageId":"240","endLine":43,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":100,"column":64,"nodeType":"263","messageId":"284","endLine":100,"endColumn":65},{"ruleId":"282","severity":1,"message":"283","line":100,"column":122,"nodeType":"263","messageId":"284","endLine":100,"endColumn":123},{"ruleId":"305","severity":1,"message":"306","line":169,"column":1,"nodeType":"307","messageId":"308","endLine":184,"endColumn":14},{"ruleId":"237","severity":1,"message":"309","line":5,"column":28,"nodeType":"239","messageId":"240","endLine":5,"endColumn":36},{"ruleId":"237","severity":1,"message":"310","line":6,"column":28,"nodeType":"239","messageId":"240","endLine":6,"endColumn":35},{"ruleId":"237","severity":1,"message":"311","line":8,"column":7,"nodeType":"239","messageId":"240","endLine":8,"endColumn":22},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'toggleTheme' is assigned a value but never used.","'componentMounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["314"],"'BLACKLIST_MOVIE_FAILURE' is defined but never used.","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["315"],"'useSnackbarStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["316"],"'openPopup' is assigned a value but never used.","'Component' is defined but never used.","'useDispatch' is defined but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'Snackbarclasses' is assigned a value but never used.","'handleClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["317"],"'anime' is defined but never used.","React Hook useEffect has missing dependencies: 'cast' and 'creditsapi'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has missing dependencies: 'reviews' and 'reviewsapi'. Either include them or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'ShareButton' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'fetchData', 'result', and 'user.user'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'fetchData' and 'user.blacklist'. Either include them or remove the dependency array.",["322"],"'GlobalStyles' is defined but never used.","'Switch' is defined but never used.","'themeMode' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'LocalMoviesIcon' is defined but never used.","'Button' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Hidden' is defined but never used.","'getAccessTokenSilently' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'ToggleContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [dispatch]",{"range":"341","text":"342"},"Update the dependencies array to be: [dispatch, props.history, user, user.isLoggedIn]",{"range":"343","text":"344"},"Update the dependencies array to be: [queryString, search]",{"range":"345","text":"346"},"Update the dependencies array to be: [contest, fetchData]",{"range":"347","text":"348"},"Update the dependencies array to be: [cast, creditsapi]",{"range":"349","text":"350"},"Update the dependencies array to be: [reviews, reviewsapi]",{"range":"351","text":"352"},"Update the dependencies array to be: [apiurl, result]",{"range":"353","text":"354"},"Update the dependencies array to be: [fetchData, result, user.isLoggedIn, user.user]",{"range":"355","text":"356"},"Update the dependencies array to be: [fetchData, user.blacklist, user.isLoggedIn]",{"range":"357","text":"358"},[2077,2079],"[dispatch]",[1108,1148],"[dispatch, props.history, user, user.isLoggedIn]",[2231,2244],"[queryString, search]",[5178,5187],"[contest, fetchData]",[930,932],"[cast, creditsapi]",[1299,1301],"[reviews, reviewsapi]",[1549,1557],"[apiurl, result]",[4347,4364],"[fetchData, result, user.isLoggedIn, user.user]",[4669,4686],"[fetchData, user.blacklist, user.isLoggedIn]"]