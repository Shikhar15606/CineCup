[{"F:\\cinecup\\src\\index.js":"1","F:\\cinecup\\src\\reportWebVitals.js":"2","F:\\cinecup\\src\\App.js":"3","F:\\cinecup\\src\\reducer\\index.js":"4","F:\\cinecup\\src\\fontawesome.js":"5","F:\\cinecup\\src\\action\\movie_actions.js":"6","F:\\cinecup\\src\\auth.js":"7","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js":"8","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js":"9","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js":"10","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js":"11","F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js":"12","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js":"13","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js":"14","F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js":"15","F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js":"16","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js":"17","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js":"18","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js":"19","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js":"20","F:\\cinecup\\src\\reducer\\user_reducer.js":"21","F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js":"22","F:\\cinecup\\src\\action\\user_actions.js":"23","F:\\cinecup\\src\\action\\types.js":"24","F:\\cinecup\\src\\key\\key.js":"25","F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js":"26","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js":"27","F:\\cinecup\\src\\Components\\shareButton.js":"28","F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js":"29","F:\\cinecup\\src\\theme.js":"30","F:\\cinecup\\src\\global.js":"31","F:\\cinecup\\src\\Components\\Toggle.js":"32","F:\\cinecup\\src\\Components\\UserProfile\\UserProfile.js":"33","F:\\cinecup\\src\\Components\\scrollToTop.js":"34"},{"size":1667,"mtime":1611385333903,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1611381945314,"results":"37","hashOfConfig":"36"},{"size":5204,"mtime":1611385322921,"results":"38","hashOfConfig":"36"},{"size":154,"mtime":1611385334200,"results":"39","hashOfConfig":"36"},{"size":297,"mtime":1611381930745,"results":"40","hashOfConfig":"36"},{"size":16991,"mtime":1611722321195,"results":"41","hashOfConfig":"36"},{"size":1171,"mtime":1611385333589,"results":"42","hashOfConfig":"36"},{"size":3573,"mtime":1611385328379,"results":"43","hashOfConfig":"36"},{"size":4834,"mtime":1611385330371,"results":"44","hashOfConfig":"36"},{"size":1826,"mtime":1611385324822,"results":"45","hashOfConfig":"36"},{"size":6194,"mtime":1611722008324,"results":"46","hashOfConfig":"36"},{"size":7651,"mtime":1611385327958,"results":"47","hashOfConfig":"36"},{"size":8540,"mtime":1611385326618,"results":"48","hashOfConfig":"36"},{"size":10183,"mtime":1611722008348,"results":"49","hashOfConfig":"36"},{"size":5802,"mtime":1611722008348,"results":"50","hashOfConfig":"36"},{"size":12477,"mtime":1611416905642,"results":"51","hashOfConfig":"36"},{"size":10332,"mtime":1611385331030,"results":"52","hashOfConfig":"36"},{"size":21400,"mtime":1611416905635,"results":"53","hashOfConfig":"36"},{"size":3582,"mtime":1611416905652,"results":"54","hashOfConfig":"36"},{"size":14545,"mtime":1611385325536,"results":"55","hashOfConfig":"36"},{"size":7282,"mtime":1611385334559,"results":"56","hashOfConfig":"36"},{"size":583,"mtime":1611385330058,"results":"57","hashOfConfig":"36"},{"size":18579,"mtime":1611385333385,"results":"58","hashOfConfig":"36"},{"size":2394,"mtime":1611385332935,"results":"59","hashOfConfig":"36"},{"size":258,"mtime":1611381901194,"results":"60","hashOfConfig":"36"},{"size":1017,"mtime":1611385329323,"results":"61","hashOfConfig":"36"},{"size":584,"mtime":1611385329784,"results":"62","hashOfConfig":"36"},{"size":1220,"mtime":1611385332147,"results":"63","hashOfConfig":"36"},{"size":5288,"mtime":1611385329559,"results":"64","hashOfConfig":"36"},{"size":824,"mtime":1611385334729,"results":"65","hashOfConfig":"36"},{"size":1672,"mtime":1611381933336,"results":"66","hashOfConfig":"36"},{"size":556,"mtime":1611385331240,"results":"67","hashOfConfig":"36"},{"size":5183,"mtime":1611416905671,"results":"68","hashOfConfig":"36"},{"size":1213,"mtime":1611416905682,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"lakeq2",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"72"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"F:\\cinecup\\src\\index.js",[],["158","159"],"F:\\cinecup\\src\\reportWebVitals.js",[],"F:\\cinecup\\src\\App.js",["160"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './fontawesome';\nimport './App.css';\nimport DashBoardPageComponent from './Components/DashboardPageComponent/DashboardPageComponent';\nimport ErrorPageComponent from './Components/ErrorPageComponent/ErrorPageComponent';\n\nimport HeaderComponent from './Components/HeaderComponent/HeaderComponent';\nimport HomePageComponent from './Components/HomePageComponent/HomePageComponent';\nimport LoginPageComponent from './Components/LoginPageComponent/LoginPageComponent';\nimport SearchPageComponent from './Components/SearchPageComponent/SearchPageComponent';\nimport SignUpPageComponent from './Components/SignUpPageComponent/SignUpPageComponent';\nimport MoviePageComponent from './Components/MoviePageComponent/MoviePageComponent';\nimport LeaderboardPageComponent from './Components/LeaderboardPageComponent/LeaderboardPageComponent';\nimport AdminDashboardComponent from './Components/AdminDashboardComponent/AdminDashboardComponent';\nimport Auth from './auth';\nimport ResetPassword from './Components/LoginPageComponent/ResetPassword';\nimport { useDispatch } from 'react-redux';\nimport {\n  fetchBlackListedMovies,\n  fetchHistory,\n  fetchMoviesData,\n  getAnnouncement,\n  getVotingOnOff,\n} from './action/movie_actions';\nimport React, { useEffect, useState } from 'react';\nimport HistoryComponent from './Components/HistoryComponent/HistoryComponent';\nimport HistoryDetailComponent from './Components/HistoryDetailComponent/HistoryDetailComponent';\nimport { ThemeProvider } from 'styled-components';\n\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport UserProfile from './Components/UserProfile/UserProfile';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  function setMode(mode) {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  }\n\n  function toggleTheme() {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches &&\n    !localTheme\n      ? setMode('dark')\n      : localTheme\n      ? setTheme(localTheme)\n      : setMode('light');\n\n    setComponentMounted(true);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchMoviesData());\n    dispatch(fetchBlackListedMovies());\n    dispatch(getVotingOnOff());\n    dispatch(fetchHistory());\n    dispatch(getAnnouncement());\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <BrowserRouter>\n          <div className='App'>\n            <GlobalStyles />\n            <HeaderComponent\n              toggleTheme={toggleTheme}\n              theme={theme}\n              componentMounted={componentMounted}\n            ></HeaderComponent>\n            <Switch>\n              <Route\n                exact\n                path='/'\n                component={Auth(HomePageComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/leaderboard'\n                component={Auth(LeaderboardPageComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/login'\n                component={Auth(LoginPageComponent, false)}\n              ></Route>\n              <Route\n                exact\n                path='/resetpassword'\n                component={Auth(ResetPassword, false)}\n              ></Route>\n              <Route\n                exact\n                path='/signup'\n                component={Auth(SignUpPageComponent, false)}\n              ></Route>\n              <Route\n                exact\n                path='/dashboard'\n                component={Auth(DashBoardPageComponent, true)}\n              ></Route>\n              <Route\n                exact\n                path='/history'\n                component={Auth(HistoryComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/history/:contest_id'\n                component={Auth(HistoryDetailComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/admin'\n                component={Auth(AdminDashboardComponent, true, true)}\n              ></Route>\n              <Route\n                exact\n                path='/search'\n                component={Auth(SearchPageComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/movie/:movie_id'\n                component={Auth(MoviePageComponent, null)}\n              ></Route>\n              <Route\n                exact\n                path='/user/:user_id'\n                component={Auth(UserProfile, null)}\n              ></Route>\n              <Route\n                path='*'\n                component={Auth(ErrorPageComponent, null)}\n              ></Route>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","F:\\cinecup\\src\\reducer\\index.js",[],"F:\\cinecup\\src\\fontawesome.js",[],"F:\\cinecup\\src\\action\\movie_actions.js",["161","162","163","164"],"F:\\cinecup\\src\\auth.js",["165"],"import React, { useEffect } from 'react';\nimport { auth } from './action/user_actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function Auth(ComposedClass, status, admin = false) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(async response => {\n        console.log('------------', user, '----------------------');\n        // response is true means user logged in\n        // logged in user can not see login and signup page\n        if (user.isLoggedIn && status === false) {\n          props.history.push('/');\n        }\n        // redirect to\n        if (user.isLoggedIn === false && status === true) {\n          props.history.push('/login');\n        }\n        // if user is not admin\n        else if (\n          user.isLoggedIn === true &&\n          admin === true &&\n          user.user.IsAdmin === false\n        ) {\n          props.history.push('/error');\n        }\n      });\n    }, [dispatch, props.history, user.isLoggedIn]);\n    return <ComposedClass {...props} />;\n  }\n  return AuthenticationCheck;\n}\n","F:\\cinecup\\src\\Components\\LoginPageComponent\\ResetPassword.js",["166"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// redux\nimport { resetPassword } from '../../action/user_actions';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage:\n      'url(https://image.freepik.com/free-vector/login-concept-illustration_114360-739.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction ResetPassword() {\n  const classes = useStyles();\n\n  const [email, setemail] = useState('');\n\n  const [emailError, setemailError] = useState('');\n\n  const [altemail, setaltemail] = useState(false);\n\n  useEffect(() => {\n    if (\n      altemail &&\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        email\n      )\n    )\n      setemailError('Invalid Email Address');\n    else setemailError('');\n  }, [altemail, email]);\n\n  const dispatch = useDispatch();\n\n  const RESETPASSWORD = e => {\n    e.preventDefault();\n    dispatch(resetPassword({ email: email }));\n  };\n  return (\n    <Grid container component='main' className='login-root'>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className='login-image' />\n      <Grid item xs={12} sm={8} md={5}>\n        <div className='login-paper'>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Password Reset\n          </Typography>\n          <form className={classes.form} Validate>\n            <TextField\n              error={emailError}\n              helperText={emailError}\n              variant='outlined'\n              margin='normal'\n              required\n              fullWidth\n              id='email'\n              label='Email Address'\n              name='email'\n              autoComplete='email'\n              autoFocus\n              value={email}\n              onChange={e => {\n                setemail(e.target.value);\n                setaltemail(true);\n              }}\n              InputProps={{ className: 'voting_text' }}\n              InputLabelProps={{\n                className: 'voting_text',\n              }}\n            />\n\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={RESETPASSWORD}\n            >\n              Reset\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ResetPassword;\n","F:\\cinecup\\src\\Components\\SearchPageComponent\\SearchPageComponent.js",["167","168","169"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TMDB_API_KEY } from '../../key/key';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Search from './Search';\nimport Results from './Results';\nimport Popup from './Popup';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { setqueryString } from './../../action/movie_actions';\n\nfunction SearchPageComponent() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [results, setresults] = useState([]);\n  const [selected, setselected] = useState({});\n  const [isLoading, setisLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  var apiurl = `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${user.queryString}`;\n\n  let nominations;\n  if (user.isLoggedIn) {\n    nominations = user.user.Nominations.length;\n  } else {\n    nominations = 10;\n  }\n\n  useEffect(() => {\n    if (user.error || nominations === 5 || user.successmsg) {\n      setOpen(true);\n    }\n  }, [user, nominations]);\n\n  useEffect(() => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n  }\n\n  const useSnackbarStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n  const search = () => {\n    console.log(user.queryString);\n    if (user.queryString) {\n      axios(apiurl).then(({ data }) => {\n        console.log(data);\n        let results = data.results;\n        setresults(results);\n        console.log(results);\n        setisLoading(false);\n      });\n    } else {\n      axios(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB_API_KEY}`\n      ).then(({ data }) => {\n        let results = data.results;\n        setresults(results);\n        setisLoading(false);\n      });\n    }\n  };\n\n  const handleInput = e => {\n    setisLoading(true);\n    dispatch(setqueryString(e.target.value));\n  };\n\n  useEffect(() => {\n    search();\n  }, [user.queryString]);\n\n  const openPopup = id => {\n    axios(apiurl + '&i=' + id).then(({ data }) => {\n      let result = data;\n      console.log(result);\n      setselected(result);\n    });\n  };\n\n  const closePopup = () => {\n    setselected({});\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  if (user.isLoading)\n    return (\n      <CircularProgress\n        style={{ marginTop: '25vw' }}\n        color='secondary'\n      ></CircularProgress>\n    );\n  return (\n    <div>\n      <header>\n        <h1>Movie Search</h1>\n      </header>\n      <main>\n        <Search handleInput={handleInput} search={search} />\n        {!isLoading ? (\n          <React.Fragment>\n            <Results results={results} />\n            {typeof selected.Title != 'undefined' ? (\n              <Popup selected={selected} closePopup={closePopup} />\n            ) : (\n              false\n            )}\n          </React.Fragment>\n        ) : (\n          <div className='wrapper'>\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n            <Skeleton variant='rect' animation='wave' className='card_s' />\n          </div>\n        )}\n        {user.error ? (\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity='error'>\n              {`${user.error}`}\n            </Alert>\n          </Snackbar>\n        ) : user.successmsg ? (\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity='success'>\n              {`${user.successmsg}`}\n            </Alert>\n          </Snackbar>\n        ) : (\n          <div></div>\n        )}\n        {nominations === 5 ? (\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity='error'>\n              You have already nominated 5 movies to add another remove one\n              first\n            </Alert>\n          </Snackbar>\n        ) : (\n          <div></div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default SearchPageComponent;\n","F:\\cinecup\\src\\Components\\ErrorPageComponent\\ErrorPageComponent.js",["170"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ErrorPageStyle.css';\n\nfunction ErrorPageComponent() {\n  return (\n    <div className='errorcomp'>\n      <section className='wrapper'>\n        <div className='container'>\n          <div id='scene' className='scene' data-hover-only='false'>\n            <div className='circle' data-depth='1.2'></div>\n            <div className='one' data-depth='0.9'>\n              <div className='content'>\n                <span className='piece'></span>\n                <span className='piece'></span>\n                <span className='piece'></span>\n              </div>\n            </div>\n            <div className='two' data-depth='0.60'>\n              <div className='content'>\n                <span className='piece'></span>\n                <span className='piece'></span>\n                <span className='piece'></span>\n              </div>\n            </div>\n            <div className='three' data-depth='0.40'>\n              <div className='content'>\n                <span className='piece'></span>\n                <span className='piece'></span>\n                <span className='piece'></span>\n              </div>\n            </div>\n            <p className='p404' data-depth='0.50'>\n              404\n            </p>\n            <p className='p404' data-depth='0.10'>\n              404\n            </p>\n          </div>\n          <div className='text'>\n            <article>\n              <p>\n                Uh oh! Looks like you got lost. <br />\n                Go back to the homepage if you dare!\n              </p>\n              <button>\n                <Link to='/'>i dare!</Link>\n              </button>\n            </article>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default ErrorPageComponent;\n","F:\\cinecup\\src\\Components\\HomePageComponent\\HomePageComponent.js",["171","172","173"],"F:\\cinecup\\src\\Components\\LoginPageComponent\\LoginPageComponent.js",["174","175","176","177","178","179","180"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './LoginStyle.css';\n// redux\nimport {\n  loginwithfacebook,\n  loginwithgoogle,\n  login,\n} from '../../action/user_actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '80px',\n    marginBottom: '40px',\n    height: '80vh',\n  },\n\n  paper: {\n    margin: theme.spacing(8, 4),\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nconst useSnackbarStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction LoginPageComponent() {\n  const classes = useStyles();\n  const Snackbarclasses = useSnackbarStyles();\n\n  const user = useSelector(state => state.user);\n\n  const [open, setOpen] = React.useState(false);\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [emailError, setemailError] = useState('');\n  const [passwordError, setpasswordError] = useState('');\n  const [altemail, setaltemail] = useState(false);\n  const [altpassword, setaltpassword] = useState(false);\n  const [disabledSubmit, setdisabledSubmit] = useState(true);\n\n  useEffect(() => {\n    if (user.error) {\n      setOpen(true);\n    }\n  }, [user.error]);\n\n  useEffect(() => {\n    if (\n      altemail &&\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        email\n      )\n    )\n      setemailError('Invalid Email Address');\n    else setemailError('');\n  }, [altemail, email]);\n\n  useEffect(() => {\n    if (altpassword && password.length < 6)\n      setpasswordError('Password must have more than 5 characters');\n    else setpasswordError('');\n  }, [altpassword, password]);\n\n  useEffect(() => {\n    if (!emailError && !passwordError && email && password)\n      setdisabledSubmit(false);\n    else setdisabledSubmit(true);\n  }, [passwordError, emailError, email, password]);\n\n  const dispatch = useDispatch();\n\n  const Login = e => {\n    e.preventDefault();\n    dispatch(login({ email: email, password: password }));\n  };\n  const loginWithGoogle = e => {\n    e.preventDefault();\n    dispatch(loginwithgoogle());\n  };\n  const loginWithFaceBook = e => {\n    e.preventDefault();\n    dispatch(loginwithfacebook());\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  if (user.isLoading)\n    return (\n      <CircularProgress\n        style={{ marginTop: '25vw' }}\n        color='secondary'\n      ></CircularProgress>\n    );\n  return (\n    <Grid container component='main' className='login-root'>\n      {/* <CssBaseline /> */}\n      <Grid item xs={false} sm={4} md={7} className='login-image' />\n      <Grid item xs={12} sm={8} md={5}>\n        <div className='login-paper'>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign in\n          </Typography>\n          <form className={classes.form} Validate>\n            <TextField\n              error={emailError}\n              helperText={emailError}\n              variant='outlined'\n              margin='normal'\n              required\n              fullWidth\n              id='email'\n              label='Email Address'\n              name='email'\n              autoComplete='email'\n              autoFocus\n              value={email}\n              onChange={e => {\n                setemail(e.target.value);\n                setaltemail(true);\n              }}\n              InputProps={{ className: 'voting_text' }}\n              InputLabelProps={{\n                className: 'voting_text',\n              }}\n            />\n            <TextField\n              error={passwordError}\n              helperText={passwordError}\n              variant='outlined'\n              margin='normal'\n              required\n              fullWidth\n              name='password'\n              label='Password'\n              type='password'\n              id='password'\n              autoComplete='current-password'\n              value={password}\n              onChange={e => {\n                setpassword(e.target.value);\n                setaltpassword(true);\n              }}\n              InputProps={{ className: 'voting_text' }}\n              InputLabelProps={{\n                className: 'voting_text',\n              }}\n            />\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={Login}\n              disabled={disabledSubmit}\n            >\n              Sign In\n            </Button>\n            {user.error ? (\n              <Snackbar\n                open={open}\n                autoHideDuration={10000}\n                onClose={handleClose}\n              >\n                <Alert onClose={handleClose} severity='error'>\n                  {`${user.error}`}\n                </Alert>\n              </Snackbar>\n            ) : (\n              <div></div>\n            )}\n            <Grid container>\n              <Grid item xs={12}>\n                <Link to='/resetpassword' variant='body2'>\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item xs={12}>\n                <Link to='/signup' variant='body2'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Button\n              style={{ marginTop: '25px', marginBottom: '25px' }}\n              fullWidth\n              variant='contained'\n              color='secondary'\n              startIcon={<FontAwesomeIcon icon={faGoogle} />}\n              onClick={e => {\n                loginWithGoogle(e);\n              }}\n            >\n              Login with Google\n            </Button>\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              startIcon={<FontAwesomeIcon icon={faFacebookF} />}\n              onClick={e => {\n                loginWithFaceBook(e);\n              }}\n            >\n              Login with Facebook\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default LoginPageComponent;\n","F:\\cinecup\\src\\Components\\HistoryDetailComponent\\HistoryDetailComponent.js",["181","182","183","184","185","186"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TMDB_API_KEY } from '../../key/key';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './HistoryDetailStyle.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ScrollToTop from '../scrollToTop';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useWindowSize } from '@react-hook/window-size';\nimport Confetti from 'confetti-react';\n\nconst Cards = () => {\n  console.log('started');\n  init();\n  function init() {\n    if (document.querySelector('.cards_carousal')) {\n      let cards = document.querySelector('.cards_carousal');\n      cards.addEventListener('click', clicked, false);\n      document.querySelectorAll('.cards_carousal .card_co')[1].click();\n    }\n  }\n\n  function clicked(e) {\n    let card = e.target;\n    if (card.getAttribute('data-card')) {\n      rearrange(card.getAttribute('data-card'));\n    }\n  }\n\n  function rearrange(card) {\n    let cards = document.querySelectorAll('.cards_carousal .card_co');\n    for (let n = 0; n < cards.length; n++) {\n      cards[n].classList.remove('card--left');\n      cards[n].classList.remove('card--center');\n      cards[n].classList.remove('card--right');\n    }\n    cards[card].classList.add('card--center');\n    if (card == 0) {\n      cards[2].classList.add('card--left');\n      cards[1].classList.add('card--right');\n    }\n    if (card == 1) {\n      cards[0].classList.add('card--left');\n      cards[2].classList.add('card--right');\n    }\n    if (card == 2) {\n      cards[1].classList.add('card--left');\n      cards[0].classList.add('card--right');\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    alignSelf: 'center',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    margin: 0,\n    width: '60%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: '20%',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n  },\n  inputRoot: {\n    color: 'inherit',\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    color: 'white',\n\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '70%',\n    [theme.breakpoints.up('sm')]: {\n      width: '50ch',\n      '&:focus': {\n        width: '60ch',\n      },\n    },\n  },\n  paper: {\n    // padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 200,\n\n    display: 'flex',\n    flexDirection: 'row',\n  },\n}));\n\nfunction RenderCard({ r }) {\n  let x = r.rank - 1;\n  return (\n    <>\n      <div className='card_co fill-blue' data-card={x}>\n        <div className='card__icon'>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${r.poster_path}`}\n            alt='Cards Image'\n            className='card--image'\n          />\n        </div>\n        <div className='card__detail'>\n          <h1>\n            <span className='star'>\n              <FontAwesomeIcon\n                icon={faStar}\n                color='#FFD700'\n                size='2x'\n              ></FontAwesomeIcon>\n            </span>\n\n            <span className='ranky'>{r.rank}</span>\n          </h1>\n\n          <h1>{r.title}</h1>\n          <h1>Votes : {r.votes}</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst HistoryDetailComponent = () => {\n  const user = useSelector(state => state.user);\n  const { contest_id } = useParams();\n  const [moviedetail, setmoviedetail] = useState([]);\n  const [contest, setcontest] = useState({});\n  const classes = useStyles();\n  const [width, height] = useWindowSize();\n\n  useEffect(() => {\n    if (user.history) {\n      for (let i = 0; i < user.history.length; i++) {\n        if (user.history[i].contestid === contest_id) {\n          setcontest(user.history[i]);\n          break;\n        }\n      }\n    }\n  }, [user.history, contest_id]);\n\n  useEffect(() => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  useEffect(() => {\n    if (contest && contest.Movies)\n      fetchData().then(arr => {\n        setmoviedetail(arr);\n      });\n  }, [contest]);\n  useEffect(() => {\n    Cards();\n  });\n  async function fetchData() {\n    let arr = [];\n    for (let i = 0; i < contest.Movies.length; i++) {\n      let element = contest.Movies[i];\n      let res = await axios(\n        `https://api.themoviedb.org/3/movie/${element.movieId}?api_key=${TMDB_API_KEY}`\n      );\n      let x = res.data;\n      arr.push({ ...x, rank: element.rank, votes: element.votes });\n      if (i === contest.Movies.length - 1) return arr;\n    }\n  }\n\n  if (user.isLoading)\n    return (\n      <div className='wrapper3'>\n        <CircularProgress\n          style={{ marginTop: '25vw' }}\n          color='secondary'\n        ></CircularProgress>\n      </div>\n    );\n  return (\n    <div className='wrapper3'>\n      <div style={{ height: '100vh' }}>\n        <Confetti\n          width={width}\n          height={height}\n          style={{ zIndex: '10' }}\n          numberOfPieces={300}\n        />\n        <div className='head_det'>\n          <h1>Winners of {contest.Name}</h1>\n        </div>\n        {moviedetail.length !== 0 ? (\n          <div className='cards_carousal'>\n            {moviedetail.slice(0, 3).map(resul => (\n              <RenderCard key={resul.id} r={resul} />\n            ))}\n          </div>\n        ) : (\n          <CircularProgress\n            style={{ marginTop: '15vw' }}\n            color='secondary'\n          ></CircularProgress>\n        )}\n      </div>\n      <div className='wrapper_history1'>\n        <div className='list'>\n          <div className='list__header'>\n            <h1>Standings</h1>\n          </div>\n          <div className='list__body'>\n            <table className='list__table' id='list-table'>\n              <tr className='header_row'>\n                <th className='list__cell'>Rank</th>\n                <th className='list__cell'>Movie</th>\n                <th className='list__cell'>Genre</th>\n                <th className='list__cell'>Votes</th>\n                <th class='list__cell'>Explore</th>\n              </tr>\n\n              {moviedetail.length !== 0 ? (\n                moviedetail.map(resul => (\n                  <tr className='list__row'>\n                    <td className='list__cell'>\n                      <span className='list__value'>{resul.rank}</span>\n                    </td>\n                    <td className='list__cell'>\n                      <span className='list__value'>{resul.title}</span>\n                    </td>\n                    <td className='list__cell'>\n                      {resul.genres.slice(0, 1).map(genre => {\n                        return <span> {genre.name} </span>;\n                      })}\n                    </td>\n\n                    <td className='list__cell'>\n                      <span className='list__value'>{resul.votes}</span>\n                    </td>\n                    <td className='list__cell'>\n                      <Link to={`/movie/${resul.id}`}>\n                        <span class='list__value'>\n                          <FontAwesomeIcon icon={faArrowCircleRight} />\n                        </span>\n                      </Link>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <p style={{ color: 'white' }}> Nothing Here </p>\n              )}\n            </table>\n          </div>\n        </div>\n      </div>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default HistoryDetailComponent;\n","F:\\cinecup\\src\\Components\\MoviePageComponent\\MoviePageComponent.js",["187","188","189","190","191","192","193","194","195","196","197"],"F:\\cinecup\\src\\Components\\LeaderboardPageComponent\\LeaderboardPageComponent.js",["198","199","200","201"],"F:\\cinecup\\src\\Components\\DashboardPageComponent\\DashboardPageComponent.js",["202","203","204","205","206","207","208","209","210","211"],"import React, { useState, useEffect } from 'react';\r\nimport './DashboardStyle.css';\r\nimport ScrollToTop from '../scrollToTop';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { remove_nominate } from '../../action/user_actions';\r\nimport { TMDB_API_KEY } from '../../key/key';\r\nimport axios from 'axios';\r\nimport { Button } from '@material-ui/core';\r\nimport Img2 from '../../icons/Asset 1@2x.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ShareButton from '../shareButton';\r\nimport firebase from 'firebase';\r\nimport Swal from 'sweetalert2';\r\nimport Grid from '@material-ui/core/Grid';\r\nfunction DashboardPageComponent() {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n  const [result, setresult] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [reviewDetail, setreviewDetail] = useState([]);\r\n\r\n  async function getMovieDetails(obj) {\r\n    let querySnapshot = obj.docs;\r\n    let arr = [];\r\n    for (let i = 0; i < querySnapshot.length; i++) {\r\n      let doc = querySnapshot[i];\r\n      console.log(doc);\r\n      try {\r\n        console.log(doc.data().mid);\r\n        let res = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${\r\n            doc.data().mid\r\n          }?api_key=${TMDB_API_KEY}`\r\n        );\r\n        arr.push({\r\n          ...res.data,\r\n          review: doc.data().review,\r\n          rating: doc.data().rating,\r\n          reviewID: doc.id,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n  useEffect(() => {\r\n    if (user.user && user.user.Email) {\r\n      const db = firebase.firestore();\r\n      db.collection('reviews')\r\n        .where('uid', '==', user.user.Email)\r\n        .get()\r\n        .then(async function (querySnapshot) {\r\n          let arr = [];\r\n          arr = await getMovieDetails(querySnapshot);\r\n          console.log(arr);\r\n          setreviewDetail(arr);\r\n        })\r\n        .catch(function (error) {\r\n          console.log('Error getting documents: ', error);\r\n        });\r\n    }\r\n  }, [user.isLoggedIn]);\r\n\r\n  const deleteReview = async (e, x) => {\r\n    e.preventDefault();\r\n    const db = firebase.firestore();\r\n    let arr = reviewDetail.filter(element => element !== x);\r\n    db.collection('reviews')\r\n      .doc(x.reviewID)\r\n      .delete()\r\n      .then(function () {\r\n        setreviewDetail(arr);\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  };\r\n  // ================================= EDIT Review ====================================\r\n  async function editReview(x, newreview, newrating) {\r\n    const db = firebase.firestore();\r\n    let arr = reviewDetail.map(element => {\r\n      if (element === x)\r\n        return { ...element, review: newreview, rating: newrating };\r\n      return element;\r\n    });\r\n    try {\r\n      let response = await db\r\n        .collection('reviews')\r\n        .doc(x.reviewID)\r\n        .update({ review: newreview, rating: newrating });\r\n      setreviewDetail(arr);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n  const EditReviewAlert = async (e, x) => {\r\n    e.preventDefault();\r\n    Swal.mixin({\r\n      input: 'text',\r\n      confirmButtonText: 'Next &rarr;',\r\n      showCancelButton: true,\r\n      progressSteps: ['1', '2'],\r\n    })\r\n      .queue([\r\n        {\r\n          title: 'Edit Your Rating',\r\n          input: 'range',\r\n          inputLabel: 'New Rating',\r\n          inputAttributes: {\r\n            min: 0.5,\r\n            max: 5,\r\n            step: 0.5,\r\n          },\r\n          inputValue: 2.5,\r\n        },\r\n        {\r\n          title: 'Edit Your Review',\r\n          input: 'textarea',\r\n          inputLabel: 'New Review',\r\n          inputValue: x.review,\r\n          inputPlaceholder: 'Type your message here...',\r\n          inputAttributes: {\r\n            'aria-label': 'Type your message here',\r\n          },\r\n          showCancelButton: true,\r\n        },\r\n      ])\r\n      .then(async result => {\r\n        if (result.value) {\r\n          console.log(result.value);\r\n          let res = await editReview(x, result.value[1], result.value[0]);\r\n          console.log(res);\r\n          if (res) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Review Updated Successfully',\r\n              confirmButtonText: 'OK',\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Some Error Occured',\r\n              confirmButtonText: 'OK',\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n  let nominations;\r\n  if (user.isLoggedIn) {\r\n    nominations = user.user.Nominations.length;\r\n  } else {\r\n    nominations = 10;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user.error || nominations === 5 || user.successmsg) {\r\n      setOpen(true);\r\n    }\r\n  }, [user, nominations]);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const useSnackbarStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  //======================================Fetching data from internet ===========================\r\n  async function fetchData() {\r\n    let arr = [];\r\n    for (let i = 0; i < user.user.Nominations.length; i++) {\r\n      let element = user.user.Nominations[i];\r\n      let res = await axios(\r\n        `https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`\r\n      );\r\n      let x = res.data;\r\n      arr.push(x);\r\n      if (i === user.user.Nominations.length - 1) return arr;\r\n    }\r\n  }\r\n  //=========================================== Render Card =========================================\r\n\r\n  function RenderCard({ r }) {\r\n    const Remove_Nominate = e => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        Email: user.user.Email,\r\n        movieId: r.id,\r\n      };\r\n      console.log(dataToSubmit);\r\n      dispatch(remove_nominate(dataToSubmit));\r\n      let array = result;\r\n      let cardIndex = array.indexOf(r);\r\n      if (cardIndex !== -1) {\r\n        array.splice(cardIndex, 1);\r\n        setresult(array);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className='card_s'>\r\n        <div\r\n          className='front_s'\r\n          style={{\r\n            backgroundImage:\r\n              'url(' + `https://image.tmdb.org/t/p/w500/${r.poster_path}` + ')',\r\n          }}\r\n        ></div>\r\n        <div className='back_s'>\r\n          <div style={{ display: 'flex', flexDirection: 'column ' }}>\r\n            <div>\r\n              <h2>{r.title}</h2>\r\n              <h3>{r.release_date}</h3>\r\n              <Rating\r\n                precision='0.5'\r\n                name='read-only'\r\n                value={r.vote_average / 2}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                textAlign: 'center',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Link to={`/movie/${r.id}`}>\r\n                <Button\r\n                  className='button_s'\r\n                  variant='outlined'\r\n                  color='secondary'\r\n                  style={{ marginBottom: 10 }}\r\n                >\r\n                  Explore\r\n                </Button>\r\n              </Link>\r\n              <Button\r\n                className='button_s'\r\n                style={{ marginBottom: 10 }}\r\n                variant='outlined'\r\n                color='primary'\r\n                onClick={e => {\r\n                  Remove_Nominate(e);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n              <div className='share_but_s'>\r\n                <ShareButton\r\n                  url={`https://cinecup-9b0ac.web.app/movie/${r.id}`}\r\n                  image={`https://image.tmdb.org/t/p/w500/${r.poster_path}`}\r\n                  title={`${r.title} - ${r.overview} \r\n            Check out the trailer on this page`}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }, []);\r\n  // ===================================================================================================\r\n  useEffect(() => {\r\n    if (user.isLoggedIn) {\r\n      if (user.user && user.user.Nominations)\r\n        fetchData().then(arr => {\r\n          setresult(arr);\r\n        });\r\n      console.log('Render Card Chala');\r\n      console.log(result);\r\n    }\r\n  }, [user.isLoggedIn]);\r\n\r\n  // Main Return from this component\r\n  if (user.isLoading || !user.isLoggedIn)\r\n    return (\r\n      <CircularProgress\r\n        style={{ marginTop: '25vw' }}\r\n        color='secondary'\r\n      ></CircularProgress>\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ marginTop: 100 }}>\r\n        <h1>Your Nominations</h1>\r\n      </div>\r\n      <main>\r\n        <section className='wrapper1'>\r\n          {result && result.length !== 0 ? (\r\n            result.map(resul => <RenderCard key={resul.id} r={resul} />)\r\n          ) : (\r\n            <div className='results'>\r\n              <img src={Img2} className='noresults' />\r\n              <h3>No Movies Nominated</h3>\r\n            </div>\r\n          )}\r\n        </section>\r\n        {user.error ? (\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity='error'>\r\n              {`${user.error}`}\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : user.successmsg ? (\r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity='success'>\r\n              {`${user.successmsg}`}\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <div className='users_reviews'>\r\n          <h1>Reviews</h1>\r\n\r\n          {reviewDetail.length ? (\r\n            reviewDetail.map(x => {\r\n              return (\r\n                <Grid container spacing={1} className='user_reviewed'>\r\n                  <Grid item xs={12} md={3}>\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w500${x.poster_path}`}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={6} className='reviewed'>\r\n                    <h2>{x.title}</h2>\r\n                    <Rating precision='0.5' value={x.rating} readOnly />\r\n                    <h3 className='user_review1'>\"{x.review}\"</h3>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Button\r\n                      variant='outlined'\r\n                      color='primary'\r\n                      onClick={e => {\r\n                        EditReviewAlert(e, x);\r\n                      }}\r\n                      style={{ margin: 10 }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant='outlined'\r\n                      color='secondary'\r\n                      onClick={e => {\r\n                        deleteReview(e, x);\r\n                      }}\r\n                      style={{ margin: 10 }}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className='results'>\r\n              <img src={Img2} className='noresults' />\r\n              <h3>No movie reviewed yet.</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <ScrollToTop />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DashboardPageComponent;\r\n","F:\\cinecup\\src\\Components\\SignUpPageComponent\\SignUpPageComponent.js",["212","213","214","215","216"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\n// redux\nimport { register } from '../../action/user_actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '80px',\n    height: '80vh',\n    backgroundColor: 'rgb(0, 18, 34)',\n  },\n  image: {\n    backgroundImage:\n      'url(https://image.freepik.com/free-vector/account-concept-illustration_114360-399.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '80%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useSnackbarStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction SignUpPageComponent() {\n  const classes = useStyles();\n\n  const user = useSelector(state => state.user);\n\n  const [open, setOpen] = React.useState(false);\n\n  const [firstname, setfirstname] = useState('');\n  const [lastname, setlastname] = useState('');\n  const [email, setemail] = useState('');\n  const [profilepic, setprofilepic] = useState(null);\n  const [password, setpassword] = useState('');\n  const [firstnameError, setfirstnameError] = useState('');\n  const [lastnameError, setlastnameError] = useState('');\n  const [emailError, setemailError] = useState('');\n  const [passwordError, setpasswordError] = useState('');\n  const [altfirstname, setaltfirstname] = useState(false);\n  const [altlastname, setaltlastname] = useState(false);\n  const [altemail, setaltemail] = useState(false);\n  const [altpassword, setaltpassword] = useState(false);\n  const [disabledSubmit, setdisabledSubmit] = useState(true);\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n  }\n\n  useEffect(() => {\n    if (user.error || user.successmsg) {\n      setOpen(true);\n    }\n  }, [user]);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (altfirstname && firstname.length < 3)\n      setfirstnameError('Firstname must be more than 2 characters');\n    else setfirstnameError('');\n  }, [altfirstname, firstname]);\n\n  useEffect(() => {\n    if (altlastname && lastname.length < 3)\n      setlastnameError('Lastname must be more than 2 characters');\n    else setlastnameError('');\n  }, [altlastname, lastname]);\n\n  useEffect(() => {\n    if (\n      altemail &&\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        email\n      )\n    )\n      setemailError('Invalid Email Address');\n    else setemailError('');\n  }, [altemail, email]);\n\n  useEffect(() => {\n    if (altpassword && password.length < 6)\n      setpasswordError('Password must have more than 5 characters');\n    else setpasswordError('');\n  }, [altpassword, password]);\n\n  useEffect(() => {\n    if (\n      !firstnameError &&\n      !lastnameError &&\n      !emailError &&\n      !passwordError &&\n      firstname &&\n      lastname &&\n      email &&\n      password\n    )\n      setdisabledSubmit(false);\n    else setdisabledSubmit(true);\n  }, [\n    firstnameError,\n    lastnameError,\n    passwordError,\n    emailError,\n    firstname,\n    lastname,\n    email,\n    password,\n  ]);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setprofilepic(e.target.files[0]);\n    }\n  };\n\n  // redux\n  const dispatch = useDispatch();\n  const signUp = e => {\n    e.preventDefault();\n    const dataToSubmit = {\n      firstname,\n      lastname,\n      email,\n      password,\n      profilepic,\n    };\n    console.log(dataToSubmit);\n    dispatch(register(dataToSubmit));\n  };\n\n  if (user.isLoading)\n    return (\n      <CircularProgress\n        style={{ marginTop: '25vw' }}\n        color='secondary'\n      ></CircularProgress>\n    );\n  return (\n    <Grid container component='main' className='login-root'>\n      <Grid item xs={false} sm={4} md={6} className='signup-image' />\n      <Grid item xs={12} sm={8} md={6}>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign up\n          </Typography>\n          <form className={classes.form} Validate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  error={firstnameError}\n                  helperText={firstnameError}\n                  autoComplete='fname'\n                  name='firstName'\n                  variant='outlined'\n                  required\n                  fullWidth\n                  id='firstName'\n                  label='First Name'\n                  value={firstname}\n                  onChange={e => {\n                    setfirstname(e.target.value);\n                    setaltfirstname(true);\n                  }}\n                  autoFocus\n                  InputProps={{ className: 'voting_text' }}\n                  InputLabelProps={{\n                    className: 'voting_text',\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  error={lastnameError}\n                  helperText={lastnameError}\n                  variant='outlined'\n                  required\n                  fullWidth\n                  id='lastName'\n                  label='Last Name'\n                  name='lastName'\n                  autoComplete='lname'\n                  value={lastname}\n                  onChange={e => {\n                    setlastname(e.target.value);\n                    setaltlastname(true);\n                  }}\n                  InputProps={{ className: 'voting_text' }}\n                  InputLabelProps={{\n                    className: 'voting_text',\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={emailError}\n                  helperText={emailError}\n                  variant='outlined'\n                  required\n                  fullWidth\n                  id='email'\n                  label='Email Address'\n                  name='email'\n                  autoComplete='email'\n                  value={email}\n                  onChange={e => {\n                    setemail(e.target.value);\n                    setaltemail(true);\n                  }}\n                  InputProps={{ className: 'voting_text' }}\n                  InputLabelProps={{\n                    className: 'voting_text',\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={passwordError}\n                  helperText={passwordError}\n                  variant='outlined'\n                  required\n                  fullWidth\n                  name='password'\n                  label='Password'\n                  type='password'\n                  id='password'\n                  autoComplete='current-password'\n                  value={password}\n                  onChange={e => {\n                    setpassword(e.target.value);\n                    setaltpassword(true);\n                  }}\n                  InputProps={{ className: 'voting_text' }}\n                  InputLabelProps={{\n                    className: 'voting_text',\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <input\n                  type='file'\n                  onChange={e => {\n                    handleChange(e);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={signUp}\n              disabled={disabledSubmit}\n            >\n              Sign Up\n            </Button>\n            {user.error ? (\n              <Snackbar\n                open={open}\n                autoHideDuration={10000}\n                onClose={handleClose}\n              >\n                <Alert onClose={handleClose} severity='error'>\n                  {`${user.error}`}\n                </Alert>\n              </Snackbar>\n            ) : user.successmsg ? (\n              <Snackbar\n                open={open}\n                autoHideDuration={10000}\n                onClose={handleClose}\n              >\n                <Alert onClose={handleClose} severity='success'>\n                  {`${user.successmsg}`}\n                </Alert>\n              </Snackbar>\n            ) : (\n              <div></div>\n            )}\n            <Grid container justify='flex-end'>\n              <Grid item xs={12}>\n                <Link to='/login' variant='body2'>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SignUpPageComponent;\n","F:\\cinecup\\src\\Components\\AdminDashboardComponent\\AdminDashboardComponent.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect } from 'react';\r\nimport './AdminDashboardStyle.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TMDB_API_KEY } from '../../key/key';\r\nimport axios from 'axios';\r\nimport {\r\n  removeBlacklistedMovie,\r\n  startVoting,\r\n  stopVoting,\r\n  removeAnnouncement,\r\n  addAnnouncement,\r\n} from '../../action/movie_actions';\r\nimport { Button } from '@material-ui/core';\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport { Link } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport firebase from 'firebase';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShareButton from '../shareButton';\r\nimport swal from 'sweetalert';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Img2 from '../../icons/Asset 1@2x.png';\r\nimport ScrollToTop from '../scrollToTop';\r\nimport { Hidden } from '@material-ui/core';\r\nconst useStyles = makeStyles(theme => ({\r\n  disabledButton: {\r\n    backgroundColor: 'red',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    alignSelf: 'center',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    margin: 0,\r\n    width: '100%',\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    backgroundColor: '#ffffff',\r\n    alignSelf: 'center',\r\n    width: '80%',\r\n    borderRadius: 5,\r\n  },\r\n  inputInput: {\r\n    color: 'black',\r\n\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    maxWidth: 600,\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: 200,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n}));\r\n\r\nconst AdminDashboardComponent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n  console.log(user);\r\n  const [result, setresult] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user.error || user.successmsg) {\r\n      setOpen(true);\r\n    }\r\n  }, [user, user.blacklist]);\r\n\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }, []);\r\n  // ======================================= ui ================================\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const useSnackbarStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  //======================================Fetching data from internet ===========================\r\n\r\n  async function fetchData() {\r\n    let arr = [];\r\n    for (let i = 0; i < user.blacklist.length; i++) {\r\n      let element = user.blacklist[i];\r\n      let res = await axios(\r\n        `https://api.themoviedb.org/3/movie/${element}?api_key=${TMDB_API_KEY}`\r\n      );\r\n      let x = res.data;\r\n      arr.push(x);\r\n      if (i === user.blacklist.length - 1) return arr;\r\n    }\r\n  }\r\n  //=========================================== Render Card =========================================\r\n\r\n  function RenderCard({ r }) {\r\n    const RemoveFromBlackList = e => {\r\n      e.preventDefault();\r\n      const dataToSubmit = {\r\n        movieId: r.id,\r\n      };\r\n      dispatch(removeBlacklistedMovie(dataToSubmit));\r\n      let array = result;\r\n      let cardIndex = array.indexOf(r);\r\n      if (cardIndex !== -1) {\r\n        array.splice(cardIndex, 1);\r\n        setresult(array);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className='card_s'>\r\n        <div\r\n          className='front_s'\r\n          style={{\r\n            backgroundImage:\r\n              'url(' + `https://image.tmdb.org/t/p/w500/${r.poster_path}` + ')',\r\n          }}\r\n        ></div>\r\n        <div className='back_s'>\r\n          <div style={{ display: 'flex', flexDirection: 'column ' }}>\r\n            <div>\r\n              <h2>{r.title}</h2>\r\n              <h3>{r.release_date}</h3>\r\n              <Rating\r\n                precision='0.5'\r\n                name='read-only'\r\n                value={r.vote_average / 2}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                textAlign: 'center',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Link to={`/movie/${r.id}`}>\r\n                <Button\r\n                  className='button_s'\r\n                  variant='outlined'\r\n                  color='secondary'\r\n                  style={{ marginBottom: 10 }}\r\n                >\r\n                  Explore\r\n                </Button>\r\n              </Link>\r\n              <Button\r\n                className='button_s'\r\n                style={{ marginBottom: 10 }}\r\n                variant='outlined'\r\n                color='primary'\r\n                onClick={e => {\r\n                  RemoveFromBlackList(e);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n              <div className='share_but_s'>\r\n                <ShareButton\r\n                  url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\r\n                  image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n                  title={`${result.title} - ${result.overview} \r\n            Check out the trailer on this page`}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // ===================================================================================================\r\n  useEffect(() => {\r\n    if (user.isLoggedIn && user.blacklist) {\r\n      console.log('Chala');\r\n      fetchData().then(arr => {\r\n        console.log('Ohh ', arr);\r\n        setresult(arr);\r\n      });\r\n    }\r\n  }, [user.isLoggedIn]);\r\n\r\n  // ======================== Fetching other users =================================\r\n  const [allusers, setallusers] = useState([]);\r\n  const [alladmin, setalladmin] = useState([]);\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    let unsubscribe = db\r\n      .collection('users')\r\n      .onSnapshot(function (querySnapshot) {\r\n        let arr = [];\r\n        let arr1 = [];\r\n        querySnapshot.forEach(doc => {\r\n          if (doc.data().IsAdmin) arr1.push(doc.data());\r\n          else arr.push(doc.data());\r\n        });\r\n        setallusers(arr);\r\n        setalladmin(arr1);\r\n      });\r\n  }, []);\r\n\r\n  function makeAdminAlert(name, emailid, e) {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: `${name} (${emailid}) will become an admin and, he/she will have the rights to remove you from admin.`,\r\n      icon: 'warning',\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then(isConfirm => {\r\n      if (isConfirm) {\r\n        makeAdmin(name, emailid, e);\r\n      }\r\n    });\r\n  }\r\n\r\n  function makeAdmin(name, emailid, e) {\r\n    e.preventDefault();\r\n    const db = firebase.firestore();\r\n    db.collection('users').doc(emailid).update({ IsAdmin: true });\r\n  }\r\n\r\n  function removeFromAdmin(emailid, e) {\r\n    e.preventDefault();\r\n    const db = firebase.firestore();\r\n    db.collection('users').doc(emailid).update({ IsAdmin: false });\r\n  }\r\n\r\n  // ========================== Start and Stop Voting =========================\r\n  const [name, setname] = useState('');\r\n  const [announcement, setannouncement] = useState('');\r\n  const [nameError, setnameError] = useState('');\r\n  const [announcementError, setannouncementError] = useState('');\r\n  const [altname, setaltname] = useState(false);\r\n  const [altannouncement, setaltannouncement] = useState(false);\r\n  const [disabledSubmit, setdisabledSubmit] = useState(true);\r\n  const [disabledAnnounce, setdisabledAnnounce] = useState(true);\r\n  useEffect(() => {\r\n    if (altname && name.length < 3)\r\n      setnameError('name must be more than 2 characters');\r\n    else setnameError('');\r\n  }, [altname, name]);\r\n\r\n  useEffect(() => {\r\n    if (nameError) setdisabledSubmit(true);\r\n    else if (altname) setdisabledSubmit(false);\r\n  }, [nameError, altname]);\r\n\r\n  useEffect(() => {\r\n    if (announcementError) setdisabledAnnounce(true);\r\n    else if (altannouncement) setdisabledAnnounce(false);\r\n  }, [announcementError, altannouncement]);\r\n\r\n  useEffect(() => {\r\n    if (altannouncement && announcement.length < 3)\r\n      setannouncementError('Announcement must have more than 2 characters');\r\n    else setannouncementError('');\r\n  }, [altannouncement, announcement]);\r\n\r\n  const startAlert = e => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: ` Voting for ${name} will start now.`,\r\n      icon: 'warning',\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then(isConfirm => {\r\n      if (isConfirm) {\r\n        start(e);\r\n      }\r\n    });\r\n  };\r\n\r\n  const start = e => {\r\n    e.preventDefault();\r\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today = new Date();\r\n    dispatch(\r\n      startVoting({\r\n        Name: name,\r\n        Start: today.toLocaleDateString('en-US', options),\r\n      })\r\n    );\r\n  };\r\n\r\n  const stopAlert = e => {\r\n    e.preventDefault();\r\n    swal({\r\n      title: 'Are you sure ?',\r\n      text: `Contest will end now.`,\r\n      icon: 'warning',\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then(isConfirm => {\r\n      if (isConfirm) {\r\n        stop(e);\r\n      }\r\n    });\r\n  };\r\n  const stop = e => {\r\n    e.preventDefault();\r\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    var today = new Date();\r\n    dispatch(stopVoting({ End: today.toLocaleDateString('en-US', options) }));\r\n  };\r\n  const removeannouncement = (e, element) => {\r\n    e.preventDefault();\r\n    dispatch(removeAnnouncement(element));\r\n  };\r\n\r\n  const addannouncement = e => {\r\n    e.preventDefault();\r\n    dispatch(addAnnouncement(announcement));\r\n    setannouncement('');\r\n  };\r\n\r\n  // =========================== Main Return from this component ==================================\r\n  if (user.isLoading)\r\n    return (\r\n      <CircularProgress\r\n        style={{ marginTop: '25vw' }}\r\n        color='secondary'\r\n      ></CircularProgress>\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      <main style={{ marginTop: '100px' }}>\r\n        {user.announcement ? (\r\n          <>\r\n            {user.announcement.map(element => (\r\n              <Grid container style={{ marginTop: '10px' }}>\r\n                <Grid item xs={12} md={9}>\r\n                  <Alert variant='filled' severity='success'>\r\n                    {element}\r\n                  </Alert>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Button\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    small\r\n                    onClick={e => removeannouncement(e, element)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n            <form Validate className='voting' style={{ marginBottom: 20 }}>\r\n              <TextField\r\n                error={announcementError}\r\n                helperText={announcementError}\r\n                variant='outlined'\r\n                margin='normal'\r\n                required\r\n                fullWidth\r\n                id='Name'\r\n                label='Announce'\r\n                name='announce'\r\n                autoComplete='name'\r\n                autoFocus\r\n                value={announcement}\r\n                onChange={e => {\r\n                  setannouncement(e.target.value);\r\n                  setaltannouncement(true);\r\n                }}\r\n                InputProps={{ className: 'voting_text' }}\r\n                InputLabelProps={{\r\n                  className: 'voting_text',\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                type='submit'\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={e => addannouncement(e)}\r\n                disabled={disabledAnnounce}\r\n                className='button1'\r\n              >\r\n                Announce\r\n              </Button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <form Validate className='voting'>\r\n            <TextField\r\n              error={announcementError}\r\n              helperText={announcementError}\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='Name'\r\n              label='Event'\r\n              name='event'\r\n              autoComplete='name'\r\n              autoFocus\r\n              value={announcement}\r\n              onChange={e => {\r\n                setannouncement(e.target.value);\r\n                setaltannouncement(true);\r\n              }}\r\n              InputProps={{ className: 'voting_text' }}\r\n              InputLabelProps={{\r\n                className: 'voting_text',\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={e => addannouncement(e)}\r\n              disabled={disabledAnnounce}\r\n              className='button1'\r\n            >\r\n              Announce\r\n            </Button>\r\n          </form>\r\n        )}\r\n        {!user.isVoting ? (\r\n          <form Validate className='voting'>\r\n            <TextField\r\n              error={nameError}\r\n              helperText={nameError}\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='Name'\r\n              label='Event'\r\n              name='event'\r\n              autoComplete='name'\r\n              autoFocus\r\n              value={name}\r\n              onChange={e => {\r\n                setname(e.target.value);\r\n                setaltname(true);\r\n              }}\r\n              InputProps={{ className: 'voting_text' }}\r\n              InputLabelProps={{\r\n                className: 'voting_text',\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={startAlert}\r\n              disabled={disabledSubmit}\r\n              className='button1'\r\n            >\r\n              Start Voting\r\n            </Button>\r\n          </form>\r\n        ) : (\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={stopAlert}\r\n          >\r\n            Stop Voting\r\n          </Button>\r\n        )}\r\n      </main>\r\n      <div style={{ marginTop: 100 }}>\r\n        <h1>BlackListed Movies</h1>\r\n      </div>\r\n      <main>\r\n        <section className='wrapper1'>\r\n          {result && result.length !== 0 ? (\r\n            result.map(resul => <RenderCard key={resul.id} r={resul} />)\r\n          ) : (\r\n            <div className='results'>\r\n              <img src={Img2} className='noresults' />\r\n              <h3>No Blacklisted movie</h3>\r\n            </div>\r\n          )}\r\n        </section>\r\n        {user.error ? (\r\n          <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity='error'>\r\n              {`${user.error}`}\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : user.successmsg ? (\r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity='success'>\r\n              {`${user.successmsg}`}\r\n            </Alert>\r\n          </Snackbar>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {/* Admin */}\r\n        <div style={{ marginTop: 100 }}>\r\n          <h1>All Administrators</h1>\r\n        </div>\r\n        <main>\r\n          {alladmin.length !== 0 ? (\r\n            <section className='wrapper1'>\r\n              {alladmin.map(admin => (\r\n                <React.Fragment className='profile-card'>\r\n                  <div\r\n                    class='our-team'\r\n                    style={{ width: '250px', height: '220px' }}\r\n                  >\r\n                    <div class='picture'>\r\n                      <img\r\n                        style={{ width: '130px', height: '130px' }}\r\n                        src={admin.ProfilePic}\r\n                      />\r\n                    </div>\r\n                    <div class='team-content'>\r\n                      <h3 class='name'>{admin.Name}</h3>\r\n                      <h4 class='title'>{admin.Email}</h4>\r\n                    </div>\r\n                    <ul class='social'>\r\n                      <Button\r\n                        variant='contained'\r\n                        style={{ width: '100%', backgroundColor: ' #1369ce' }}\r\n                        onClick={e => {\r\n                          removeFromAdmin(admin.Email, e);\r\n                        }}\r\n                        className='but1'\r\n                      >\r\n                        Dismiss From Admin\r\n                      </Button>\r\n                    </ul>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </section>\r\n          ) : (\r\n            <div className='results'>\r\n              <img src={Img2} className='noresults' />\r\n              <h3>No Admin users</h3>\r\n            </div>\r\n          )}\r\n        </main>\r\n        {/* Users */}\r\n      </main>\r\n      <div style={{ marginTop: 100, textAlign: 'center' }}>\r\n        <h1>All users</h1>\r\n      </div>\r\n      <main>\r\n        <Hidden mdDown>\r\n          <InputBase\r\n            placeholder='Search…'\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search', id: 'sear' }}\r\n            onChange={() => {\r\n              var all = document\r\n                .getElementById('users_card')\r\n                .getElementsByClassName('our-team');\r\n\r\n              console.log(all);\r\n              for (var i = 0; i < all.length; i++) {\r\n                var txtValue = all[i].innerText;\r\n                console.log(txtValue);\r\n                if (\r\n                  txtValue\r\n                    .toLowerCase()\r\n                    .includes(document.getElementById('sear').value)\r\n                ) {\r\n                  all[i].style.display = '';\r\n                } else {\r\n                  all[i].style.display = 'none';\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Hidden>\r\n        {allusers.length !== 0 ? (\r\n          <section className='wrapper1' id='users_card'>\r\n            {allusers.map(user => (\r\n              <React.Fragment className='profile-card'>\r\n                <div\r\n                  class='our-team'\r\n                  style={{ width: '250px', height: '220px' }}\r\n                >\r\n                  <div class='picture'>\r\n                    <img\r\n                      style={{ width: '130px', height: '130px' }}\r\n                      src={user.ProfilePic}\r\n                    />\r\n                  </div>\r\n                  <div class='team-content'>\r\n                    <h3 class='name'>{user.Name}</h3>\r\n                    <h4 class='title'>{user.Email}</h4>\r\n                  </div>\r\n                  <ul class='social'>\r\n                    <Button\r\n                      variant='contained'\r\n                      style={{ width: '100%', backgroundColor: ' #1369ce' }}\r\n                      onClick={e => {\r\n                        makeAdminAlert(user.Name, user.Email, e);\r\n                      }}\r\n                      className='but1'\r\n                    >\r\n                      Make Admin\r\n                    </Button>\r\n                  </ul>\r\n                </div>\r\n              </React.Fragment>\r\n            ))}\r\n          </section>\r\n        ) : (\r\n          <div className='results'>\r\n            <img src={Img2} className='noresults' />\r\n            <h3>No Users found</h3>\r\n          </div>\r\n        )}\r\n      </main>\r\n      <ScrollToTop />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardComponent;\r\n","F:\\cinecup\\src\\Components\\HistoryComponent\\HistoryComponent.js",["228","229"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './HistoryStyle.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Img2 from '../../icons/Asset 1@2x.png';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst HistoryComponent = () => {\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }, []);\r\n  const user = useSelector(state => state.user);\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      marginTop: 50,\r\n      minWidth: 275,\r\n      maxWidth: 300,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  if (user.isLoading)\r\n    return (\r\n      <CircularProgress\r\n        style={{ marginTop: '25vw' }}\r\n        color='secondary'\r\n      ></CircularProgress>\r\n    );\r\n  return (\r\n    <div>\r\n      <div class='wrapper_history'>\r\n        <div class='list'>\r\n          <div class='list__header'>\r\n            <h1>Previous Contests</h1>\r\n          </div>\r\n          {user.history && user.history.length ? (\r\n            <div class='list__body'>\r\n              <table class='list__table'>\r\n                <tr class='header_row'>\r\n                  <th class='list__cell'>S.no</th>\r\n                  <th class='list__cell'>Contest</th>\r\n                  <th class='list__cell'>Start date</th>\r\n                  <th class='list__cell'>End date</th>\r\n                  <th class='list__cell'>Link</th>\r\n                </tr>\r\n                {user.history.map((element, index) => {\r\n                  return (\r\n                    <tr class='list__row'>\r\n                      <td class='list__cell'>\r\n                        <span class='list__value'>{index + 1}</span>\r\n                      </td>\r\n                      <td class='list__cell'>\r\n                        <span class='list__value'>{`${element.Name}`}</span>\r\n                      </td>\r\n                      <td class='list__cell'>\r\n                        <span class='list__value'>{`${element.sDay}`}</span>\r\n                        <small class='list__label'>{`${element.sTime}`}</small>\r\n                      </td>\r\n                      <td class='list__cell'>\r\n                        <span class='list__value'>{`${element.eDay}`}</span>\r\n                        <small class='list__label'>{`${element.eTime}`}</small>\r\n                      </td>\r\n                      <td class='list__cell'>\r\n                        <Link\r\n                          to={`/history/${element.contestid}`}\r\n                          className='linky'\r\n                        >\r\n                          <span class='list__value'>\r\n                            <FontAwesomeIcon icon={faArrowCircleRight} />\r\n                          </span>\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className='results'>\r\n              <img src={Img2} className='noresults' />\r\n              <h3>No past contests</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryComponent;\r\n","F:\\cinecup\\src\\Components\\HeaderComponent\\HeaderComponent.js",["230","231","232","233","234","235"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { lightTheme, darkTheme } from '../../theme';\nimport { GlobalStyles } from '../../global';\n\nimport Toggle from '../Toggle';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Timeline from '@material-ui/icons/Timeline';\n\nimport { Hidden } from '@material-ui/core';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport List from '@material-ui/core/List';\nimport './HeaderStyle.css';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\n\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport HistoryIcon from '@material-ui/icons/History';\n\nimport Switch from '@material-ui/core/Switch';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../../action/user_actions';\n\nimport { ExitToAppRounded } from '@material-ui/icons';\nfunction HeaderComponent({ theme, toggleTheme, componentMounted }) {\n  const user = useSelector(state => state.user);\n  const User = useSelector(state => state.user.user);\n\n  const dispatch = useDispatch();\n  const Logout = () => {\n    dispatch(logout());\n  };\n\n  const useStyles = makeStyles(theme => ({\n    list: {\n      width: 300,\n      alignItems: 'center',\n    },\n\n    root: {\n      flexGrow: 1,\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n      color: 'white',\n    },\n    title: {\n      marginRight: theme.spacing(2),\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    Button1: {\n      marginRight: theme.spacing(2),\n    },\n    navText: {\n      fontSize: 20,\n      marginLeft: 5,\n    },\n  }));\n  const [state, setState] = React.useState(false);\n\n  const toggleDrawer = open => event => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState(open);\n  };\n\n  function TemporaryDrawer() {\n    const classes = useStyles();\n\n    return (\n      <div>\n        <React.Fragment>\n          <SwipeableDrawer\n            anchor='left'\n            open={state}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n          >\n            <div className='drawe'>\n              <div style={{ width: '100%', display: 'flex' }}>\n                <IconButton\n                  style={{ position: 'absolute', right: 0 }}\n                  onClick={toggleDrawer(false)}\n                >\n                  <CancelRoundedIcon color='secondary' />\n                </IconButton>\n              </div>\n              {user.isLoggedIn ? (\n                <div className='navbrand'>\n                  <img className='rounded' src={User.ProfilePic} />\n                  <h2 className='title title-medium'>{User.Name}</h2>\n                </div>\n              ) : (\n                <div className='navbrand'>\n                  <img\n                    className='rounded'\n                    src='https://icons.iconarchive.com/icons/custom-icon-design/flatastic-3/256/user-icon.png'\n                  />\n                  <h2 className='title title-medium'>Welcome Guest</h2>\n                </div>\n              )}\n              <List className={classes.list}>\n                <Link to='/'>\n                  <ListItem button key='Home' onClick={toggleDrawer(false)}>\n                    <ListItemIcon>\n                      {' '}\n                      <HomeRoundedIcon color='primary' />{' '}\n                    </ListItemIcon>\n                    <ListItemText primary='HOME' />\n                  </ListItem>\n                </Link>\n\n                <Link to='/leaderboard'>\n                  <ListItem\n                    button\n                    key='leaderboard'\n                    onClick={toggleDrawer(false)}\n                  >\n                    <ListItemIcon>\n                      {' '}\n                      <Timeline color='primary' />{' '}\n                    </ListItemIcon>\n                    <ListItemText primary='LEADERBOARD' />\n                  </ListItem>\n                </Link>\n\n                <Link to='/history'>\n                  <ListItem button key='history' onClick={toggleDrawer(false)}>\n                    <ListItemIcon>\n                      {' '}\n                      <HistoryIcon color='primary' />{' '}\n                    </ListItemIcon>\n                    <ListItemText primary='HISTORY' />\n                  </ListItem>\n                </Link>\n\n                <Link to='/Search'>\n                  <ListItem button key='Search' onClick={toggleDrawer(false)}>\n                    <ListItemIcon>\n                      {' '}\n                      <SearchRoundedIcon color='primary' />{' '}\n                    </ListItemIcon>\n                    <ListItemText primary='SEARCH' />\n                  </ListItem>\n                </Link>\n\n                <ListItem key='Dark Mode'>\n                  <ListItemIcon>\n                    {' '}\n                    <Brightness4Icon color='primary' />{' '}\n                  </ListItemIcon>\n                  <Toggle theme={theme} toggleTheme={toggleTheme} />\n                  {theme === 'light' ? 'Light' : 'Dark'}\n                </ListItem>\n\n                {user.isLoggedIn ? (\n                  <React.Fragment>\n                    <Link to='/dashboard'>\n                      <ListItem\n                        button\n                        key='Dashboard'\n                        onClick={toggleDrawer(false)}\n                      >\n                        <ListItemIcon>\n                          {' '}\n                          <DashboardRoundedIcon color='primary' />{' '}\n                        </ListItemIcon>\n                        <ListItemText primary='DASHBOARD' />\n                      </ListItem>\n                    </Link>\n                    {user.user.IsAdmin ? (\n                      <Link to='/admin'>\n                        <ListItem\n                          button\n                          key='Admin Dashboard'\n                          onClick={toggleDrawer(false)}\n                        >\n                          <ListItemIcon>\n                            {' '}\n                            <SupervisorAccountIcon color='primary' />{' '}\n                          </ListItemIcon>\n                          <ListItemText primary='ADMIN DASHBOARD' />\n                        </ListItem>\n                      </Link>\n                    ) : (\n                      <Link></Link>\n                    )}\n                    <ListItem\n                      button\n                      key='Logout'\n                      onClick={() => {\n                        toggleDrawer(false);\n                        Logout();\n                      }}\n                    >\n                      <ListItemIcon>\n                        {' '}\n                        <LockOpenRoundedIcon color='primary' />{' '}\n                      </ListItemIcon>\n                      <ListItemText primary='LOGOUT' />\n                    </ListItem>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    <Link to='/login'>\n                      <ListItem\n                        button\n                        key='Login'\n                        onClick={toggleDrawer(false)}\n                      >\n                        <ListItemIcon>\n                          {' '}\n                          <LockOpenRoundedIcon color='primary' />{' '}\n                        </ListItemIcon>\n                        <ListItemText primary='LOGIN' />\n                      </ListItem>\n                    </Link>\n\n                    <Link to='/signup'>\n                      <ListItem\n                        button\n                        key='Signup'\n                        onClick={toggleDrawer(false)}\n                      >\n                        <ListItemIcon>\n                          {' '}\n                          <PersonAddRoundedIcon color='primary' />{' '}\n                        </ListItemIcon>\n                        <ListItemText primary='SIGNUP' />\n                      </ListItem>\n                    </Link>\n                  </React.Fragment>\n                )}\n              </List>\n            </div>\n          </SwipeableDrawer>\n        </React.Fragment>\n      </div>\n    );\n  }\n\n  function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root}>\n        <AppBar position='fixed' className='navbar_h'>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='menu'\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' className={classes.title}>\n              CINECUP\n            </Typography>\n\n            <Hidden mdDown>\n              <div style={{ position: 'absolute', right: 0 }}>\n                <Link to='/'>\n                  <IconButton\n                    edge='start'\n                    className={classes.menuButton}\n                    color='inherit'\n                    aria-label='menu'\n                  >\n                    <HomeRoundedIcon fontSize='small' />\n                    <span className={classes.navText}>Home</span>\n                  </IconButton>\n                </Link>\n                <Link to='/leaderboard'>\n                  <IconButton\n                    edge='start'\n                    className={classes.menuButton}\n                    color='inherit'\n                    aria-label='menu'\n                  >\n                    <Timeline fontSize='small' />\n                    <span className={classes.navText}>LeaderBoard</span>\n                  </IconButton>\n                </Link>\n\n                <Link to='/history'>\n                  <IconButton\n                    edge='start'\n                    className={classes.menuButton}\n                    color='inherit'\n                    aria-label='menu'\n                  >\n                    <HistoryIcon fontSize='small' />\n                    <span className={classes.navText}>History</span>\n                  </IconButton>\n                </Link>\n\n                <Link to='/search'>\n                  <IconButton\n                    edge='start'\n                    className={classes.menuButton}\n                    color='inherit'\n                    aria-label='menu'\n                  >\n                    <SearchRoundedIcon fontSize='small' />\n                    <span className={classes.navText}>Search</span>\n                  </IconButton>\n                </Link>\n                {user.isLoggedIn ? (\n                  <React.Fragment>\n                    <Link to='/dashboard'>\n                      <IconButton\n                        edge='start'\n                        className={classes.menuButton}\n                        color='inherit'\n                        aria-label='menu'\n                      >\n                        <DashboardRoundedIcon fontSize='small' />\n                        <span className={classes.navText}>Dashboard</span>\n                      </IconButton>\n                    </Link>\n                    {user.user.IsAdmin ? (\n                      <Link to='/admin'>\n                        <IconButton\n                          edge='start'\n                          className={classes.menuButton}\n                          color='inherit'\n                          aria-label='menu'\n                        >\n                          <SupervisorAccountIcon fontSize='small' />\n                          <span className={classes.navText}>\n                            Admin Dashboard\n                          </span>\n                        </IconButton>\n                      </Link>\n                    ) : (\n                      <Link></Link>\n                    )}\n\n                    <IconButton\n                      edge='start'\n                      className={classes.menuButton}\n                      color='inherit'\n                      aria-label='menu'\n                      onClick={Logout}\n                    >\n                      <ExitToAppRounded fontSize='small' />\n                      <span className={classes.navText}>Logout</span>\n                    </IconButton>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    <Link to='/login'>\n                      <IconButton\n                        edge='start'\n                        className={classes.menuButton}\n                        color='inherit'\n                        aria-label='menu'\n                      >\n                        <LockOpenRoundedIcon fontSize='small' />\n                        <span className={classes.navText}>Login</span>\n                      </IconButton>\n                    </Link>\n                    <Link to='/signup'>\n                      <IconButton\n                        edge='start'\n                        className={classes.menuButton}\n                        color='inherit'\n                        aria-label='menu'\n                      >\n                        <PersonAddRoundedIcon fontSize='small' />\n                        <span className={classes.navText}>Signup</span>\n                      </IconButton>\n                    </Link>\n                  </React.Fragment>\n                )}\n              </div>\n            </Hidden>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n\n  if (user.isLoading) return <></>;\n  if (!componentMounted) {\n    return <div />;\n  }\n  return (\n    <>\n      <TemporaryDrawer />\n      <ButtonAppBar />\n    </>\n  );\n}\n\nexport default HeaderComponent;\n","F:\\cinecup\\src\\reducer\\user_reducer.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Search.js",["236","237","238"],"import React from 'react';\nimport './SearchPageStyle.css';\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\nimport { Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction Search({ handleInput }) {\n  const user = useSelector(state => state.user);\n  return (\n    <section className='searchbox-wrap'>\n      <input\n        type='text'\n        placeholder='Search for a movie...'\n        className='searchbox'\n        onChange={handleInput}\n        value={user.queryString}\n      />\n    </section>\n  );\n}\n\nexport default Search;\n","F:\\cinecup\\src\\action\\user_actions.js",["239","240","241","242","243","244","245","246","247","248"],"import firebase from 'firebase';\nimport {\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGOUT_USER_SUCCESS,\n  LOGOUT_USER_ERROR,\n  NOMINATE_MOVIE_ERROR,\n  NOMINATE_MOVIE_SUCCESS,\n  RESET_ERROR,\n  RESET_SUCCESS,\n  REMOVE_NOMINATE_MOVIE_ERROR,\n  REMOVE_NOMINATE_MOVIE_SUCCESS,\n  AUTH_USER_SUCCESS,\n  AUTH_USER_ERROR,\n} from './types';\n\n//============================================== Register =================================================\n\nexport const register = User => {\n  return async dispatch => {\n    dispatch({\n      type: REGISTER_USER_REQUEST,\n    });\n    const db = firebase.firestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(User.email, User.password)\n      .then(dataBeforeEmail => {\n        firebase.auth().onAuthStateChanged(user => {\n          user\n            .sendEmailVerification()\n            .then(dataAfterEmail => {\n              firebase.auth().onAuthStateChanged(async function (user) {\n                if (user) {\n                  // Sign up successful\n                  let image = await uploadImage(User);\n                  console.log(User.profilepic);\n                  console.log(user);\n                  db.collection('users')\n                    .doc(User.email)\n                    .set({\n                      Name: `${User.firstname} ${User.lastname}`,\n                      Email: User.email,\n                      IsAdmin: false,\n                      ProfilePic: image,\n                      Nominations: [],\n                    })\n                    .then(() => {\n                      dispatch({\n                        type: REGISTER_USER_SUCCESS,\n                        payload:\n                          'Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.',\n                      });\n                    })\n                    .catch(function (error) {\n                      console.error('Error writing document: ', error);\n                      dispatch({\n                        type: REGISTER_USER_ERROR,\n                        payload: 'Some Error Occured Try Again !!',\n                      });\n                    });\n                } else {\n                  // Signup failed\n                  dispatch({\n                    type: REGISTER_USER_ERROR,\n                    payload:\n                      \"Something went wrong, we couldn't create your account. Please try again.\",\n                  });\n                }\n              });\n            })\n            // Error in sending mail\n            .catch(error => {\n              console.log(error);\n              dispatch({\n                type: REGISTER_USER_ERROR,\n                payload:\n                  'Sorry We are unable to send Email Verification Link at this moment.',\n              });\n            });\n        });\n      })\n      // User Not Created Means Email Already Registered\n      .catch(error => {\n        console.log(error);\n        dispatch({\n          type: REGISTER_USER_ERROR,\n          payload: 'This Email is already registered. Kindly Login',\n        });\n      });\n  };\n};\n\nasync function uploadImage(User) {\n  if (User.profilepic !== null) {\n    try {\n      const storage = firebase.storage();\n      let snapshot = await storage\n        .ref(`images/${User.profilepic.name}`)\n        .put(User.profilepic);\n      console.log('Uploaded', snapshot.totalBytes, 'bytes.');\n      let url = await snapshot.ref.getDownloadURL();\n      console.log('File available at', url);\n      return url;\n    } catch (err) {\n      return 'https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png';\n    }\n  } else {\n    return 'https://icons.iconarchive.com/icons/icons8/android/256/Users-User-icon.png';\n  }\n}\n\n// =================================== Simple Login ===========================================\n\nexport const login = User => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_REQUEST,\n    });\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(User.email, User.password)\n      .then(user => {\n        if (firebase.auth().currentUser.emailVerified) {\n          dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: {\n              Name: user.Name,\n              Email: user.Email,\n              IsAdmin: user.IsAdmin,\n              ProfilePic: user.ProfilePic,\n              Nominations: user.Nominations,\n            },\n          });\n        } else {\n          firebase\n            .auth()\n            .signOut()\n            .then(function () {\n              dispatch({\n                type: LOGIN_USER_ERROR,\n                payload: 'Kindly Verify Your Email',\n              });\n            });\n        }\n      })\n      .catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        dispatch({\n          type: LOGIN_USER_ERROR,\n          payload: error.message,\n        });\n      });\n  };\n};\n\n// ============================================== Google Login ======================================\n\nexport const loginwithgoogle = () => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_REQUEST,\n    });\n    const db = firebase.firestore();\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        var docRef = db.collection('users').doc(user.email);\n        docRef\n          .get()\n          .then(function (doc) {\n            if (doc.exists) {\n              console.log('Already Registered !');\n              dispatch({\n                type: LOGIN_USER_SUCCESS,\n                payload: {\n                  Name: doc.data().Name,\n                  Email: doc.data().Email,\n                  IsAdmin: doc.data().IsAdmin,\n                  ProfilePic: doc.data().ProfilePic,\n                  Nominations: doc.data().Nominations,\n                },\n              });\n            } else {\n              // doc.data() will be undefined in this case\n              console.log('No such document!');\n              console.log('Not Already Registered !!!');\n              db.collection('users')\n                .doc(user.email)\n                .set({\n                  Name: user.displayName,\n                  Email: user.email,\n                  IsAdmin: false,\n                  ProfilePic: user.photoURL,\n                  Nominations: [],\n                })\n                .then(function () {\n                  console.log('Document successfully written!');\n                  dispatch({\n                    type: LOGIN_USER_SUCCESS,\n                    payload: {\n                      Name: user.displayName,\n                      Email: user.email,\n                      IsAdmin: false,\n                      ProfilePic: user.photoURL,\n                      Nominations: [],\n                    },\n                  });\n                })\n                .catch(function (error) {\n                  console.error('Error writing document: ', error);\n                  dispatch({\n                    type: LOGIN_USER_ERROR,\n                    payload: 'Some Error Occured Try Again !!',\n                  });\n                });\n              console.log(user);\n            }\n          })\n          .catch(function (error) {\n            console.log('Error getting documents: ', error);\n            dispatch({\n              type: LOGIN_USER_ERROR,\n              payload: 'Some Error Occured Try Again !!',\n            });\n          });\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n        return {\n          errorCode: errorCode,\n          errorMessage: errorMessage,\n        };\n      });\n  };\n};\n\n// ======================================= FaceBook Login =================================================\n\nexport const loginwithfacebook = () => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_REQUEST,\n      payload: '',\n    });\n    const db = firebase.firestore();\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        var docRef = db.collection('users').doc(user.email);\n        docRef\n          .get()\n          .then(function (doc) {\n            if (doc.exists) {\n              console.log('Already Registered !');\n              dispatch({\n                type: LOGIN_USER_SUCCESS,\n                payload: {\n                  Name: doc.data().Name,\n                  Email: doc.data().Email,\n                  IsAdmin: doc.data().IsAdmin,\n                  ProfilePic: doc.data().ProfilePic,\n                  Nominations: doc.data().Nominations,\n                },\n              });\n            } else {\n              // doc.data() will be undefined in this case\n              console.log('No such document!');\n              console.log('Not Already Registered !!!');\n              db.collection('users')\n                .doc(user.email)\n                .set({\n                  Name: user.displayName,\n                  Email: user.email,\n                  IsAdmin: false,\n                  ProfilePic: user.photoURL,\n                  Nominations: [],\n                })\n                .then(function () {\n                  console.log('Document successfully written!');\n                  dispatch({\n                    type: LOGIN_USER_SUCCESS,\n                    payload: {\n                      Name: user.displayName,\n                      Email: user.email,\n                      IsAdmin: false,\n                      ProfilePic: user.photoURL,\n                      Nominations: [],\n                    },\n                  });\n                })\n                .catch(function (error) {\n                  console.error('Error writing document: ', error);\n                  dispatch({\n                    type: LOGIN_USER_ERROR,\n                    payload: 'Some Error Occured Try Again !!',\n                  });\n                });\n              console.log(user);\n            }\n          })\n          .catch(function (error) {\n            console.log('Error getting documents: ', error);\n            dispatch({\n              type: LOGIN_USER_ERROR,\n              payload: 'Some Error Occured Try Again !!',\n            });\n          });\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  };\n};\n\n// ===================================================== Logout ================================================\n\nexport const logout = () => {\n  return async dispatch => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        dispatch({\n          type: LOGOUT_USER_SUCCESS,\n        });\n      })\n      .catch(function (error) {\n        // An error happened.\n        dispatch({\n          type: LOGOUT_USER_ERROR,\n        });\n      });\n  };\n};\n\n// ================================================= Auth ====================================================\nexport const auth = () => {\n  return async dispatch => {\n    console.log('Running Auth');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        const db = firebase.firestore();\n        var docRef = db.collection('users').doc(user.email);\n        docRef.get().then(function (doc) {\n          if (doc.exists && user.emailVerified) {\n            dispatch({\n              type: AUTH_USER_SUCCESS,\n              payload: {\n                Name: doc.data().Name,\n                Email: doc.data().Email,\n                IsAdmin: doc.data().IsAdmin,\n                ProfilePic: doc.data().ProfilePic,\n                Nominations: doc.data().Nominations,\n              },\n            });\n          } else {\n            dispatch({\n              type: AUTH_USER_ERROR,\n              payload: 'Kindly Verify Your Email',\n            });\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: '',\n        });\n      }\n    });\n  };\n};\n// ================================================= Nominate ==================================================\nexport const nominate = user => {\n  return async dispatch => {\n    const db = firebase.firestore();\n    var userRef = db.collection('users').doc(user.Email);\n    userRef\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          console.log(doc.data().Nominations.length);\n          console.log(doc.data().Nominations.includes(user.movieId.toString));\n          if (\n            doc.data().Nominations.length < 5 &&\n            !doc.data().Nominations.includes(user.movieId)\n          ) {\n            // Get a new write batch\n            var batch = db.batch();\n\n            var usersRef = db.collection('users').doc(user.Email);\n            var moviesRef = db\n              .collection('movies')\n              .doc(user.movieId.toString());\n            batch.set(\n              usersRef,\n              {\n                Nominations: firebase.firestore.FieldValue.arrayUnion(\n                  user.movieId\n                ),\n              },\n              { merge: true }\n            );\n            batch.set(\n              moviesRef,\n              {\n                MovieId: user.movieId.toString(),\n                Votes: firebase.firestore.FieldValue.increment(1),\n              },\n              { merge: true }\n            );\n\n            // Commit the batch\n            batch.commit().then(function () {\n              dispatch({\n                type: NOMINATE_MOVIE_SUCCESS,\n                payload: user.movieId,\n                successmsg: 'You have successfully nominated the movie.',\n              });\n            });\n          } else if (doc.data().Nominations.includes(user.movieId)) {\n            dispatch({\n              type: NOMINATE_MOVIE_ERROR,\n              payload: 'You have already nominated that movie',\n            });\n          } else {\n            dispatch({\n              type: NOMINATE_MOVIE_ERROR,\n              payload: 'You have already nominated 5 movies',\n            });\n          }\n        } else {\n          dispatch({\n            type: NOMINATE_MOVIE_ERROR,\n            payload: 'Some Error Occred. Better Luck Next Time !!',\n          });\n        }\n      })\n      .catch(function (error) {\n        dispatch({\n          type: NOMINATE_MOVIE_ERROR,\n          payload: `Some Error Occred. Try again !!`,\n        });\n      });\n  };\n};\n\n// ================================================= Reset Password ==================================================\n\nexport const resetPassword = User => {\n  return async dispatch => {\n    firebase\n      .auth()\n      .sendPasswordResetEmail(User.email)\n      .then(() =>\n        dispatch({\n          type: RESET_SUCCESS,\n          payload:\n            \"Check your inbox. We've sent you a secured reset link by e-mail.\",\n        })\n      )\n      .catch(function (error) {\n        // An error happened.\n        dispatch({\n          type: RESET_ERROR,\n          payload: `Some Error Occured Try Again !! ${error}`,\n        });\n      });\n  };\n};\n\n// =================================================Remove Nominate ==================================================\n\nexport const remove_nominate = user => {\n  return async dispatch => {\n    const db = firebase.firestore();\n    var userRef = db.collection('users').doc(user.Email);\n    userRef\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          console.log(doc.data().Nominations.length);\n          console.log(doc.data().Nominations.includes(user.movieId.toString));\n          if (doc.data().Nominations.includes(user.movieId)) {\n            // Get a new write batch\n            var batch = db.batch();\n\n            var usersRef = db.collection('users').doc(user.Email);\n            var moviesRef = db\n              .collection('movies')\n              .doc(user.movieId.toString());\n            batch.set(\n              usersRef,\n              {\n                Nominations: firebase.firestore.FieldValue.arrayRemove(\n                  user.movieId\n                ),\n              },\n              { merge: true }\n            );\n\n            if (moviesRef.Votes === 1) {\n              batch.delete(moviesRef);\n            } else {\n              batch.set(\n                moviesRef,\n                {\n                  MovieId: user.movieId.toString(),\n                  Votes: firebase.firestore.FieldValue.increment(-1),\n                },\n                { merge: true }\n              );\n            }\n            // Commit the batch\n            batch.commit().then(function () {\n              dispatch({\n                type: REMOVE_NOMINATE_MOVIE_SUCCESS,\n                payload: usersRef.Nominations,\n                successmsg: 'Movie has been removed from your Nominations',\n              });\n            });\n          } else if (!doc.data().Nominations.includes(user.movieId)) {\n            dispatch({\n              type: REMOVE_NOMINATE_MOVIE_ERROR,\n              payload: 'You have not nominated that movie',\n            });\n          } else {\n            dispatch({\n              type: REMOVE_NOMINATE_MOVIE_ERROR,\n              payload: 'You have already nominated 5 movies',\n            });\n          }\n        } else {\n          dispatch({\n            type: REMOVE_NOMINATE_MOVIE_ERROR,\n            payload: 'Some Error Occred. Better Luck Next Time !!',\n          });\n        }\n      })\n      .catch(function (error) {\n        dispatch({\n          type: REMOVE_NOMINATE_MOVIE_ERROR,\n          payload: `Some Error Occred. Try again !!`,\n        });\n      });\n  };\n};\n","F:\\cinecup\\src\\action\\types.js",[],"F:\\cinecup\\src\\key\\key.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Popup.js",["249"],"import React from 'react';\nimport './SearchPageStyle.css';\nfunction Popup({ selected, closePopup }) {\n  return (\n    <section className='popup'>\n      <div className='content'>\n        <div className='con'>\n          <h2>\n            {selected.Title} <span>({selected.Year})</span>\n          </h2>\n          <br />\n        </div>\n        <div className='plot'>\n          <img src={selected.Poster} />\n          <div className='pa'>\n            <p className='rating'>\n              <span>IMDB Rating : </span>\n              {selected.imdbRating} <br />\n              <br />\n              <span>Genre :</span> {selected.Genre}\n              <br></br>\n              <br></br>\n              <span>Actors : </span>\n              {selected.Actors}\n              <br></br>\n              <br></br>\n              {selected.Plot}\n            </p>\n          </div>\n        </div>\n        <button className='close' onClick={closePopup}>\n          Close\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;\n","F:\\cinecup\\src\\Components\\SearchPageComponent\\Results.js",["250"],"import React from 'react';\nimport './SearchPageStyle.css';\nimport Result from './Result';\nimport Img2 from '../../icons/Asset 1@2x.png';\nfunction Results({ results, openPopup }) {\n  if (results.length) {\n    return (\n      <section className='wrapper'>\n        {results.map(result => (\n          <Result key={result.id} result={result} openPopup={openPopup} />\n        ))}\n      </section>\n    );\n  } else {\n    return (\n      <div className='results'>\n        <img src={Img2} className='noresults' />\n        <h2>Nothing found</h2>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","F:\\cinecup\\src\\Components\\shareButton.js",[],"F:\\cinecup\\src\\Components\\SearchPageComponent\\Result.js",["251","252","253"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { nominate } from '../../action/user_actions';\nimport { blackListMovie } from '../../action/movie_actions';\nimport { Button, Hidden } from '@material-ui/core';\nimport ShareButton from '../shareButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\n\nimport Rating from '@material-ui/lab/Rating';\n\nfunction Result({ result, openPopup }) {\n  const useStyles = makeStyles({\n    but: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyItems: 'center',\n    },\n    button1: {\n      position: 'relative',\n    },\n  });\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [btn, setbtn] = useState(false);\n  const [blackbtn, setblackbtn] = useState(false);\n  const Nominate = e => {\n    e.preventDefault();\n    console.log(result);\n    const dataToSubmit = {\n      Email: user.user.Email,\n      movieId: result.id,\n    };\n    console.log(dataToSubmit);\n    dispatch(nominate(dataToSubmit));\n  };\n  const classes = useStyles();\n\n  function BlacklistMovieAlert(e) {\n    e.preventDefault();\n    swal({\n      title: 'Are you sure ?',\n      text: `${result.title} will be blacklisted and it's votes will be reduced to 0`,\n      icon: 'warning',\n      dangerMode: true,\n      buttons: true,\n    }).then(isConfirm => {\n      if (isConfirm) {\n        setblackbtn(true);\n        setbtn(true);\n        BlacklistMovie(e);\n      }\n    });\n  }\n\n  const BlacklistMovie = async e => {\n    e.preventDefault();\n    const dataToSubmit = {\n      movieId: result.id,\n      movieName: result.title,\n    };\n    console.log(dataToSubmit);\n    dispatch(blackListMovie(dataToSubmit));\n  };\n\n  const isdisabled = id => {\n    if (user.isLoggedIn && user.isVoting) {\n      if (user.blacklist && user.blacklist.includes(id.toString())) return true;\n      else if (user && user.user && user.user.Nominations.length) {\n        if (\n          user.user.Nominations.length === 5 &&\n          !user.user.Nominations.includes(id)\n        )\n          return true;\n      }\n      return false;\n    }\n    return true;\n  };\n  const isNominatedbyUser = id => {\n    if (user.isLoggedIn && user.isVoting) {\n      if (user && user.user && user.user.Nominations.length) {\n        if (user.user.Nominations.includes(id)) return true;\n      }\n      return false;\n    }\n    return false;\n  };\n  const isblackdisabled = id => {\n    if (user.isLoggedIn) {\n      if (user && user.blacklist && user.blacklist.includes(id.toString()))\n        return true;\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className='card_s'>\n      <div\n        className='front_s'\n        style={{\n          backgroundImage:\n            'url(' +\n            `https://image.tmdb.org/t/p/w500/${result.poster_path}` +\n            ')',\n        }}\n      ></div>\n      <div className='back_s'>\n        <div style={{ display: 'flex', flexDirection: 'column ' }}>\n          <div>\n            <h2>{result.title}</h2>\n            <h3>{result.release_date}</h3>\n            <Rating\n              precision='0.5'\n              name='read-only'\n              value={result.vote_average / 2}\n              readOnly\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              textAlign: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <Link to={`/movie/${result.id}`}>\n              <Button\n                className='button_s'\n                variant='outlined'\n                color='secondary'\n                style={{ marginBottom: 10 }}\n              >\n                Explore\n              </Button>\n            </Link>\n            <Button\n              className='button_s'\n              disabled={isdisabled(result.id)}\n              style={{ marginBottom: 10 }}\n              variant='outlined'\n              color='primary'\n              onClick={e => {\n                Nominate(e);\n              }}\n            >\n              {isNominatedbyUser(result.id) ? (\n                <span>Nominated</span>\n              ) : (\n                <span>Nominate</span>\n              )}\n            </Button>\n            {user.user && user.user.IsAdmin ? (\n              <Button\n                className='button_s'\n                variant='outlined'\n                color='secondary'\n                disabled={blackbtn || isblackdisabled(result.id)}\n                onClick={e => {\n                  BlacklistMovieAlert(e);\n                }}\n              >\n                Blacklist\n              </Button>\n            ) : (\n              <span></span>\n            )}\n            <div className='share_but_s'>\n              <ShareButton\n                url={`https://cinecup-9b0ac.web.app/movie/${result.id}`}\n                image={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\n                title={`${result.title} - ${result.overview} \n            Check out the trailer on this page`}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Result;\n","F:\\cinecup\\src\\theme.js",[],"F:\\cinecup\\src\\global.js",[],"F:\\cinecup\\src\\Components\\Toggle.js",["254"],"import React from 'react';\nimport { func, string } from 'prop-types';\n\nimport Switch from '@material-ui/core/Switch';\n\nconst Toggle = ({ theme, toggleTheme }) => {\n  const isLight = theme === 'light';\n  const ThemeContext = React.createContext(theme);\n  return (\n    <>\n      <Switch\n        checked={isLight}\n        onChange={toggleTheme}\n        name='Theme'\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n    </>\n  );\n};\n\nToggle.propTypes = {\n  toggleTheme: func.isRequired,\n  theme: string.isRequired,\n};\n\nexport default Toggle;\n","F:\\cinecup\\src\\Components\\UserProfile\\UserProfile.js",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import { React, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TMDB_API_KEY } from '../../key/key';\r\nimport axios from 'axios';\r\nimport firebase from 'firebase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport './UserStyles.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom';\r\nimport ShareButton from '../shareButton';\r\nimport Img2 from '../../icons/Asset 1@2x.png';\r\nimport ScrollToTop from '../scrollToTop';\r\nconst UserProfile = () => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    paper: {\r\n      padding: 2,\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      backgroundColor: '#101010',\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.user);\r\n  const { user_id } = useParams();\r\n  const [userDetail, setuserDetail] = useState({});\r\n  const [reviewDetail, setreviewDetail] = useState([]);\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    db.doc(`users/${user_id}`)\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          setuserDetail(doc.data());\r\n        } else {\r\n          console.log('No such document!');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('Error !!!');\r\n      });\r\n  }, []);\r\n\r\n  async function getMovieDetails(obj) {\r\n    let querySnapshot = obj.docs;\r\n    let arr = [];\r\n    for (let i = 0; i < querySnapshot.length; i++) {\r\n      let doc = querySnapshot[i];\r\n      console.log(doc);\r\n      try {\r\n        console.log(doc.data().mid);\r\n        let res = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${\r\n            doc.data().mid\r\n          }?api_key=${TMDB_API_KEY}`\r\n        );\r\n        arr.push({\r\n          ...res.data,\r\n          review: doc.data().review,\r\n          rating: doc.data().rating,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    db.collection('reviews')\r\n      .where('uid', '==', user_id)\r\n      .get()\r\n      .then(async function (querySnapshot) {\r\n        let arr = [];\r\n        arr = await getMovieDetails(querySnapshot);\r\n        console.log(arr);\r\n        setreviewDetail(arr);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='user_wrapper'>\r\n      <Grid container spacing={1} className='user_details_u'>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <img src={userDetail.ProfilePic} className='user_avatar' />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <h2>{userDetail.Name}</h2>\r\n            <h3 style={{ color: 'gold' }}>\r\n              Email : <span style={{ color: 'grey' }}>{userDetail.Email}</span>\r\n            </h3>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div className='users_reviews'>\r\n        <h1>Reviews</h1>\r\n\r\n        {reviewDetail.length ? (\r\n          reviewDetail.map(x => {\r\n            return (\r\n              <Grid container spacing={1} className='user_reviewed'>\r\n                <Grid item xs={12} md={3}>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500${x.poster_path}`}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6} className='reviewed'>\r\n                  <h2>{x.title}</h2>\r\n                  <Rating precision='0.5' value={x.rating} readOnly />\r\n                  <h3 className='user_review1'>\"{x.review}\"</h3>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Link to={`/movie/${x.id}`}>\r\n                    <Button\r\n                      variant='outlined'\r\n                      color='secondary'\r\n                      href='#outlined-buttons'\r\n                      style={{ margin: 10 }}\r\n                    >\r\n                      Explore\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })\r\n        ) : (\r\n          <div className='results'>\r\n            <img src={Img2} className='noresults' />\r\n            <h3>No movie reviewed yet</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ScrollToTop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","F:\\cinecup\\src\\Components\\scrollToTop.js",[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":72,"column":6,"nodeType":"278","endLine":72,"endColumn":8,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":8,"column":3,"nodeType":"282","messageId":"283","endLine":8,"endColumn":26},{"ruleId":"280","severity":1,"message":"284","line":33,"column":9,"nodeType":"282","messageId":"283","endLine":33,"endColumn":20},{"ruleId":"280","severity":1,"message":"284","line":87,"column":9,"nodeType":"282","messageId":"283","endLine":87,"endColumn":20},{"ruleId":"280","severity":1,"message":"284","line":141,"column":9,"nodeType":"282","messageId":"283","endLine":141,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":30,"column":8,"nodeType":"278","endLine":30,"endColumn":50,"suggestions":"286"},{"ruleId":"280","severity":1,"message":"287","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":13},{"ruleId":"280","severity":1,"message":"288","line":49,"column":9,"nodeType":"282","messageId":"283","endLine":49,"endColumn":26},{"ruleId":"276","severity":1,"message":"289","line":85,"column":6,"nodeType":"278","endLine":85,"endColumn":24,"suggestions":"290"},{"ruleId":"280","severity":1,"message":"291","line":87,"column":9,"nodeType":"282","messageId":"283","endLine":87,"endColumn":18},{"ruleId":"280","severity":1,"message":"292","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":26},{"ruleId":"280","severity":1,"message":"293","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":25},{"ruleId":"280","severity":1,"message":"294","line":5,"column":23,"nodeType":"282","messageId":"283","endLine":5,"endColumn":34},{"ruleId":"280","severity":1,"message":"295","line":25,"column":11,"nodeType":"282","messageId":"283","endLine":25,"endColumn":21},{"ruleId":"280","severity":1,"message":"296","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":19},{"ruleId":"280","severity":1,"message":"297","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":24},{"ruleId":"280","severity":1,"message":"298","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":16},{"ruleId":"280","severity":1,"message":"287","line":9,"column":8,"nodeType":"282","messageId":"283","endLine":9,"endColumn":13},{"ruleId":"280","severity":1,"message":"299","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":11},{"ruleId":"280","severity":1,"message":"300","line":67,"column":9,"nodeType":"282","messageId":"283","endLine":67,"endColumn":24},{"ruleId":"280","severity":1,"message":"301","line":124,"column":9,"nodeType":"282","messageId":"283","endLine":124,"endColumn":20},{"ruleId":"302","severity":1,"message":"303","line":44,"column":14,"nodeType":"304","messageId":"305","endLine":44,"endColumn":16},{"ruleId":"302","severity":1,"message":"303","line":48,"column":14,"nodeType":"304","messageId":"305","endLine":48,"endColumn":16},{"ruleId":"302","severity":1,"message":"303","line":52,"column":14,"nodeType":"304","messageId":"305","endLine":52,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":137,"column":11,"nodeType":"308","endLine":141,"endColumn":13},{"ruleId":"280","severity":1,"message":"309","line":169,"column":9,"nodeType":"282","messageId":"283","endLine":169,"endColumn":16},{"ruleId":"276","severity":1,"message":"310","line":196,"column":6,"nodeType":"278","endLine":196,"endColumn":15,"suggestions":"311"},{"ruleId":"280","severity":1,"message":"294","line":3,"column":23,"nodeType":"282","messageId":"283","endLine":3,"endColumn":34},{"ruleId":"280","severity":1,"message":"312","line":9,"column":17,"nodeType":"282","messageId":"283","endLine":9,"endColumn":22},{"ruleId":"280","severity":1,"message":"313","line":13,"column":8,"nodeType":"282","messageId":"283","endLine":13,"endColumn":19},{"ruleId":"280","severity":1,"message":"314","line":16,"column":19,"nodeType":"282","messageId":"283","endLine":16,"endColumn":24},{"ruleId":"276","severity":1,"message":"315","line":61,"column":6,"nodeType":"278","endLine":61,"endColumn":23,"suggestions":"316"},{"ruleId":"276","severity":1,"message":"317","line":110,"column":6,"nodeType":"278","endLine":110,"endColumn":8,"suggestions":"318"},{"ruleId":"276","severity":1,"message":"319","line":124,"column":6,"nodeType":"278","endLine":124,"endColumn":14,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":154,"column":11,"nodeType":"308","endLine":156,"endColumn":13},{"ruleId":"321","severity":1,"message":"322","line":205,"column":21,"nodeType":"308","endLine":208,"endColumn":23},{"ruleId":"321","severity":1,"message":"322","line":223,"column":25,"nodeType":"308","endLine":223,"endColumn":73},{"ruleId":"302","severity":1,"message":"323","line":258,"column":44,"nodeType":"304","messageId":"305","endLine":258,"endColumn":46},{"ruleId":"280","severity":1,"message":"324","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":19},{"ruleId":"280","severity":1,"message":"309","line":76,"column":9,"nodeType":"282","messageId":"283","endLine":76,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":168,"column":15,"nodeType":"308","endLine":168,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":173,"column":15,"nodeType":"308","endLine":173,"endColumn":55},{"ruleId":"280","severity":1,"message":"309","line":29,"column":9,"nodeType":"282","messageId":"283","endLine":29,"endColumn":16},{"ruleId":"276","severity":1,"message":"325","line":77,"column":6,"nodeType":"278","endLine":77,"endColumn":23,"suggestions":"326"},{"ruleId":"280","severity":1,"message":"327","line":102,"column":11,"nodeType":"282","messageId":"283","endLine":102,"endColumn":19},{"ruleId":"280","severity":1,"message":"288","line":182,"column":9,"nodeType":"282","messageId":"283","endLine":182,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":234,"column":22,"nodeType":"304","messageId":"330","endLine":234,"endColumn":23},{"ruleId":"328","severity":1,"message":"329","line":234,"column":75,"nodeType":"304","messageId":"330","endLine":234,"endColumn":76},{"ruleId":"276","severity":1,"message":"331","line":311,"column":6,"nodeType":"278","endLine":311,"endColumn":23,"suggestions":"332"},{"ruleId":"321","severity":1,"message":"322","line":332,"column":15,"nodeType":"308","endLine":332,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":360,"column":21,"nodeType":"308","endLine":362,"endColumn":23},{"ruleId":"321","severity":1,"message":"322","line":397,"column":15,"nodeType":"308","endLine":397,"endColumn":55},{"ruleId":"280","severity":1,"message":"297","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":24},{"ruleId":"280","severity":1,"message":"298","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":16},{"ruleId":"280","severity":1,"message":"287","line":18,"column":8,"nodeType":"282","messageId":"283","endLine":18,"endColumn":13},{"ruleId":"280","severity":1,"message":"288","line":60,"column":7,"nodeType":"282","messageId":"283","endLine":60,"endColumn":24},{"ruleId":"280","severity":1,"message":"301","line":101,"column":9,"nodeType":"282","messageId":"283","endLine":101,"endColumn":20},{"ruleId":"280","severity":1,"message":"333","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":23},{"ruleId":"280","severity":1,"message":"288","line":120,"column":9,"nodeType":"282","messageId":"283","endLine":120,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":172,"column":22,"nodeType":"304","messageId":"330","endLine":172,"endColumn":23},{"ruleId":"328","severity":1,"message":"329","line":172,"column":75,"nodeType":"304","messageId":"330","endLine":172,"endColumn":76},{"ruleId":"276","severity":1,"message":"334","line":241,"column":6,"nodeType":"278","endLine":241,"endColumn":23,"suggestions":"335"},{"ruleId":"280","severity":1,"message":"284","line":248,"column":9,"nodeType":"282","messageId":"283","endLine":248,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":543,"column":15,"nodeType":"308","endLine":543,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":577,"column":23,"nodeType":"308","endLine":580,"endColumn":25},{"ruleId":"321","severity":1,"message":"322","line":604,"column":15,"nodeType":"308","endLine":604,"endColumn":55},{"ruleId":"321","severity":1,"message":"322","line":654,"column":21,"nodeType":"308","endLine":657,"endColumn":23},{"ruleId":"321","severity":1,"message":"322","line":681,"column":13,"nodeType":"308","endLine":681,"endColumn":53},{"ruleId":"280","severity":1,"message":"309","line":38,"column":9,"nodeType":"282","messageId":"283","endLine":38,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":97,"column":15,"nodeType":"308","endLine":97,"endColumn":55},{"ruleId":"280","severity":1,"message":"336","line":9,"column":10,"nodeType":"282","messageId":"283","endLine":9,"endColumn":20},{"ruleId":"280","severity":1,"message":"337","line":9,"column":22,"nodeType":"282","messageId":"283","endLine":9,"endColumn":31},{"ruleId":"280","severity":1,"message":"338","line":10,"column":10,"nodeType":"282","messageId":"283","endLine":10,"endColumn":22},{"ruleId":"280","severity":1,"message":"339","line":35,"column":8,"nodeType":"282","messageId":"283","endLine":35,"endColumn":14},{"ruleId":"321","severity":1,"message":"322","line":113,"column":19,"nodeType":"308","endLine":113,"endColumn":68},{"ruleId":"321","severity":1,"message":"322","line":118,"column":19,"nodeType":"308","endLine":121,"endColumn":21},{"ruleId":"280","severity":1,"message":"333","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":23},{"ruleId":"280","severity":1,"message":"340","line":4,"column":10,"nodeType":"282","messageId":"283","endLine":4,"endColumn":16},{"ruleId":"280","severity":1,"message":"294","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":21},{"ruleId":"280","severity":1,"message":"341","line":153,"column":13,"nodeType":"282","messageId":"283","endLine":153,"endColumn":22},{"ruleId":"280","severity":1,"message":"342","line":154,"column":13,"nodeType":"282","messageId":"283","endLine":154,"endColumn":25},{"ruleId":"280","severity":1,"message":"343","line":177,"column":13,"nodeType":"282","messageId":"283","endLine":177,"endColumn":18},{"ruleId":"280","severity":1,"message":"344","line":245,"column":13,"nodeType":"282","messageId":"283","endLine":245,"endColumn":18},{"ruleId":"280","severity":1,"message":"345","line":247,"column":13,"nodeType":"282","messageId":"283","endLine":247,"endColumn":23},{"ruleId":"280","severity":1,"message":"343","line":272,"column":13,"nodeType":"282","messageId":"283","endLine":272,"endColumn":18},{"ruleId":"280","severity":1,"message":"341","line":337,"column":13,"nodeType":"282","messageId":"283","endLine":337,"endColumn":22},{"ruleId":"280","severity":1,"message":"342","line":338,"column":13,"nodeType":"282","messageId":"283","endLine":338,"endColumn":25},{"ruleId":"280","severity":1,"message":"344","line":340,"column":13,"nodeType":"282","messageId":"283","endLine":340,"endColumn":18},{"ruleId":"280","severity":1,"message":"345","line":342,"column":13,"nodeType":"282","messageId":"283","endLine":342,"endColumn":23},{"ruleId":"321","severity":1,"message":"322","line":14,"column":11,"nodeType":"308","endLine":14,"endColumn":40},{"ruleId":"321","severity":1,"message":"322","line":17,"column":9,"nodeType":"308","endLine":17,"endColumn":49},{"ruleId":"280","severity":1,"message":"346","line":6,"column":18,"nodeType":"282","messageId":"283","endLine":6,"endColumn":24},{"ruleId":"280","severity":1,"message":"347","line":27,"column":10,"nodeType":"282","messageId":"283","endLine":27,"endColumn":13},{"ruleId":"280","severity":1,"message":"309","line":39,"column":9,"nodeType":"282","messageId":"283","endLine":39,"endColumn":16},{"ruleId":"280","severity":1,"message":"348","line":8,"column":9,"nodeType":"282","messageId":"283","endLine":8,"endColumn":21},{"ruleId":"280","severity":1,"message":"294","line":3,"column":23,"nodeType":"282","messageId":"283","endLine":3,"endColumn":34},{"ruleId":"280","severity":1,"message":"349","line":7,"column":8,"nodeType":"282","messageId":"283","endLine":7,"endColumn":24},{"ruleId":"280","severity":1,"message":"350","line":9,"column":8,"nodeType":"282","messageId":"283","endLine":9,"endColumn":12},{"ruleId":"280","severity":1,"message":"351","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":22},{"ruleId":"280","severity":1,"message":"352","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":19},{"ruleId":"280","severity":1,"message":"353","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":19},{"ruleId":"280","severity":1,"message":"354","line":13,"column":8,"nodeType":"282","messageId":"283","endLine":13,"endColumn":17},{"ruleId":"280","severity":1,"message":"355","line":15,"column":8,"nodeType":"282","messageId":"283","endLine":15,"endColumn":18},{"ruleId":"280","severity":1,"message":"287","line":18,"column":8,"nodeType":"282","messageId":"283","endLine":18,"endColumn":13},{"ruleId":"280","severity":1,"message":"324","line":21,"column":8,"nodeType":"282","messageId":"283","endLine":21,"endColumn":19},{"ruleId":"280","severity":1,"message":"309","line":39,"column":9,"nodeType":"282","messageId":"283","endLine":39,"endColumn":16},{"ruleId":"280","severity":1,"message":"356","line":40,"column":9,"nodeType":"282","messageId":"283","endLine":40,"endColumn":13},{"ruleId":"276","severity":1,"message":"357","line":58,"column":6,"nodeType":"278","endLine":58,"endColumn":8,"suggestions":"358"},{"ruleId":"276","severity":1,"message":"357","line":105,"column":6,"nodeType":"278","endLine":105,"endColumn":8,"suggestions":"359"},{"ruleId":"321","severity":1,"message":"322","line":112,"column":13,"nodeType":"308","endLine":112,"endColumn":72},{"ruleId":"321","severity":1,"message":"322","line":133,"column":19,"nodeType":"308","endLine":135,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":160,"column":13,"nodeType":"308","endLine":160,"endColumn":53},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["362"],"no-unused-vars","'BLACKLIST_MOVIE_FAILURE' is defined but never used.","Identifier","unusedVar","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["363"],"'Paper' is defined but never used.","'useSnackbarStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["364"],"'openPopup' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'intervalId' is assigned a value but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Snackbarclasses' is assigned a value but never used.","'handleClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["365"],"'anime' is defined but never used.","'OwlCarousel' is defined but never used.","'props' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserDetails' and 'movie_id'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'cast' and 'creditsapi'. Either include them or remove the dependency array.",["367"],"React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["368"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'ShareButton' is defined but never used.","React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["369"],"'response' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'fetchData', 'result', and 'user.user'. Either include them or remove the dependency array.",["370"],"'LocalMoviesIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'user.blacklist'. Either include them or remove the dependency array.",["371"],"'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Hidden' is defined but never used.","'btn' is assigned a value but never used.","'ThemeContext' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["372"],["373"],"no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"394","fix":"396"},"Update the dependencies array to be: [dispatch]",{"range":"397","text":"398"},"Update the dependencies array to be: [dispatch, props.history, user, user.isLoggedIn]",{"range":"399","text":"400"},"Update the dependencies array to be: [search, user.queryString]",{"range":"401","text":"402"},"Update the dependencies array to be: [contest, fetchData]",{"range":"403","text":"404"},"Update the dependencies array to be: [getUserDetails, movie_id, user.isLoggedIn]",{"range":"405","text":"406"},"Update the dependencies array to be: [cast, creditsapi]",{"range":"407","text":"408"},"Update the dependencies array to be: [apiurl, result]",{"range":"409","text":"410"},"Update the dependencies array to be: [user.isLoggedIn, user.user]",{"range":"411","text":"412"},"Update the dependencies array to be: [fetchData, result, user.isLoggedIn, user.user]",{"range":"413","text":"414"},"Update the dependencies array to be: [fetchData, user.blacklist, user.isLoggedIn]",{"range":"415","text":"416"},"Update the dependencies array to be: [user_id]",{"range":"417","text":"418"},{"range":"419","text":"418"},[2634,2636],"[dispatch]",[1049,1091],"[dispatch, props.history, user, user.isLoggedIn]",[2357,2375],"[search, user.queryString]",[5149,5158],"[contest, fetchData]",[2372,2389],"[getUserDetails, movie_id, user.isLoggedIn]",[3651,3653],"[cast, creditsapi]",[3991,3999],"[apiurl, result]",[2502,2519],"[user.isLoggedIn, user.user]",[9297,9314],"[fetchData, result, user.isLoggedIn, user.user]",[7011,7028],"[fetchData, user.blacklist, user.isLoggedIn]",[1973,1975],"[user_id]",[3182,3184]]